===========================================================================
=
= File:         changes.txt
= Date:         Wed 20 Feb 2008 15:10
= Author:       Ken Basye
= Description:  Global change log for this project.
=
= This file is part of Onyx   http://onyxtools.sourceforge.net
=
= Copyright 2008 The Johns Hopkins University
=
= Licensed under the Apache License, Version 2.0 (the "License").
= You may not use this file except in compliance with the License.
= You may obtain a copy of the License at
=   http://www.apache.org/licenses/LICENSE-2.0
= 
= Unless required by applicable law or agreed to in writing, software
= distributed under the License is distributed on an "AS IS" BASIS,
= WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
= implied.  See the License for the specific language governing
= permissions and limitations under the License.
=
===========================================================================

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
NOTE:  THIS FILE IS MAINTAINED AUTOMATICALLY.  DO NOT REMOVE THIS MARKER!
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
$$$$_MARKER_FOR_INSERTIONS_$$$$

________________________________________________________________________________
Commit at 2009-09-21 22:34:43 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Fix doc/toplevelorg.rst to avoid dangling references
Last revno: 510   Last revision id: hsw@jhu.edu-20090922022406-wck1x08b9shei841
Last revision date: 2009-09-21 22:24:06 -0400

modified:
  doc/sphinx/toplevelorg.rst
    Remove references to project and sandbox pages since they've been removed.

________________________________________________________________________________
Commit at 2009-09-21 22:24:06 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from onyx_doc
Message: Fix errant <br> on front page.
Last revno: 509   Last revision id: hsw@jhu.edu-20090922021809-fjwa004hzionjt36
Last revision date: 2009-09-21 22:18:09 -0400

modified:
  doc/sphinx/templates/index.html
    Removed an unnecessary <br>.

________________________________________________________________________________
Commit at 2009-09-21 22:18:09 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from onyx_doc
Message: Added a bona-fide tutorial page to the docs.
Last revno: 508   Last revision id: hsw@jhu.edu-20090922013625-oks06z0rge7nr8td
Last revision date: 2009-09-21 21:36:25 -0400

modified:
  doc/sphinx/SConscript
  doc/sphinx/contents.rst
  doc/sphinx/templates/index.html
added:
  doc/sphinx/tutorials.rst
    Added some hard-wired links to modules with doctests that have a
    tutorial-like quality.

________________________________________________________________________________
Commit at 2009-09-21 21:36:25 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from onyx_doc
Message: Work on frontpage of doc and other minor cleanup.
Last revno: 507   Last revision id: kbasye1@jhu.edu-20090921224125-cb2zpa75ivgmwhu5
Last revision date: 2009-09-21 18:41:25 -0400

modified:
  doc/sphinx/SConscript
  doc/sphinx/conf.py
  doc/sphinx/contents.rst
  doc/sphinx/intro.rst
  doc/sphinx/templates/index.html
  py/onyx/version.py
added:
  doc/sphinx/static/onyx.css
    More work related to the front page of the documentation.  Prevent
    project.rst, sandbox.rst, vision.rst and faq.rst from being part of the
    sphinx doc build.  Additional rearrangement in the SConscript file to
    abstract sets of files.  Beginning of making our own html style for onyx.  I
    still wasn't able to correctly move the sidebar to the left, so our style
    just inherits from the sphinxdoc style.  Tweak versioning and conf.py so as
    to set htlm_short_title for sphinx.  Reintroduce developer.rst into the
    generated doc.  Some changes to the front page prose.

modified:
  py/onyx/istext.py
    Added a test for another case.
  site_scons/site_init.py
    Added a correct license!  Improved the PYTHONPATH error message to mention
    that symbolic links are a problem and to provide a shell variable-assignment
    string for cutting and pasting.

modified:
  changes.txt
    Added commentary about two sets of modifications I had checked in for revision 506.

________________________________________________________________________________
Commit at 2009-09-21 18:41:25 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Tweak bin/release to only exclude (never delete) and add a few exclusions
Last revno: 506   Last revision id: hsw@jhu.edu-20090921175701-gygyehp2d6jukcs0
Last revision date: 2009-09-21 13:57:01 -0400

modified:
  bin/release
    Changed to only exclude things from the release tarball - we used to
    actually delete some files from the build directory.  Note that as of now,
    if you cause a new file(s) to appear in the build directory and you don't
    want them to appear in the release tarball, you have to add them to the
    exclusion list in this script.  
  doc/licenses/SConscript
    Added a reference to LICENSE_sph2pipe so it shows up in the build dir.


________________________________________________________________________________
Commit at 2009-09-21 13:57:01 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from onyx_doc
Message: Changes to sphinx configuration to have a custom front page.
Last revno: 505   Last revision id: hsw@jhu.edu-20090921162551-21tn1ohk4w90wo31
Last revision date: 2009-09-21 12:25:51 -0400

modified:
  doc/sphinx/SConscript
  doc/sphinx/conf.py
added:
  doc/sphinx/static
  doc/sphinx/templates
  doc/sphinx/templates/index.html
  doc/sphinx/templates/indexsidebar.html
  doc/sphinx/templates/layout.html
renamed:
  doc/sphinx/index.rst ==> doc/sphinx/contents.rst
  doc/sphinx/onyx3.png ==> doc/sphinx/static/onyx3.png
    Changes to let us have a customized front page for the documentation.  We do
    this by overriding some templates.  I also switched to using the sphinxdoc
    theme.  I put developer.rst back into the toctree.  Overall, this is a work
    in progress and isn't quite ready for release: some of the links don't work,
    and some of the documentation needs to be moved around in the toctree, and we
    may want to change the sidebar location, etc.

modified:
  site_scons/site_tools/PyTools.py
    Added creation of a symbolic link from the top of the build to the
    index.html file in the sphinx doc.
  py/onyx/dataflow/source.py
    Rearranged the order of some of the prose in the documentation.

________________________________________________________________________________
Commit at 2009-09-21 12:25:51 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from onyx_doc
Message: Fix typo and theme in sandbox/sphinx/expt3.
Last revno: 504   Last revision id: hsw@jhu.edu-20090921152157-mn5skcwbdv7h9a53
Last revision date: 2009-09-21 11:21:57 -0400

modified:
  sandbox/sphinx/expt3/_templates/frontpage.html
  sandbox/sphinx/expt3/conf.py
    Fix a typo and switch to the theme that Sphinx uses for its own
    documentation.

________________________________________________________________________________
Commit at 2009-09-21 11:21:57 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from onyx_main
Message: Added a toy sphinx project with a custom front page.  Documented a problem with mpg123.
Last revno: 503   Last revision id: kbasye1@jhu.edu-20090921132851-v3gs9alql99fom9l
Last revision date: 2009-09-21 09:28:51 -0400

added:
  sandbox/sphinx/expt3
  sandbox/sphinx/expt3/Makefile
  sandbox/sphinx/expt3/README.txt
  sandbox/sphinx/expt3/_static
  sandbox/sphinx/expt3/_templates
  sandbox/sphinx/expt3/_templates/frontpage.html
  sandbox/sphinx/expt3/conf.py
  sandbox/sphinx/expt3/developer.rst
  sandbox/sphinx/expt3/extensions
  sandbox/sphinx/expt3/extensions/auto_section.py
  sandbox/sphinx/expt3/installation.rst
  sandbox/sphinx/expt3/make.bat
  sandbox/sphinx/expt3/master_toctree_doc.rst
  sandbox/sphinx/expt3/reference.rst
  sandbox/sphinx/expt3/tutorial.rst
  sandbox/sphinx/expt3/user.rst
    Added a toy sphinx project that has a custom front page.
added:
  sandbox/sphinx/expt1/README.txt
  sandbox/sphinx/expt2/README.txt
    Added readmes to these to toy sphinx projects.

modified:
  py/onyx/audio/audiodata.py
    Added further SKIPed doctests that use problem.mp3 to show that the current
    version reads some audio out of the bogus file (part of an ongoing
    discussion with the mpg123 maintainers regard the behavior, that I consider
    a defect).

________________________________________________________________________________
Commit at 2009-09-21 09:28:51 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Update release script; other minor fixes
Last revno: 502   Last revision id: hugh@vmubuntu-20090917090618-eq4z23saucyd1nuk
Last revision date: 2009-09-17 05:06:18 -0400

  Some changes to implement a new release system in which we don't include
  platform-specific files in releases.  This means downloaders of a release will
  do their own building.
modified:
  SConstruct
    Add HOME to the list of variables imported from the users env by SCons.
    This fixes a problem with building on systems using ccache.  SCons has a
    known bad interaction with the Linux ccache system.  SCons quite
    deliberately avoids propagating your environment into the processes it runs
    when it builds - this is considered a feature.  ccache, on the other hand,
    won't run if you don't have HOME set in your environment.
  bin/release
    A pretty complete overhaul of this script to get it doing what we need for
    releases.  It now finds the correct build directory by itself and extracts
    both test results and built doc into sub-level tar files, then runs tar with
    many exclusions to build the release tarball.  This script should be
    rewritten in Python.
  doc/sphinx/user.rst
    Tweaked instructions to make it clear you have to build, even as a user.
  py/onyx/__init__.py
    Arranged docstring whitespace to pacify Sphinx and used :data: directives on
    two module attributes which are variables.

________________________________________________________________________________
Commit at 2009-09-17 05:06:18 -0400 by Hugh Secker-Walker <hugh@VmUbuntu> from code
Message: Fixes to get sph2pipe to build under Ubuntu.
Last revno: 501   Last revision id: hsw@jhu.edu-20090917220611-geph8zgjy0m9u3hw
Last revision date: 2009-09-17 18:06:11 -0400

modified:
  cpp/sph2pipe/sph_convert.h
    Changes to get the code to compile under Ubuntu.  The orignial problem was
    that swab() wasn't declared.  The man page for Darwin said to include
    <unistd.h>, but that didn't work on Ubuntu.  The man page for Ubuntu said to
    define _XOPEN_SOURCE prior to including <unistd.h>.  That only worked if
    these declarations came early in sph_convert.h.  But, that broke <string.h>
    such that strdup() was no longer declared....  So I added an explicit
    declaration of strdup(), ugggg.
  cpp/sph2pipe/SConscript
    Include the math library for the sph2pipe program.

________________________________________________________________________________
Commit at 2009-09-17 18:06:11 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from onyx_main
Message: Changes to make SCons build and test the sph2pipe binary.  Start on separating out the meta project.  Cleanup.
Last revno: 500   Last revision id: hsw@jhu.edu-20090917142101-emys7glwy0v93kfo
Last revision date: 2009-09-17 10:21:01 -0400

added:
  cpp/sph2pipe/README.txt
  cpp/sph2pipe/SConscript
  cpp/sph2pipe/sph2pipe-tests.log-ref
    Fleshed out sph2pipe directory so the executable gets built, tested, and
    installed.  The SConscript has an instace of how to install binaries that we
    build.
modified:
  cpp/sph2pipe/file_headers.c
  cpp/sph2pipe/shorten_x.c
  cpp/sph2pipe/sph2pipe.c
  cpp/sph2pipe/sph_convert.h
    Modifications of the version 2.5 sources so as to get sph2pipe to compile
    without errors or warnings:
      - remove unused variables
      - initialize variables that the compiler can't tell will always get set
      - used recommended portable formatting for off_t types
      - added void type to a function
      - added explicit cast for signed/unsigned pointer conversion
added:
  cpp/sph2pipe/123_1pcbe_shn.sph
  cpp/sph2pipe/123_1pcle_shn.sph
  cpp/sph2pipe/123_1ulaw_shn.sph
  cpp/sph2pipe/123_2alaw.sph
  cpp/sph2pipe/123_2pcbe_shn.sph
  cpp/sph2pipe/123_2pcle_shn.sph
  cpp/sph2pipe/123_2ulaw_shn.sph
    Data files for simple testing of sph2pipe.
modified:
  SConscript
    Added ./cpp/sph2pipe to the list of directories with a SConscript that must be run.    
  site_scons/site_tools/ProjectTools.py
  site_scons/site_tools/PyTools.py
    Added support for installing built executables into the platform-dependent
    bin directories in both the source tree and the build tree.
  .bzrignore
    Added pattern so as to ignore the platform-specific subdirectories that get
    built under ./bin
  SConstruct
    Copy the PATH with which SCons (Python) is run into the environment for
    SCons's subprocesses.  This supports, e.g. a user having a ~/bin on their
    PATH, where they put overrides or redirections for binaries, e.g. in my case,
    ./bin/sphinx-build points to /opt/local/bin/sphinx-build2.6
  cpp/liveaudio/mpg123wrap.c
    Minor changes attempting to work around the problem that the newer mpg123
    library (1.9.0) behaves differently on bogus mp3 files.  Adopted a recommended
    way of portably formatting values of the off_t type.
  py/onyx/audio/audiodata.py
    Removed __all__.  Switched docstrings with embedded, quoted, non-ascii
    characters to be raw strings.  Used +SKIP doctest directive for skipped
    tests instead of having them be commented out.  Added a skipped test that
    shows the new mpg123 behavior.  Minor cleanup.
removed:
  bin/darwin-posix-i386-32bit-le
  bin/darwin-posix-i386-32bit-le/sph2pipe
  bin/linux2-posix-i386-32bit-le
  bin/linux2-posix-i386-32bit-le/sph2pipe
  bin/linux2-posix-x86_64-64bit-le
  bin/linux2-posix-x86_64-64bit-le/sph2pipe
    These now get built by SCons

added:
  py/oproject.py
    A start at separating out the onyxproject tools from the Onyx project.
modified:
  py/SConscript
    Added oproject.py to the PyFile list.
  py/onyx/__init__.py
    Added documentation for the onyx package attributes, namely platform and
    name.  Use oproject to get platform.  Removed __all__.  Minor cleanup.

modified:
  py/onyx/audio/liveaudio.py
  py/onyx/builtin.py
  py/onyx/containers/__init__.py
  py/onyx/dataflow/__init__.py
  py/onyx/doctestmod.py
  py/onyx/signalprocessing/__init__.py
  py/onyx/signalprocessing/window.py
  py/onyx/util/__init__.py
    Removed assignment to module attribute __all__.  Replaced glob imports with
    explicit names.

modified:
  bin/maketags
    Added doc/sphinx to the set of directories in which to look for source files.
  doc/sphinx/conf.py
    Moved the character encoding declaration to the second line of the file
  doc/sphinx/user.rst
    Added some additional notes about prerequisite tools for building and testing.
  py/README.txt
    Added a note about this file being somewhat superceded by doc/sphinx/*.rst files.
  templates/SConscript.template
    Added this commented-out template for doc building:
      ###env.DocBuildThisPackage('XXX package title')

modified:
  projects/ddt/SConscript
removed:
  projects/ddt/__init__.py
    Removed a useless package file that came to my attention because 
    it set __all__.

________________________________________________________________________________
Commit at 2009-09-17 10:21:01 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from onyx_main
Message: Added unmodified source files for sph2pipe.
Last revno: 499   Last revision id: kbasye1@jhu.edu-20090915152230-ar6p046bzn4vd9m2
Last revision date: 2009-09-15 11:22:30 -0400

added:
  cpp/sph2pipe
  cpp/sph2pipe/bitshift.h
  cpp/sph2pipe/file_headers.c
  cpp/sph2pipe/shorten_x.c
  cpp/sph2pipe/sph2pipe.c
  cpp/sph2pipe/sph_convert.h
  cpp/sph2pipe/ulaw.h
    Added the unmodified source files for sph2pipe.  These files were copied
    from sph2pipe version 2.5 which was obtained from the LDC in February 2009:
      ftp://ftp.ldc.upenn.edu/pub/ldc/misc_sw/sph2pipe_v2.5.tar.gz
    See also the existing license file: 
      doc/licenses/LICENSE_sph2pipe

________________________________________________________________________________
Commit at 2009-09-15 11:22:30 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Minor changes in cpp/syck and audiodata.py to fix build on a new platform
Last revno: 498   Last revision id: kbasye1@jhu.edu-20090915140440-cyjvou2doszl896g
Last revision date: 2009-09-15 10:04:40 -0400

modified:
  cpp/syck/Emit.c
  cpp/syck/Parse.c
  cpp/syck/SConscript
  cpp/syck/YTS.c
  cpp/syck/syck.c
    Eliminate some warnings and return to using warnings==errors as much as
    possible.  Also I removed a '-Wno-all' flag that GCC didn't like on one
    platform.  
  py/onyx/audio/audiodata.py
    Remove some digits in a few places where we were already using ellipsis in
    doctests since a new platform need this.  I also added one new use of
    ellipsis where a 32-bit sample was off by one from the norm on one platform.

________________________________________________________________________________
Commit at 2009-09-15 10:04:40 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Build syck shared library from source to help eliminate platform-specific files
Last revno: 497   Last revision id: kbasye1@jhu.edu-20090821200609-7so0jnskwr6gr40u
Last revision date: 2009-08-21 16:06:09 -0400

  Overhaul of how we provide syck, the YAML parser used in yamldata.py.
  Previously we did this with a pre-built shared library we checked in for each
  platform.  Now we build the shared library from source at part of each build.
  This is part of a larger project to move away from having anything platform
  dependent checked in, so that we can more reliably build on any Posix-based
  platform.  
modified:
  SConscript
    Add cpp/syck/SConscript
  cpp/pylib/SConscript
    Eliminate references to deleted stuff.  Note that this SConscript now just
    makes sure the README.txt file in this directory gets into the build.
added:
  cpp/syck
  cpp/syck/Basic.c
  cpp/syck/CuTest.c
  cpp/syck/CuTest.h
  cpp/syck/Emit.c
  cpp/syck/Parse.c
  cpp/syck/README.txt
  cpp/syck/SConscript
  cpp/syck/YTS.c
  cpp/syck/_syckmodule.c
  cpp/syck/bytecode.c
  cpp/syck/emitter.c
  cpp/syck/gram.c
  cpp/syck/gram.h
  cpp/syck/handler.c
  cpp/syck/implicit.c
  cpp/syck/node.c
  cpp/syck/syck.c
  cpp/syck/syck.h
  cpp/syck/syck_st.c
  cpp/syck/syck_st.h
  cpp/syck/test_YTS.log-ref
  cpp/syck/test_basic.log-ref
  cpp/syck/test_emit.log-ref
  cpp/syck/test_parse.log-ref
  cpp/syck/token.c
  cpp/syck/yaml2byte.c
  cpp/syck/yamlbyte.h
    Added a complete set of syck sources, the syck tests, and the C side of the
    PySyck wrapper (_syckmodule.c).  Everything gets built in this one
    directory, and the syck tests are run here also.  This is syck version 0.6.1
    with some patches by the author of PySyck, with some changes I made to get
    things working, as described in README.txt.  Note that because some of the
    syck sources are machine-generated by tools that don't worry about warnings,
    I had to turn off the warnings==errors flag in this SConscript file.
  py/syck/test
  py/syck/test/test_build.py
  py/syck/test/test_dumper.py
  py/syck/test/test_emitter.py
  py/syck/test/test_loader.py
  py/syck/test/test_node.py
  py/syck/test/test_parser.py
  py/syck/test/test_pickle.py
  py/syck/test/test_syck.py
  py/syck/test/test_threads.py
  py/syck/test/test_unicode.py
    These are the PySyck test scripts.  Right now they aren't hooked up to the
    build, mostly because they take a long time to run.  I had to disable a
    number of the tests because they fail in ways that seem to be expected.
    Although perhaps there's a version of syck someplace that would pass them,
    but I can't find it.  
removed:
  cpp/pylib/README_syck.txt
  cpp/pylib/darwin-posix-i386-32bit-le
  cpp/pylib/darwin-posix-i386-32bit-le/_syck.so
  cpp/pylib/linux2-posix-i386-32bit-le
  cpp/pylib/linux2-posix-i386-32bit-le/_syck.so
  cpp/pylib/linux2-posix-x86_64-64bit-le
  cpp/pylib/linux2-posix-x86_64-64bit-le/_syck.so Removed platform-dependent
    syck libraries and the platform-dependent directories in pylib.  We still
    create and populate a platform-dependent directory in the build directory.  

________________________________________________________________________________
Commit at 2009-08-21 16:06:08 -0400 by Ken Basye <kbasye1@jhu.edu> from code_pure
Message: Add version.py, NO_DOC build option, fix release script, other minor fixes
Last revno: 496   Last revision id: hsw@jhu.edu-20090821155816-6trysberxxg85j4b
Last revision date: 2009-08-21 11:58:16 -0400

modified:
  SConstruct 
    Added NO_DOC command line option, which defaults to False.  If True,
    documentation building is skipped with a short message as Scons starts up.
  bin/release
    Fixed a bug that was causing log-ref files to be included in the test
    results tarfile, and removed from the source directory.
  doc/sphinx/conf.py
    Use the new version.py module to get the version number.  This means that
    this module is no longer the location where the major and minor version
    numbers are kept.
  doc/sphinx/user.rst
    Tweak instructions so that users will verify installation by building with
    bin/scons NO_DOC=1, since we don't want to require Sphinx for users.
  py/onyx/SConscript
    Add version.py
  py/onyx/graph/dynamicgraph.py
    Fix import of randomgraph, which had been done in a doctest string.  This
    caused a build failure when doc-building was skipped.
  site_scons/site_tools/PyTools.py
    Implement NO_DOC option.
added:
  py/onyx/version.py
    This module defines the version number.  It works by extracting the last
    revno from changes.txt and adding 1.  If it can, it verifies that this
    number matches what bzr thinks is the current revision number.


________________________________________________________________________________
Commit at 2009-08-21 11:58:16 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Improvements to user documentation.
Last revno: 495   Last revision id: kbasye1@jhu.edu-20090821152922-5517dmztu546s12e
Last revision date: 2009-08-21 11:29:22 -0400

modified:
  doc/sphinx/conf.py
  doc/sphinx/core.rst
  doc/sphinx/developer.rst
  doc/sphinx/faq.rst
  doc/sphinx/index.rst
  doc/sphinx/projects.rst
  doc/sphinx/sandbox.rst
  doc/sphinx/toplevelorg.rst
  doc/sphinx/user.rst
  doc/sphinx/vision.rst
  py/README.txt
    Changes to reduce the use of 'toolkit' in the docs and improve the usage of
    'Onyx'.  Also expanded the installation description and examples in
    user.rst, removed fussing about sph2pipe, added some web links to the
    packages we depend on.

________________________________________________________________________________
Commit at 2009-08-21 11:29:22 -0400 by Ken Basye <kbasye1@jhu.edu> from code_pure
Message: Add sph2pipe license file, tweak release and scons scripts
Last revno: 494   Last revision id: kbasye1@jhu.edu-20090821021018-xzw18edy0yka6bkf
Last revision date: 2009-08-20 22:10:18 -0400

modified:
  bin/release
    Stop removing _sources from the doc _build directory since that's where the
    html pages expect to find the ReST source they show via the "Show Source"
    link.  
  bin/scons
    Always runs scons.py with the --duplicate=hard-copy option.  This prevents
    Scons from trying to duplicate soft links, i.e. symlinks.  At present, when 
    Scons copies symlinks it makes the copy absolute, which isn't what we want,
    and there seems to be no way to get Scons to duplicate relative links.  
added:
  doc/licenses/LICENSE_sph2pipe
    Added a license file for sph2pipe, which we distribute as binaries in the
    bin directory.  I extracted this from the sph2pipe readme file, which I got
    from the LDC website.

________________________________________________________________________________
Commit at 2009-08-20 22:10:18 -0400 by Ken Basye <kbasye1@jhu.edu> from code_pure
Message: Improve bin/release script
Last revno: 493   Last revision id: hsw@jhu.edu-20090820220327-2zforzj38u3vg1x2
Last revision date: 2009-08-20 18:03:27 -0400

modified:
  bin/release
    Added commands to delete several subdirectories of ./doc/sphinx/_build that
    we don't need to release.  Also delete .sconsign.dblite before making the
    releast tarball.


________________________________________________________________________________
Commit at 2009-08-20 18:03:27 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: More cleanup for the release.
Last revno: 492   Last revision id: kbasye1@jhu.edu-20090820214008-j7eice1w51996jfq
Last revision date: 2009-08-20 17:40:08 -0400

modified:
  SConscript
  doc/SConscript
  doc/SoftwareQuality.txt
  doc/sphinx/SConscript
  doc/sphinx/index.rst
renamed:
  doc/ROI-Assn_Form-COE_Toolkit.doc ==> doc/internal/ROI-Assn_Form-COE_Toolkit.doc
  doc/Supplemental_Software_Implementation_Form_CoE_Toolkit.doc ==> doc/internal/Supplemental_Software_Implementation_Form_CoE_Toolkit.doc
  doc/one_page.doc ==> doc/one_page.pdf
  doc/release.txt ==> doc/internal/release.txt
    Changes in order to limit what goes into a release.  Some cleanup of the
    documentation to use Onyx instead of Toolkit.

________________________________________________________________________________
Commit at 2009-08-20 17:40:07 -0400 by Ken Basye <kbasye1@jhu.edu> from code_pure
Message: Remove py/onyx/rename.py
Last revno: 491   Last revision id: hsw@jhu.edu-20090820213218-fcgaqt0arxs6jboj
Last revision date: 2009-08-20 17:32:18 -0400

removed:
  py/onyx/rename.py
    This file was some code I wrote to help in the previous renaming.  It might
    be useful again someday as an example, but it's too specific to keep around.

________________________________________________________________________________
Commit at 2009-08-20 17:32:18 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Clean up prose and comments for the release.
Last revno: 490   Last revision id: kbasye1@jhu.edu-20090820212307-4nf77ut3zu7lf4dn
Last revision date: 2009-08-20 17:23:07 -0400

modified:
  README.txt
  cpp/liveaudio/SConscript
  doc/sphinx/intro.rst
  projects/datatools/SConscript
  py/onyx/__init__.py
    Clean up prose and comments for the release.

________________________________________________________________________________
Commit at 2009-08-20 17:23:07 -0400 by Ken Basye <kbasye1@jhu.edu> from code_pure
Message: Rename Onyx.py to ProjectTools.py in site_tools
Last revno: 489   Last revision id: hsw@jhu.edu-20090820210441-npdkosddkz9p2u13
Last revision date: 2009-08-20 17:04:41 -0400

modified:
  SConstruct
  py/onyx/lexicon/SConscript
    Stray HLTCoE reference removed.
  site_scons/site_tools/PyTools.py
  site_scons/site_tools/SConscript
renamed:
  site_scons/site_tools/Onyx.py ==> site_scons/site_tools/ProjectTools.py
    Renamed this file since we'd like to keep this part of the code somewhat
    generic.  There may be more to do in this regard, in particular we may want
    to avoid setting variables in the environment that start with ONYX.  


________________________________________________________________________________
Commit at 2009-08-20 17:04:41 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Manual fixes to two headers.
Last revno: 488   Last revision id: hsw@jhu.edu-20090820191318-vg96huk6m5rrsm8j
Last revision date: 2009-08-20 15:13:18 -0400

modified:
  py/onyx/lint.py
    Start on updating to handle the new headers.
  site_scons/site_tools/Onyx.py
  site_scons/site_tools/PyTools.py
    Manually updated the headers on these files.

________________________________________________________________________________
Commit at 2009-08-20 15:13:18 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: Ensure that the license gets into the release.
Last revno: 487   Last revision id: hsw@jhu.edu-20090820190437-xs9e3j2nkvq4gisq
Last revision date: 2009-08-20 15:04:37 -0400

modified:
  SConscript
    Added LICENSE.txt and NOTICE.txt to Local files so that they make it into
    the release.

________________________________________________________________________________
Commit at 2009-08-20 15:04:37 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: Added license file and notice file.
Last revno: 486   Last revision id: hsw@jhu.edu-20090820185720-avndhlu0vjloluhy
Last revision date: 2009-08-20 14:57:20 -0400

added:
  LICENSE.txt
  NOTICE.txt
    Added a copy of the Apache 2 license.  Added a NOTICE file for attributions.

________________________________________________________________________________
Commit at 2009-08-20 14:57:20 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Change to Apache license.  Normalize file-header boilerplate.
Last revno: 485   Last revision id: hsw@jhu.edu-20090820155308-me457t09kpjf3d5s
Last revision date: 2009-08-20 11:53:08 -0400

modified:
  py/onyx/lint.py
    Added logic and options to allow updating of headers on files inplace.
modified:
  README.txt
  SConscript
  SConstruct
  bin/README.txt
  bin/bzrtool.py
  bin/bzrtoolwrap.sh
  bin/bzrwrap.sh
  bin/chart.sh
  bin/demo1.sh
  bin/display.sh
  bin/fsdemo.sh
  bin/livedemo.sh
  bin/maketags
  bin/release
  bin/scons
  bin/vu.sh
  bin/vu2.sh
  changes.txt
  cpp/floatutils/SConscript
  cpp/floatutils/floatutils.cpp
  cpp/floatutils/floatutils.h
  cpp/floatutils/floatutils_wrap.cpp
  cpp/floatutils/testfloatutils.cpp
  cpp/liveaudio/LiveAudioInput.cpp
  cpp/liveaudio/LiveAudioInput.h
  cpp/liveaudio/SConscript
  cpp/liveaudio/audio.cpp
  cpp/liveaudio/audio.h
  cpp/liveaudio/audiomodule.cpp
  cpp/liveaudio/ctypes_defs.h
  cpp/liveaudio/delay_line.h
  cpp/liveaudio/main.cpp
  cpp/liveaudio/mpg123wrap.c
  cpp/liveaudio/mpg123wrap.h
  cpp/liveaudio/onyx_defs.h
  cpp/liveaudio/ring_buffer_threads.h
  cpp/liveaudio/sndfilewrap.c
  cpp/liveaudio/sndfilewrap.h
  cpp/pylib/README.txt
  cpp/pylib/README_syck.txt
  cpp/pylib/SConscript
  data/htk_r1_adg0_4/SConscript
  doc/SConscript
  doc/SoftwareQuality.txt
  doc/images/SConscript
  doc/images/demo-2009-02-02.py
  doc/images/htk_mfcc.dot
  doc/internal/brainstorming-2008-11-25.txt
  doc/internal/coe-diagram-planning-2008-11.txt
  doc/internal/graphProcessorNotes.txt
  doc/internal/longtermThingsToDo.txt
  doc/internal/names.txt
  doc/internal/outreachPlanning.txt
  doc/internal/planning-2008-11-04.txt
  doc/internal/planning-2009-01-13.txt
  doc/internal/planning-2009-02-03.txt
  doc/licenses/SConscript
  doc/presentations/SConscript
  doc/presentations/abstract-13-jan-2009.txt
  doc/presentations/fsdemo_script.txt
  doc/presentations/livedemo_script.txt
  doc/presentations/outline-13-jan-2009.txt
  doc/readmes/Mac-OS-X.txt
  doc/readmes/SConscript
  doc/readmes/bzrGuide.txt
  doc/release.txt
  doc/sphinx/SConscript
  doc/sphinx/conf.py
  doc/sphinx/core.rst
  doc/sphinx/developer.rst
  doc/sphinx/extensions/auto_section.py
  doc/sphinx/faq.rst
  doc/sphinx/glossary.rst
  doc/sphinx/index.rst
  doc/sphinx/intro.rst
  doc/sphinx/miriam/miriam.rst
  doc/sphinx/projects.rst
  doc/sphinx/sandbox.rst
  doc/sphinx/toplevelorg.rst
  doc/sphinx/user.rst
  doc/sphinx/vision.rst
  doc/thirdParty.txt
  doc/versioning.txt
  projects/chartrecorder/SConscript
  projects/chartrecorder/chart.py
  projects/datatools/SConscript
  projects/datatools/parseLDCcatalog.py
  projects/datatools/unlistedLDCinfo.py
  projects/ddt/README.txt
  projects/ddt/SConscript
  projects/ddt/__init__.py
  projects/ddt/bitlm.py
  projects/ddt/datagen.py
  projects/ddt/ddt.py
  projects/ddt/twoclass.py
  projects/htk_test/README_byrne.txt
  projects/htk_test/SConscript
  projects/htk_test/labeledData.dot
  projects/htk_test/test0.py
  projects/lm/SConscript
  projects/lm/__init__.py
  projects/lm/fileprob.py
  projects/lm/probs.py
  projects/std/SConscript
  projects/std/ngramidx.py
  py/README.txt
  py/SConscript
  py/onyx/SConscript
  py/onyx/__init__.py
  py/onyx/am/SConscript
  py/onyx/am/__init__.py
  py/onyx/am/acctrack.py
  py/onyx/am/bwtrainer.py
  py/onyx/am/classifier.py
  py/onyx/am/gaussian.py
  py/onyx/am/hmm.py
  py/onyx/am/hmm_mgr.py
  py/onyx/am/modelmgr.py
  py/onyx/am/testbwt.py
  py/onyx/am/testhmm.py
  py/onyx/am/testhmm2.py
  py/onyx/audio/SConscript
  py/onyx/audio/__init__.py
  py/onyx/audio/asciivumeter.py
  py/onyx/audio/audiobase.py
  py/onyx/audio/audiodata.py
  py/onyx/audio/audiovu.py
  py/onyx/audio/liveaudio.py
  py/onyx/audio/unshorten.py
  py/onyx/builtin.py
  py/onyx/containers/SConscript
  py/onyx/containers/__init__.py
  py/onyx/containers/objectset.py
  py/onyx/containers/serializable.py
  py/onyx/dataflow/SConscript
  py/onyx/dataflow/__init__.py
  py/onyx/dataflow/cfg.py
  py/onyx/dataflow/command.py
  py/onyx/dataflow/composecfg.py
  py/onyx/dataflow/framesynchronous.py
  py/onyx/dataflow/graph.py
  py/onyx/dataflow/join.py
  py/onyx/dataflow/simplecfg.py
  py/onyx/dataflow/source.py
  py/onyx/doctestmod.py
  py/onyx/graph/SConscript
  py/onyx/graph/__init__.py
  py/onyx/graph/decodergraph.py
  py/onyx/graph/dynamicgraph.py
  py/onyx/graph/graphsandbox.py
  py/onyx/graph/graphtools.py
  py/onyx/graph/randomgraph.py
  py/onyx/grid/SConscript
  py/onyx/grid/__init__.py
  py/onyx/grid/griddy.py
  py/onyx/grid/gridgo.py
  py/onyx/htkfiles/SConscript
  py/onyx/htkfiles/__init__.py
  py/onyx/htkfiles/htkaudio.py
  py/onyx/htkfiles/htklex.py
  py/onyx/htkfiles/htkmmf.py
  py/onyx/htkfiles/htkmmf2native.py
  py/onyx/htkfiles/htkscoring.py
  py/onyx/htkfiles/htkscp.py
  py/onyx/htkfiles/mlfprocess.py
  py/onyx/htkfiles/mmf.g
  py/onyx/htkfiles/mmf.py
  py/onyx/istext.py
  py/onyx/lexicon/SConscript
  py/onyx/lexicon/__init__.py
  py/onyx/lexicon/lexicon.py
  py/onyx/rename.py
  py/onyx/signalprocessing/SConscript
  py/onyx/signalprocessing/__init__.py
  py/onyx/signalprocessing/cepstrum.py
  py/onyx/signalprocessing/channel.py
  py/onyx/signalprocessing/delta.py
  py/onyx/signalprocessing/endpoint.py
  py/onyx/signalprocessing/filter.py
  py/onyx/signalprocessing/htkmfcc-parameters.txt
  py/onyx/signalprocessing/htkmfcc.py
  py/onyx/signalprocessing/processor.py
  py/onyx/signalprocessing/scale.py
  py/onyx/signalprocessing/spectrum.py
  py/onyx/signalprocessing/toychannel.py
  py/onyx/signalprocessing/vocalsource.py
  py/onyx/signalprocessing/window.py
  py/onyx/source_tree_sentinel.py
  py/onyx/textdata/SConscript
  py/onyx/textdata/__init__.py
  py/onyx/textdata/onyxtext.py
  py/onyx/textdata/tdutil.py
  py/onyx/textdata/textdata.py
  py/onyx/textdata/textfileprocess.py
  py/onyx/textdata/yamldata.py
  py/onyx/util/SConscript
  py/onyx/util/__init__.py
  py/onyx/util/alignment.py
  py/onyx/util/checkutils.py
  py/onyx/util/codedependency.py
  py/onyx/util/collate.py
  py/onyx/util/debugprint.py
  py/onyx/util/discrete.py
  py/onyx/util/dotdisplay.py
  py/onyx/util/duration.py
  py/onyx/util/floatutils.py
  py/onyx/util/freezetry.py
  py/onyx/util/frozen.py
  py/onyx/util/iterutils.py
  py/onyx/util/mathutils.py
  py/onyx/util/nonparametric.py
  py/onyx/util/pointprocess.py
  py/onyx/util/process.py
  py/onyx/util/quantity.py
  py/onyx/util/rocutils.py
  py/onyx/util/safediv.py
  py/onyx/util/singleton.py
  py/onyx/util/streamprocess.py
  py/onyx/util/timestamp.py
  py/onyx/util/versionset.py
  py/syck/SConscript
  py/yapps2/README_onyx.txt
  py/yapps2/SConscript
  py/yapps2/__init__.py
  sandbox/abnf/bin/fsgraph
  sandbox/abnf/bin/fsngraph
  sandbox/abnf/examples/example.abnf
  sandbox/abnf/lib/abnf.rb
  sandbox/abnf/lib/adjacency_graph.rb
  sandbox/abnf/lib/adjacency_graph_builder.rb
  sandbox/abnf/lib/incident_graph.rb
  sandbox/abnf/lib/incident_graph_builder.rb
  sandbox/abnf/lib/shunting_parser.rb
  sandbox/abnf/test/tc_adjacency_graph.rb
  sandbox/abnf/test/tc_incident_graph.rb
  sandbox/abnf/test/tc_shunting_parser.rb
  sandbox/abnf/test/ts_all.rb
  sandbox/eventdet/SConscript
  sandbox/eventdet/config.mfcc0
  sandbox/eventdet/eventchain.py
  sandbox/eventdet/feats0/README
  sandbox/eventdet/make_htk_feat_data.py
  sandbox/livedemo/SConscript
  sandbox/livedemo/livedemo.py
  sandbox/malach/README.txt
  sandbox/malach/SConscript
  sandbox/malach/filefix.py
  sandbox/malach/malach_parse.py
  sandbox/sphinx/expt1/conf.py
  sandbox/sphinx/expt1/content.rst
  sandbox/sphinx/expt1/extensions/auto_section.py
  sandbox/sphinx/expt1/glossary.rst
  sandbox/sphinx/expt1/index.rst
  sandbox/sphinx/expt1/intro.rst
  sandbox/sphinx/expt1/nosections.rst
  sandbox/sphinx/expt1/notes.txt
  sandbox/sphinx/expt2/conf.py
  sandbox/sphinx/expt2/core.rst
  sandbox/sphinx/expt2/extensions/auto_section.py
  sandbox/sphinx/expt2/index.rst
  sandbox/sphinx/expt2/intro.rst
  sandbox/sphinx/expt2/notes.txt
  sandbox/sphinx/expt2/pkg1.rst
  sandbox/sphinx/expt2/pkg1/__init__.py
  sandbox/sphinx/expt2/pkg1/mymod.py
  sandbox/sphinx/expt2/pkg1_mymod.rst
  sandbox/sphinx/expt2/pkg2.rst
  sandbox/sphinx/expt2/pkg2/__init__.py
  sandbox/sphinx/expt2/pkg2/mymod.py
  sandbox/sphinx/expt2/pkg2_mymod.rst
  sandbox/yggdrasil/bin/ygraph
  sandbox/yggdrasil/bin/yscore
  sandbox/yggdrasil/bin/ytrain
  sandbox/yggdrasil/lib/binary.rb
  sandbox/yggdrasil/lib/purity.rb
  sandbox/yggdrasil/lib/tree_maker.rb
  sandbox/yggdrasil/lib/y_graph.rb
  sandbox/yggdrasil/lib/y_score.rb
  sandbox/yggdrasil/lib/y_train.rb
  sandbox/yggdrasil/test/test_command_line.rb
  sandbox/yggdrasil/test/test_view.rb
  sandbox/yggdrasil/test/test_yggdrasil.rb
  templates/README.txt
  templates/SConscript
  templates/SConscript.template
  templates/__init__.py
  templates/changes.txt
  templates/copyright.bash
  templates/copyright.sh
  templates/copyright.slash
  templates/copyright.txt
  templates/module.py
  templates/restructured.rst
  templates/translation.cpp
  templates/translation.h
    Used lint.py to add the Apache license boilerplate and to normalize the
    structure of the headers.

________________________________________________________________________________
Commit at 2009-08-20 11:53:07 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Fix filename references in headers.
Last revno: 484   Last revision id: hsw@jhu.edu-20090820144439-yskjbdnfmhc0a75z
Last revision date: 2009-08-20 10:44:39 -0400

modified:
  py/onyx/lint.py
    Added support for finding incorrect filenames in headers.

  bin/release
  cpp/floatutils/floatutils_wrap.cpp
  cpp/floatutils/testfloatutils.cpp
  doc/sphinx/faq.rst
  doc/sphinx/toplevelorg.rst
  projects/datatools/parseLDCcatalog.py
  projects/ddt/README.txt
  projects/ddt/bitlm.py
  py/onyx/htkfiles/mlfprocess.py
  py/onyx/signalprocessing/vocalsource.py
  py/onyx/textdata/textfileprocess.py
  py/onyx/util/rocutils.py
  sandbox/livedemo/livedemo.py
  sandbox/malach/README.txt
  sandbox/sphinx/expt1/nosections.rst
    Corrections to the filename in the File: field of the headers of these
    files.

________________________________________________________________________________
Commit at 2009-08-20 10:44:39 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Hand fixes to copyrights, directives, names.
Last revno: 483   Last revision id: hsw@jhu.edu-20090820132158-8h5dzyxnt4uxujwi
Last revision date: 2009-08-20 09:21:58 -0400

modified:
  py/onyx/istext.py
  py/onyx/lint.py
  py/onyx/rename.py
    Improvements to these tools.  Added a header to rename.py.
modified:
  bin/display.sh
  bin/vu.sh
  bin/vu2.sh
  cpp/liveaudio/SConscript
  cpp/liveaudio/audio.cpp
  cpp/liveaudio/audiomodule.cpp
  cpp/liveaudio/main.log-ref
  py/onyx/graph/graphtools.py
  py/onyx/util/mathutils.py
renamed:
  cpp/liveaudio/DCAudioFileRecorder.cpp ==> cpp/liveaudio/LiveAudioInput.cpp
  cpp/liveaudio/DCAudioFileRecorder.h ==> cpp/liveaudio/LiveAudioInput.h
    More work fixing shell-script directives and file copyright stuff by hand
    and renaming files and classes so as to avoid confusing name collisions.

________________________________________________________________________________
Commit at 2009-08-20 09:21:57 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: Improvements to the header checking and reporting in lint.
Last revno: 482   Last revision id: kbasye1@jhu.edu-20090820031317-ssb5nswi41izkktl
Last revision date: 2009-08-19 23:13:17 -0400

modified:
  py/onyx/lint.py
    Improved support for generating programatically-usable results.  Improved
    testing.  Integrate switch to onyx.

________________________________________________________________________________
Commit at 2009-08-19 23:13:17 -0400 by Ken Basye <kbasye1@jhu.edu> from code_pure
Message: Introduce 'Onyx' as this toolkit's name; replace 'coe' package with 'onyx'
Last revno: 481   Last revision id: hsw@jhu.edu-20090819213358-tyapflwgwo6lbfvk
Last revision date: 2009-08-19 17:33:58 -0400

modified:
  README.txt
  SConscript
  SConstruct
  bin/demo1.sh
  bin/fsdemo.sh
  bin/maketags
  bin/vu.sh
  bin/vu2.sh
  cpp/floatutils/SConscript
  cpp/floatutils/floatutils.h
  cpp/liveaudio/DCAudioFileRecorder.cpp
  cpp/liveaudio/DCAudioFileRecorder.h
  cpp/liveaudio/SConscript
  cpp/liveaudio/audio.h
  cpp/liveaudio/audiomodule.cpp
  cpp/liveaudio/ctypes_defs.h
  cpp/liveaudio/delay_line.h
  cpp/liveaudio/main.cpp
  cpp/liveaudio/mpg123wrap.h
  cpp/liveaudio/ring_buffer_threads.h
  cpp/liveaudio/sndfilewrap.h
  cpp/pylib/README_syck.txt
  cpp/pylib/SConscript
  doc/images/demo-2009-02-02.py
  doc/readmes/Mac-OS-X.txt
  doc/sphinx/conf.py
  doc/sphinx/core.rst
  doc/sphinx/developer.rst
  doc/sphinx/extensions/auto_section.py
  doc/sphinx/index.rst
  doc/sphinx/intro.rst
  doc/sphinx/toplevelorg.rst
  doc/sphinx/user.rst
  projects/chartrecorder/SConscript
  projects/chartrecorder/chart.py
  projects/datatools/parseLDCcatalog.py
  projects/datatools/unlistedLDCinfo.py
  projects/ddt/__init__.py
  projects/ddt/bitlm.py
  projects/ddt/datagen.py
  projects/ddt/ddt.py
  projects/ddt/twoclass.py
  projects/htk_test/hmm0_r1.am
  projects/htk_test/test0.py
  projects/lm/__init__.py
  projects/lm/fileprob.py
  projects/lm/probs.py
  projects/std/ngramidx.py
  py/README.txt
  py/SConscript
  py/onyx/SConscript
  py/onyx/__init__.py
  py/onyx/am/SConscript
  py/onyx/am/__init__.py
  py/onyx/am/acctrack.py
  py/onyx/am/bwtrainer.py
  py/onyx/am/classifier.py
  py/onyx/am/gaussian.py
  py/onyx/am/hmm.py
  py/onyx/am/hmm_mgr.py
  py/onyx/am/modelmgr.py
  py/onyx/am/testbwt.py
  py/onyx/am/testhmm.py
  py/onyx/am/testhmm2.py
  py/onyx/audio/SConscript
  py/onyx/audio/__init__.py
  py/onyx/audio/asciivumeter.py
  py/onyx/audio/audiobase.py
  py/onyx/audio/audiodata.py
  py/onyx/audio/audiovu.py
  py/onyx/audio/liveaudio.py
  py/onyx/audio/unshorten.py
  py/onyx/audio/zero.wav
  py/onyx/builtin.py
  py/onyx/containers/SConscript
  py/onyx/containers/__init__.py
  py/onyx/containers/objectset.py
  py/onyx/containers/serializable.py
  py/onyx/dataflow/SConscript
  py/onyx/dataflow/__init__.py
  py/onyx/dataflow/cfg.py
  py/onyx/dataflow/command.py
  py/onyx/dataflow/composecfg.py
  py/onyx/dataflow/framesynchronous.log-ref
  py/onyx/dataflow/framesynchronous.py
  py/onyx/dataflow/graph.py
  py/onyx/dataflow/join.py
  py/onyx/dataflow/simplecfg.py
  py/onyx/dataflow/source.py
  py/onyx/doctestmod.py
  py/onyx/graph/SConscript
  py/onyx/graph/__init__.py
  py/onyx/graph/decodergraph.py
  py/onyx/graph/dynamicgraph.py
  py/onyx/graph/graphsandbox.py
  py/onyx/graph/graphtools.py
  py/onyx/graph/randomgraph.py
  py/onyx/grid/SConscript
  py/onyx/grid/__init__.py
  py/onyx/grid/griddy.py
  py/onyx/grid/gridgo.py
  py/onyx/htkfiles/SConscript
  py/onyx/htkfiles/__init__.py
  py/onyx/htkfiles/htkaudio.py
  py/onyx/htkfiles/htklex.py
  py/onyx/htkfiles/htkmmf.log-ref
  py/onyx/htkfiles/htkmmf.py
  py/onyx/htkfiles/htkmmf2native.py
  py/onyx/htkfiles/htkscoring.py
  py/onyx/htkfiles/htkscp.py
  py/onyx/htkfiles/mlfprocess.py
  py/onyx/htkfiles/mmf.g
  py/onyx/htkfiles/mmf.py
  py/onyx/htkfiles/monophones.am
  py/onyx/htkfiles/start.am
  py/onyx/istext.py
  py/onyx/lexicon/SConscript
  py/onyx/lexicon/__init__.py
  py/onyx/lexicon/lexicon.py
  py/onyx/lint.py
  py/onyx/signalprocessing/SConscript
  py/onyx/signalprocessing/__init__.py
  py/onyx/signalprocessing/cepstrum.py
  py/onyx/signalprocessing/channel.py
  py/onyx/signalprocessing/delta.py
  py/onyx/signalprocessing/endpoint.py
  py/onyx/signalprocessing/filter.py
  py/onyx/signalprocessing/htkmfcc-parameters.txt
  py/onyx/signalprocessing/htkmfcc.py
  py/onyx/signalprocessing/processor.py
  py/onyx/signalprocessing/scale.py
  py/onyx/signalprocessing/spectrum.py
  py/onyx/signalprocessing/toychannel.py
  py/onyx/signalprocessing/vocalsource.py
  py/onyx/signalprocessing/window.py
  py/onyx/source_tree_sentinel.py
  py/onyx/textdata/SConscript
  py/onyx/textdata/__init__.py
  py/onyx/textdata/tdutil.py
  py/onyx/textdata/textdata.py
  py/onyx/textdata/textfileprocess.py
  py/onyx/textdata/yamldata.py
  py/onyx/util/SConscript
  py/onyx/util/__init__.py
  py/onyx/util/alignment.py
  py/onyx/util/checkutils.py
  py/onyx/util/codedependency.py
  py/onyx/util/collate.py
  py/onyx/util/debugprint.py
  py/onyx/util/discrete.py
  py/onyx/util/dotdisplay.py
  py/onyx/util/duration.py
  py/onyx/util/floatutils.py
  py/onyx/util/freezetry.py
  py/onyx/util/frozen.py
  py/onyx/util/iterutils.py
  py/onyx/util/mathutils.py
  py/onyx/util/nonparametric.py
  py/onyx/util/pointprocess.py
  py/onyx/util/process.py
  py/onyx/util/quantity.py
  py/onyx/util/rocutils.py
  py/onyx/util/safediv.py
  py/onyx/util/singleton.py
  py/onyx/util/streamprocess.py
  py/onyx/util/timestamp.py
  py/onyx/util/versionset.py
  py/syck/SConscript
  py/yapps2/SConscript
  py/yapps2/__init__.py
  sandbox/eventdet/SConscript
  sandbox/eventdet/eventchain.py
  sandbox/livedemo/livedemo.py
  sandbox/malach/malach_parse.py
  sandbox/sphinx/expt1/conf.py
  sandbox/sphinx/expt1/extensions/auto_section.py
  sandbox/sphinx/expt1/index.rst
  sandbox/sphinx/expt1/intro.rst
  sandbox/sphinx/expt2/conf.py
  sandbox/sphinx/expt2/extensions/auto_section.py
  sandbox/sphinx/expt2/index.rst
  sandbox/sphinx/expt2/pkg1/__init__.py
  sandbox/sphinx/expt2/pkg1/mymod.py
  sandbox/sphinx/expt2/pkg2/__init__.py
  sandbox/sphinx/expt2/pkg2/mymod.py
  site_scons/SConscript
  site_scons/site_init.py
  site_scons/site_tools/PyTools.py
  site_scons/site_tools/SConscript
  templates/SConscript
  templates/SConscript.template
  templates/__init__.py
  templates/module.py
  templates/translation.h
added:
  py/onyx/rename.py
renamed:
  cpp/liveaudio/hltcoe_defs.h ==> cpp/liveaudio/onyx_defs.h
  py/coe ==> py/onyx
  py/coe/textdata/coetext.py ==> py/onyx/textdata/onyxtext.py
  py/yapps2/README.COE ==> py/yapps2/README_onyx.txt
  site_scons/site_tools/HLTCOE.py ==> site_scons/site_tools/Onyx.py
    A big renaming introducing 'Onyx' as the name of this toolkit.  Most of the
    changes are related to changing the name of the package 'coe' (in directory
    .../py/coe) to 'onyx'.  Other changes include replacing many HLTCOE_xxx
    symbols with ONYX_xxx, replacing the CoeTextXxx classes with OnyxTextXxx,
    and replacing many instances of HLTCOE and variants in comments,
    documentation, and other prose.  A few files were also renamed, see above.
    There are still a few remaining references, mostly to Bazaar servers at the
    COE, to the HPCC machines at the COE, and in 'legacy' documentation like
    presentations.  


________________________________________________________________________________
Commit at 2009-08-19 17:33:57 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Added copyright to some core files.
Last revno: 480   Last revision id: hsw@jhu.edu-20090819212730-c4ptrnifyr864n3o
Last revision date: 2009-08-19 17:27:30 -0400

modified:
  py/coe/audio/audiovu.py
  py/coe/signalprocessing/htkmfcc-parameters.txt
  py/coe/util/freezetry.py
  py/coe/util/frozen.py
    Added the copyright notice to these files (forgot so to do the first time
    around).

________________________________________________________________________________
Commit at 2009-08-19 17:27:29 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Added copyright to some non-core files.
Last revno: 479   Last revision id: hsw@jhu.edu-20090819203507-tphynin5n3gw29m7
Last revision date: 2009-08-19 16:35:07 -0400

modified:
  bin/chart.sh
  bin/demo1.sh
  bin/fsdemo.sh
  bin/livedemo.sh
  bin/maketags
  bin/scons
  cpp/liveaudio/main.cpp
  cpp/liveaudio/ring_buffer_threads.h
  doc/sphinx/conf.py
  doc/sphinx/faq.rst
  doc/sphinx/index.rst
  doc/sphinx/vision.rst
  sandbox/abnf/examples/example.abnf
  sandbox/abnf/test/ts_all.rb
  sandbox/yggdrasil/lib/purity.rb
    Added the copyright notice to these files (forgot to the first time around).

________________________________________________________________________________
Commit at 2009-08-19 16:35:07 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Added headers to a bunch of non-core files.
Last revno: 478   Last revision id: hsw@jhu.edu-20090819194411-fhh9lpv8z8cmob2f
Last revision date: 2009-08-19 15:44:11 -0400

modified:
  doc/images/htk_mfcc.dot
  doc/internal/planning-2009-01-13.txt
  doc/internal/planning-2009-02-03.txt
  doc/presentations/abstract-13-jan-2009.txt
  doc/presentations/fsdemo_script.txt
  doc/readmes/Mac-OS-X.txt
  projects/htk_test/README_byrne.txt
  projects/htk_test/labeledData.dot
  sandbox/abnf/bin/fsgraph
  sandbox/abnf/bin/fsngraph
  sandbox/abnf/lib/abnf.rb
  sandbox/abnf/lib/adjacency_graph.rb
  sandbox/abnf/lib/adjacency_graph_builder.rb
  sandbox/abnf/lib/incident_graph.rb
  sandbox/abnf/lib/incident_graph_builder.rb
  sandbox/abnf/lib/shunting_parser.rb
  sandbox/abnf/test/tc_adjacency_graph.rb
  sandbox/abnf/test/tc_incident_graph.rb
  sandbox/abnf/test/tc_shunting_parser.rb
  sandbox/eventdet/config.mfcc0
  sandbox/sphinx/expt1/conf.py
  sandbox/sphinx/expt2/conf.py
  sandbox/yggdrasil/bin/ygraph
  sandbox/yggdrasil/bin/yscore
  sandbox/yggdrasil/bin/ytrain
  sandbox/yggdrasil/lib/binary.rb
  sandbox/yggdrasil/lib/tree_maker.rb
  sandbox/yggdrasil/lib/y_graph.rb
  sandbox/yggdrasil/lib/y_score.rb
  sandbox/yggdrasil/lib/y_train.rb
  sandbox/yggdrasil/test/test_command_line.rb
  sandbox/yggdrasil/test/test_view.rb
  sandbox/yggdrasil/test/test_yggdrasil.rb
    Added headers to these files.

________________________________________________________________________________
Commit at 2009-08-19 15:44:11 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Added headers to two more core files.
Last revno: 477   Last revision id: hsw@jhu.edu-20090819193449-sn6az90363a9eu2j
Last revision date: 2009-08-19 15:34:49 -0400

modified:
  doc/sphinx/conf.py
  py/coe/audio/audiovu.py
    Added headers to two more core files.

________________________________________________________________________________
Commit at 2009-08-19 15:34:49 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Added headers to a few core files.
Last revno: 476   Last revision id: hsw@jhu.edu-20090819185654-ik9f0mc48807340c
Last revision date: 2009-08-19 14:56:54 -0400

modified:
  cpp/liveaudio/main.cpp
  cpp/liveaudio/ring_buffer_threads.h
  py/coe/signalprocessing/htkmfcc-parameters.txt
  py/coe/util/freezetry.py
  py/coe/util/frozen.py
    Add headers to these few files in the project's core.  Checking them in now
    to avoid future collisions with Ken's toolkit renaming work.

________________________________________________________________________________
Commit at 2009-08-19 14:56:54 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Added headers to a couple of files.
Last revno: 475   Last revision id: hsw@jhu.edu-20090819172310-xx7oznji0nsn8g7d
Last revision date: 2009-08-19 13:23:10 -0400

modified:
  py/coe/htkfiles/mmf.g
  py/coe/htkfiles/mmf.py
    Added a header to mmf.g that then propogates into mmf.py.
  py/coe/istext.py
    Added an option to just print names of tab-free unix files.

________________________________________________________________________________
Commit at 2009-08-19 13:23:10 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Add headers to some short files.
Last revno: 474   Last revision id: hsw@jhu.edu-20090819145603-d25jyob4ogh03pva
Last revision date: 2009-08-19 10:56:03 -0400

modified:
  bin/chart.sh
  bin/demo1.sh
  bin/fsdemo.sh
  bin/livedemo.sh
  bin/maketags
  doc/sphinx/faq.rst
  doc/sphinx/vision.rst
  sandbox/abnf/examples/example.abnf
  sandbox/abnf/test/ts_all.rb
  sandbox/yggdrasil/lib/purity.rb
    Added headers to these very short files.

  SConscript
    Commented out doc/presentations directory to prevent its contents from going
    into the release.

________________________________________________________________________________
Commit at 2009-08-19 10:56:03 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Added a simple command-line tool for discriminating text files.
Last revno: 473   Last revision id: hsw@jhu.edu-20090818015956-xx4n1ns1y3evmmju
Last revision date: 2009-08-17 21:59:56 -0400

modified:
  py/coe/SConscript
added:
  py/coe/istext.py
    Added a command-line tool I've been using for classifying files into text or
    binary, and, if text, whether it has unix, mac, or dos lineendings, and
    whether it has hard-coded TAB.

________________________________________________________________________________
Commit at 2009-08-17 21:59:56 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: Added first pass at a lint tool.
Last revno: 472   Last revision id: kbasye1@jhu.edu-20090817221712-6z2ovah42kvntq8o
Last revision date: 2009-08-17 18:17:12 -0400

modified:
  py/coe/SConscript
added:
  py/coe/lint.py
    Just committing the work-to-date on the lint tool.

________________________________________________________________________________
Commit at 2009-08-17 18:17:12 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Eliminate hard tabs in abnf and yggdrasil files
Last revno: 471   Last revision id: hsw@jhu.edu-20090817220748-mabxbi0xkdwaztss
Last revision date: 2009-08-17 18:07:48 -0400

modified:
  sandbox/abnf/bin/fsgraph
  sandbox/abnf/bin/fsngraph
  sandbox/abnf/examples/example.abnf
  sandbox/yggdrasil/bin/ygraph
  sandbox/yggdrasil/bin/yscore
  sandbox/yggdrasil/bin/ytrain
    Eliminated hard tab characters in these files.

________________________________________________________________________________
Commit at 2009-08-17 18:07:48 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Turn TAB into spaces.
Last revno: 470   Last revision id: hsw@jhu.edu-20090817215605-4ukw3pv7kvej8tls
Last revision date: 2009-08-17 17:56:05 -0400

modified:
  sandbox/malach/test_transcriptions/trans-13.dtd
    Turn TAB into spaces.

________________________________________________________________________________
Commit at 2009-08-17 17:56:05 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Remove tabs from a lexicon file.
Last revno: 469   Last revision id: hsw@jhu.edu-20090817213456-cbwrdq2wcoj1lhzc
Last revision date: 2009-08-17 17:34:56 -0400

modified:
  py/coe/htkfiles/en_lexic.v08
    Replaced TAB with spaces.  With this change, there are no core text files in
    the project that contain TAB character.  There are still such files in the
    sandbox and in source files from other projects.
  py/coe/htkfiles/htklex.py
    Removed trailing whitespace in this file that parses the above lexicon.

________________________________________________________________________________
Commit at 2009-08-17 17:34:56 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Convert TAB to spaces.  Fix Mac line ending.  Fix trailing whitespace.
Last revno: 468   Last revision id: hsw@jhu.edu-20090817211220-aumq8nbyrequesnm
Last revision date: 2009-08-17 17:12:20 -0400

modified:
  README.txt
    Turned Mac line endings into Unix.
  bin/display.sh
  changes.txt
  cpp/floatutils/floatutils.cpp
  cpp/floatutils/testfloatutils.cpp
  cpp/liveaudio/DCAudioFileRecorder.cpp
  cpp/liveaudio/DCAudioFileRecorder.h
  cpp/liveaudio/SConscript
  cpp/liveaudio/audiomodule.cpp
  cpp/liveaudio/mpg123wrap.c
  cpp/liveaudio/ring_buffer_threads.h
  cpp/liveaudio/sndfilewrap.c
  doc/internal/brainstorming-2008-11-25.txt
  doc/internal/names.txt
  doc/presentations/SConscript
  doc/sphinx/developer.rst
  projects/htk_test/README_byrne.txt
  projects/lm/fileprob.py
  py/coe/audio/SConscript
    Cleanup sources and text files.  Turned TAB character into appropriate
    number of spaces.  Removed trailing whitespace.

________________________________________________________________________________
Commit at 2009-08-17 17:12:20 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Converted DOS line endings into Unix line endings.
Last revno: 467   Last revision id: kbasye1@jhu.edu-20090817210353-nbzq6ye1bea4fnxj
Last revision date: 2009-08-17 17:03:53 -0400

modified:
  bin/README.txt
  cpp/floatutils/floatutils.h
  cpp/pylib/README.txt
  doc/internal/coe-diagram-planning-2008-11.txt
  py/README.txt
  py/coe/am/__init__.py
  py/coe/audio/__init__.py
  py/coe/containers/__init__.py
  py/coe/dataflow/composecfg.py
  py/coe/dataflow/graph.py
  py/coe/graph/__init__.py
  py/coe/graph/decodergraph.py
  py/coe/lexicon/__init__.py
  py/coe/signalprocessing/__init__.py
  py/coe/signalprocessing/cepstrum.py
  py/coe/signalprocessing/channel.py
  py/coe/signalprocessing/delta.py
  py/coe/signalprocessing/filter.py
  py/coe/signalprocessing/processor.py
  py/coe/signalprocessing/scale.py
  py/coe/signalprocessing/spectrum.py
  py/coe/signalprocessing/vocalsource.py
  py/coe/signalprocessing/window.py
  py/coe/textdata/__init__.py
  py/coe/textdata/tdutil.py
  py/coe/textdata/textdata.py
  py/coe/textdata/yamldata.py
  py/coe/util/checkutils.py
  py/coe/util/codedependency.py
  py/coe/util/collate.py
  py/coe/util/debugprint.py
  py/coe/util/discrete.py
  py/coe/util/freezetry.py
  py/coe/util/frozen.py
  py/coe/util/nonparametric.py
  py/coe/util/quantity.py
  py/yapps2/__init__.py
  sandbox/malach/test_transcriptions/00009-003.trs
  sandbox/malach/test_transcriptions/35995-002.trs
    Converted DOS line endings into Unix line endings.

________________________________________________________________________________
Commit at 2009-08-17 17:03:53 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add release script in bin; better version numbers in Sphinx; revive abnf and yggdrasil code to sandbox
Last revno: 466   Last revision id: hsw@jhu.edu-20090817163759-gijug5w72ni3rt7z
Last revision date: 2009-08-17 12:37:59 -0400

modified:
  bin/bzrtool.py
    Exposed a simple function for getting local information about this branch,
    get_local_info().
  doc/sphinx/conf.py
    Added machinery to get a public version number and set it where Sphinx
    expects to find it.  The version number has the form X.Y.Z where X and Y are
    major and minor version numbers currently specified in this file, and Z is
    the current BZR revision number, as gotten from BZR for the branch
    containing this file.
added:
  bin/release
    Simple release script.  Run this from your top-level directory after a clean
    build, and give it a single argument in the form of a platform name
    (i.e. the name of a subdirectory in your build directory).  The result will
    be a file, <platform>.tgz, in the top-level directory.  This file will
    contain exactly the contents of your build/<platform> directory, except that
    all the log files from testing will have been collected into
    test_results_<platform>.tgz and deleted from their previous locations.  I
    have verified that untarring the outer tgz file and then the inner tgz file
    results in an exact duplicate of the original build/<platform> directory.
  sandbox/abnf
  sandbox/abnf/README
  sandbox/abnf/Rakefile
  sandbox/abnf/bin
  sandbox/abnf/bin/fsgraph
  sandbox/abnf/bin/fsngraph
  sandbox/abnf/examples
  sandbox/abnf/examples/example.abnf
  sandbox/abnf/lib
  sandbox/abnf/lib/abnf.rb
  sandbox/abnf/lib/adjacency_graph.rb
  sandbox/abnf/lib/adjacency_graph_builder.rb
  sandbox/abnf/lib/incident_graph.rb
  sandbox/abnf/lib/incident_graph_builder.rb
  sandbox/abnf/lib/shunting_parser.rb
  sandbox/abnf/test
  sandbox/abnf/test/tc_adjacency_graph.rb
  sandbox/abnf/test/tc_incident_graph.rb
  sandbox/abnf/test/tc_shunting_parser.rb
  sandbox/abnf/test/ts_all.rb
  sandbox/yggdrasil
  sandbox/yggdrasil/README
  sandbox/yggdrasil/Rakefile
  sandbox/yggdrasil/bin
  sandbox/yggdrasil/bin/ygraph
  sandbox/yggdrasil/bin/yscore
  sandbox/yggdrasil/bin/ytrain
  sandbox/yggdrasil/lib
  sandbox/yggdrasil/lib/binary.rb
  sandbox/yggdrasil/lib/purity.rb
  sandbox/yggdrasil/lib/tree_maker.rb
  sandbox/yggdrasil/lib/y_graph.rb
  sandbox/yggdrasil/lib/y_score.rb
  sandbox/yggdrasil/lib/y_train.rb
  sandbox/yggdrasil/test
  sandbox/yggdrasil/test/test_command_line.rb
  sandbox/yggdrasil/test/test_view.rb
  sandbox/yggdrasil/test/test_view.yaml
  sandbox/yggdrasil/test/test_yggdrasil.rb
    Revived Joe W.'s ABNF and decision tree code and put them in the sandbox
    area.  Although there are tests in here, they aren't run in builds since we
    don't really want to require Ruby at this point.
  templates/SConscript.template
    Another file I forgot to check in from my Friday rush.

________________________________________________________________________________
Commit at 2009-08-17 12:37:59 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Added subgraph awareness to DOT display of graphs.  Minor cleanup.
Last revno: 465   Last revision id: kbasye1@jhu.edu-20090817155203-99o44vxxiorkzeo3
Last revision date: 2009-08-17 11:52:03 -0400

modified:
  py/coe/dataflow/graph.py
    Implmented sub-graph-aware DOT display for graph-based nested dataflow
    objects.  Added logic for the MultiIn and MultiOut object.  Made the
    SingleIn and SingleOut objects be appropriately specialized subclasses of
    the Multi* versions.

    Added an explicit DataflowArc object.  The intent is that this could be used
    for journaling of the items that flow through the arc; it is not intended
    for modification of the items.

    Major work on the DOT-generating code to allow limiting the overall depth of
    the displayed objects by lumping everything below a given depth into a
    subgraph box; see the depth_limit argument to dot_iter.  Also, allow
    specific nodes (and thus their siblings and, recursively, their parents) to
    be displayed; see the force_display_labels argument to dot_iter.  Added
    standard callbacks, though not all of them are implemented.

    Implmented Splitter and Joiner objects which are low-level nodes for
    handling splitting and joining in the network.  At present, Splitter
    requires that items be immutable (so it doesn't have to be clever about deep
    copying).  At present Joiner just serializes the join in a threadsafe way.
    Implemented SisoParallelProcessor using these low-level plumbing tools.

    Made _nested do a good amount of testing of the SisoParallelProcessor,
    SisoChainProcessor, and the DOT-generating code.

  py/coe/dataflow/simplecfg.py
    Simplified some multiline container-filling code to be generator based.

  py/coe/__init__.py
    Clean up documentation for coe_mainstartup().  Removed some commented-out
    code.
  py/coe/builtin.py
    Convert from DOS to Unix line terminations.

  bin/bzrwrap.sh
    Added "--diff-options --strip-trailing-cr" args to "bzr diff".

________________________________________________________________________________
Commit at 2009-08-17 11:52:03 -0400 by Ken Basye <kbasye1@jhu.edu> from code_pure
Message: Add missing py/SConscript file from my previous check-in
Last revno: 464   Last revision id: kbasye1@jhu.edu-20090814154948-ah6brdgxzmz7kzgt
Last revision date: 2009-08-14 11:49:48 -0400

added:
  py/SConscript
    Whoops, missed adding this in my previous check-in.

________________________________________________________________________________
Commit at 2009-08-14 11:49:48 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Make sure READMEs and other adjunct files make it into the build; improve doc
Last revno: 463   Last revision id: kbasye1@jhu.edu-20090814143902-o7jkdhw2sj68cfqa
Last revision date: 2009-08-14 10:39:02 -0400

modified:
  SConscript
  cpp/pylib/SConscript
  doc/presentations/SConscript
  doc/sphinx/core.rst
  doc/sphinx/projects.rst
  doc/sphinx/sandbox.rst
  doc/sphinx/toplevelorg.rst
    Added some labels in ReST files and referred to them from toplevelorg.rst
  projects/ddt/SConscript
  projects/htk_test/SConscript
  projects/lm/SConscript
  projects/lm/__init__.py
  py/coe/signalprocessing/SConscript
  sandbox/eventdet/SConscript
  sandbox/malach/SConscript
  site_scons/site_tools/HLTCOE.py
  templates/SConscript
    Mention files we want in the build directory in many SConscript files, this
    ensures that various README.txt files make it, among other things.  Move
    LocalAllFilesInDir to HLTCOE.py and into the SCons environment so other
    SConscripts can use it.
added:
  bin/add
  bin/resolve
    A couple other bzr replacements.
removed:
  cpp/matrix
  cpp/matrix/IntVector.h
  cpp/matrix/Matrix.cpp
  cpp/matrix/Matrix.h
  cpp/matrix/README.txt
  cpp/matrix/SConscript
  cpp/matrix/Vector.cpp
  cpp/matrix/Vector.h
  cpp/matrix/test1.cpp
  cpp/matrix/test1.log-ref
  doc/sphinx/devo
    Removed C++ matrix implementation and a stray doc file.
renamed:
  projects/ddt/readme.txt ==> projects/ddt/README.txt
  projects/htk_test/byrne.README ==> projects/htk_test/README_byrne.txt
  sandbox/malach/README.TXT ==> sandbox/malach/README.txt
    Unify naming of README.txt files.

________________________________________________________________________________
Commit at 2009-08-14 10:39:01 -0400 by Ken Basye <kbasye1@jhu.edu> from code_pure
Message: Fix testing of projects/htk_test
Last revno: 462   Last revision id: hsecker@hpcc1.hltcoe.jhu.edu-20090813215714-g07lvj48ywsh4eg5
Last revision date: 2009-08-13 17:57:14 -0400

modified:
  SConscript
  projects/htk_test/SConscript
  projects/htk_test/test0.py
    These tests weren't actually being run because the top-level SConscript file
    didnt' mention the SConscript file in projects/htk_test.  Of course, the
    test itself was also broken.  This check-in fixes both problems.


________________________________________________________________________________
Commit at 2009-08-13 17:57:14 -0400 by Hugh Secker-Walker <hsecker@hpcc1.hltcoe.jhu.edu> from coe_repo
Message: Changes to doc build and contents.  Unified command-line bzr access.
Last revno: 461   Last revision id: hsecker@hpcc1.hltcoe.jhu.edu-20090811184620-zygows5iljs9yeox
Last revision date: 2009-08-11 14:46:20 -0400

modified:
  SConscript
  site_scons/site_tools/PyTools.py
    Cause a link, htmldoc, to be created in the top directory of the
    build, pointing to the html documentation that's built in the
    doc/sphinx/_build/html directory.
modified:
  doc/sphinx/SConscript
  doc/sphinx/developer.rst
  doc/sphinx/index.rst
added:
  doc/sphinx/glossary.rst
    Extensive changes and additions to to the developer notes.  Minor
    changes to the introductory notes.  First mention of Apache 2
    license.

modified:
  sandbox/sphinx/expt1/index.rst
  sandbox/sphinx/expt1/intro.rst
added:
  sandbox/sphinx/expt1/glossary.rst
    Practice with making a glossary.  This was done to track down an
    undocumented requirement for the glossary to get populated: each
    term must be indented exactly the same amount as the glossary::
    directive is indented.

added:
  bin/bzrtoolwrap.sh
  bin/bzrwrap.sh
  bin/diff
  bin/merge
  bin/missing
  bin/pull
  bin/push
  bin/status
kind_changed:
  bin/ckin
  bin/prep
  bin/snew
    Changes to make it possible to do all typical bzr-based project
    change operations via the 'bin/<command>' syntax rather than
    having to remember whether to use 'bin/<command>' or
    'bzr <command>'.  This is implemented via two command-wrapping
    shell scripts along with appropriate symbolic links to these
    scripts.  The scripts use the basename with which they're called
    in order to dispatch to the correct command to do their work.
    This pattern will easily extend to other bzr and bzrtool commands.
    Here's the complete list of commands available in the bin
    directory:
      bin/ckin
      bin/diff
      bin/merge
      bin/missing
      bin/prep
      bin/pull
      bin/push
      bin/snew
      bin/status

modified:
  templates/README.txt
added:
  templates/copyright.bash
  templates/copyright.sh
removed:
  templates/copyright.bat
  templates/copyright.hash
    Modified and cleaned up the set of template files.

________________________________________________________________________________

Commit at 2009-08-11 14:46:19 -0400 by Hugh Secker-Walker <hsecker@hpcc1.hltcoe.jhu.edu> from coe_repo
Message: Additions to top-level documentation
Last revno: 460   Last revision id: kbasye1@jhu.edu-20090811172633-hy6zorrnmrdlcaqt
Last revision date: 2009-08-11 13:26:33 -0400

modified:
  doc/sphinx/SConscript
  doc/sphinx/index.rst
  doc/sphinx/toplevelorg.rst
added:
  doc/sphinx/developer.rst
  doc/sphinx/devo
  doc/sphinx/user.rst
  templates/restructured.rst
    Updates to the documentation top-level structure.

________________________________________________________________________________
Commit at 2009-08-11 13:26:33 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: New ReST file describing top-level organization, other cleanout
Last revno: 459   Last revision id: kbasye1@jhu.edu-20090806181630-hal1ycdvd29184j7
Last revision date: 2009-08-06 14:16:30 -0400

added:
  doc/sphinx/toplevelorg.rst
    Added this file with some helpful top-level documentation, but it's not
    hooked in yet (not mentioned in SConscript, nor referred to by index.rst or
    any other ReST file).
removed:
  cpp/pylib/win32-nt-i386-32bit-le
  cpp/pylib/win32-nt-i386-32bit-le/_syck.pyd
    More Win32 removal.
  py/coe/audio/audio.so
    This was apparently vestigial.




________________________________________________________________________________
Commit at 2009-08-06 14:16:30 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: More work toward releasing, fix two build bugs, more Win32 cleanout
Last revno: 458   Last revision id: hsw@jhu.edu-20090722162032-gn0qdsvyrnhr18jy
Last revision date: 2009-07-22 12:20:32 -0400

modified:
  SConscript
    Added calls to env.Local() which put certain files we want to release into
    the build/<platform> directory.  In particular the entire 'scons' and 'bin'
    directories are now duplicated into the build dir.  This makes it possible
    to do the following:

    while(amused):
        bin/scons
        cd build/<platform>
        export PYTHONPATH=<blah>/build/<platform>/py

    Note that the entire bin directory is duplicated - we might want to restrict
    this at some point to just the scons script and the 'correct' platform
    subdir with its contents.

  SConstruct
    Minor cleanup removing some exported stuff that wasn't being used anywhere.
  bin/README.txt
    Removed references to Win32 batch scripts; other minor fixes.
  py/coe/__init__.py
    Added use of a sentinel file (source_tree_sentinel.py, see below) to
    determine how to set the Pylib paths correctly even when the build directory
    is given some different name.  This completes the work on getting 'scons
    BUILD_TOP=alt_build_dir' to work correctly.
  py/coe/audio/audiodata.py
    Several doctest strings in this file included "build" in their output,
    followed by '...' to cover the platform name.  I removed 'build/' so that
    now the ellipses cover both the build dir name and the platfrom dir name to
    allow these tests to pass when using an alternate build directory name.
  sandbox/malach/SConscript
    Removed vestigial code left from Python template file.
  site_scons/site_tools/HLTCOE.py
    Minor changes.
  site_scons/site_tools/PyTools.py
    Fixed two bugs.  One, in the scanner, was causing certain doctest datafiles
    to be duplicated into build/<platform>/build/<platform>.  The other, in the
    doc-building part of PyFile(), was not building dependencies correctly, with
    the result that builds sometimes failed because the doc build imported some
    file which imported an undocumented wrapper file.
added:
  py/coe/source_tree_sentinel.py
    This file's presence indicated that this is a source tree, as opposed to a
    build tree.  That's used in .../py/coe/__init__.py to set the Pylib path
    correctly; see above.
removed:
  bin/ckin.bat
  bin/prep.bat
  bin/scons.bat
  bin/tools
  bin/tools/buildsox.sh
    Removed Win32 batch files and sox building script.

________________________________________________________________________________
Commit at 2009-07-22 12:20:31 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: Final versions of report of invention documments.
Last revno: 457   Last revision id: kbasye1@jhu.edu-20090721212137-s2hv4s3m9tpr7ex9
Last revision date: 2009-07-21 17:21:37 -0400

modified:
  doc/ROI-Assn_Form-COE_Toolkit.doc
  doc/Supplemental_Software_Implementation_Form_CoE_Toolkit.doc
    Finished these documents.  These constitute the report of invention of
    software that has been submitted to JHU Technology Transfer office.

________________________________________________________________________________
Commit at 2009-07-21 17:21:37 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Build infrastructure cleanup; remove Sox-based audio file reading
Last revno: 456   Last revision id: kbasye1@test1.hpcc1.hltcoe.jhu.edu-20090716164114-xew7meibc4zrc64p
Last revision date: 2009-07-16 12:41:14 -0400

This is an intermediate checkin on the way to building a release process.
Mostly this is cleanup, including removal of some Win32-specific code, since we
don't really have any plans to support Win32 going forward.

modified:
  SConstruct
    Removed some Win32 stuff, consolidated some diagnostic code, and removed
    most of the earlier release support, keeping support for building in other
    build directories, since that's what we plan to use for doing releases.
  cpp/floatutils/SConscript
  cpp/floatutils/floatutils.cpp
  cpp/liveaudio/SConscript
    Removed some Win32-specific stuff.
  py/coe/audio/SConscript
    Removed sox-based audio file reading; we now only have and use the newer
    libsndfile system.
  py/coe/textdata/textdata.log-ref
  py/coe/textdata/textdata.py
    Some changes to eliminate printing strings into a log-ref file that contain
    the absolute build directory path, since we no longer filter that out before
    diffing (see below).
  py/coe/util/floatutils.py
    Removed some Win32-specific stuff.
  sandbox/eventdet/eventchain.log-ref
  sandbox/eventdet/eventchain.py
    Reworked this code to use the newer audiodata interface to audio files,
    since the sox interfaced was going away.  Then made some changes to
    eliminate printing strings into a log-ref file that contain the absolute
    build directory path, since we no longer filter that out before diffing (see
    below).
  site_scons/site_tools/HLTCOE.py
    In preparation for a new system for doing releases, removed some older
    starts on release machinery.  Also removed some fairly complex code that was
    substituting build directory names in log-ref files; there were only two
    files that had build directory names and they've now been fixed not to have
    them (see above).  Finally, now that we don't have Sox-based audio, there
    were a bunch of other log-ref substitutions we didn't need, so I removed
    them.
  site_scons/site_tools/PyTools.py
    Removed some earlier release support code.
removed:
  bin/darwin-posix-i386-32bit-le/sox
  bin/linux2-posix-i386-32bit-le/sox
  bin/linux2-posix-x86_64-64bit-le/sox
  bin/win32-nt-i386-32bit-le
  bin/win32-nt-i386-32bit-le/sox.exe
  py/coe/audio/audiofile.log-ref
  py/coe/audio/audiofile.py
  py/coe/audio/soxversion.py
  py/coe/audio/soxy.log-ref
  py/coe/audio/soxy.py
    Removed all the Sox-based audio code and binaries, and removed the Win32 bin
    directory completely.

________________________________________________________________________________
Commit at 2009-07-16 12:41:14 -0400 by Kenneth Basye <kbasye1@test1.hpcc1.hltcoe.jhu.edu> from code2
Message: Added entries for LDC2009E{64,65}, two more TAC2009 datasets.
Last revno: 455   Last revision id: kbasye1@jhu.edu-20090714160335-jehiuut7das4x4o6
Last revision date: 2009-07-14 12:03:35 -0400

modified:
  projects/datatools/unlistedLDCinfo.py
    Added entries for LDC2009E{64,65}, two more TAC2009 datasets.


________________________________________________________________________________
Commit at 2009-07-14 12:03:35 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Fix doc build breakage
Last revno: 454   Last revision id: hsw@jhu.edu-20090711173250-3x5jyaa8tm6g45j8
Last revision date: 2009-07-11 13:32:50 -0400

modified:
  py/coe/util/dotdisplay.py
    Fix inline markup (:exception: -> :exc:).


________________________________________________________________________________
Commit at 2009-07-11 13:32:49 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Nested dataflow processors that can display themselves.  Major graph building refactoring.
Last revno: 453   Last revision id: hsw@jhu.edu-20090711162329-ltz2lgo05m3qtz16
Last revision date: 2009-07-11 12:23:29 -0400

modified:
  py/coe/dataflow/graph.py
    Major refactoring to support keeping track of the nested subgraphs in a
    composite data flow object.  The two main issues were: 1) the
    representation, ownership and bookkeeping associated with the nested
    subgraphs, 2) supporting a flexible DOT generation with DOT subgraph
    clusters that can limit the depth to which nodes get expanded.  Both these
    issues are leading to a refactoring of the graph-building code and the DOT
    generating interfaces.  The doctestcode in the _nested() function
    illustrates the usage and has a commented-out dot_display call.  Note that
    the refactoring exists in new classes and has not been migrated into the
    existing graph code.
  py/coe/graph/graphtools.py
    Added a new set of graph-building objects that are better suited to
    supporting the usage needs that emereged in the nested dataflow scenarios.
    What is emerging is a hierarchy of objects that maintain successively more
    refined and expensive information about the structure of a directed a graph
    that's being built or used.  At the same time they are moving closer to a
    sequence-like, container semantics for the arcs and nodes which will allow
    for reuse of the id-management code for clients with complicated node and
    arc labels.  One feature of this hierarchy is that the most of the objects
    implement a semantic *view* of a graph without them owning the core data
    of the graph.  This lets the same objects be used for both graph builders
    and frozen graphs.

    Work on using (and reusing) a single depth-first iterating scheme (with
    callbacks) for learning about a graph's structural properties (tree, DAG,
    cyclic, etc.), producing a spanning tree (or forest), finding topological
    orders for nodes and arcs, and supporting general-purpose graph traversing
    usages.  The important _make_topological_lists method of FrozenGraph is now
    a client of this iterator.  This iterator also fits in with the view model,
    in which, if necessary, a builder could include a view that allows traversal
    of the graph that's being build at any time.  A work in progress.

    Cleanup of code associated with various properties of FrozenGraph.
  py/coe/util/alignment.py
    Minor refactoring to use FrozenGraph's is_lattice() method.
added:
  py/coe/util/dotdisplay.py
    Put the top-level dot_display() functionality into a mix-in baseclass that
    relies on a dot_iter method also being in the class.  Some steps towards
    cross-platform support for displaying DOT files.
modified:
  py/coe/util/SConscript

________________________________________________________________________________
Commit at 2009-07-11 12:23:28 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: Updated feedback to gaphic designer.  Added a presentation.
Last revno: 452   Last revision id: kbasye1@jhu.edu-20090702164545-s2i67es91m8z3x3d
Last revision date: 2009-07-02 12:45:45 -0400

modified:
  doc/sphinx/SConscript
  doc/sphinx/miriam/miriam.rst
added:
  doc/sphinx/miriam/omlet-01.png
  doc/sphinx/miriam/omlet-02.png
  doc/sphinx/miriam/omlet-03.png
  doc/sphinx/miriam/omlet-04.png
  doc/sphinx/miriam/omlet-06.png
  doc/sphinx/miriam/omlet-07.png
  doc/sphinx/miriam/omlet-08.png
  doc/sphinx/miriam/omlet-09.png
  doc/sphinx/miriam/omlet-10.png
  doc/sphinx/miriam/omlet-11.png
  doc/sphinx/miriam/omlet-12.png
  doc/sphinx/miriam/omlet-13.png
  doc/sphinx/miriam/phonetic-man-02.png
    More feedback on the Notes for Miriam page of the doc.

added:
  doc/presentations/Towards-a-data-driven-multiresolution-feature-space-for-ASR.ppt
    Presentation regarding new front end.

________________________________________________________________________________
Commit at 2009-07-02 12:45:45 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Fix some Sphinx warnings and errors
Last revno: 451   Last revision id: hsw@jhu.edu-20090702133029-p8dl192ufjnaj41s
Last revision date: 2009-07-02 09:30:29 -0400

modified:
  py/coe/builtin.py
    Added _rst_clean_dict, subclassed from the builtin dict, to work
    around a problem in the docstring of the update method that was
    causing Sphinx to issue a bunch of warnings.
  py/coe/graph/graphtools.py
    Fix inline Sphinx directive (:method: -> :meth:)
  py/coe/signalprocessing/spectrum.py
    Derive from attrdict rather than dict to avoid warnings (see
    above).
  sandbox/sphinx/expt2/pkg1/mymod.py
    Play with escaping of inline emphasis markup.

________________________________________________________________________________
Commit at 2009-07-02 09:30:29 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: Added feedback for the graphical designer to the generated doc.
Last revno: 450   Last revision id: kbasye1@jhu.edu-20090701233448-mzs8bjnn9wds0qqi
Last revision date: 2009-07-01 19:34:48 -0400

Lightweight modifications to the doc building in order to bundle up some images
and feedback for the graphic designer who has been working with us.  In the doc
a link to these notes appears near the bottom of the front page.

modified:
  doc/sphinx/SConscript
  doc/sphinx/index.rst
added:
  doc/sphinx/miriam
  doc/sphinx/miriam/081216_viv01.jpg
  doc/sphinx/miriam/1023-lotvolt-frolic-02.jpg
  doc/sphinx/miriam/1195392_1c64_625x625.jpg
  doc/sphinx/miriam/Hertzberg2.jpg
  doc/sphinx/miriam/HomoclinicI.jpg
  doc/sphinx/miriam/LogoSamples.png
  doc/sphinx/miriam/Matisse-Flow-Acrylics.jpg
  doc/sphinx/miriam/ViolentUniverseArt.jpg
  doc/sphinx/miriam/abstract-bright-rainbow-coloured-background-thumb8056319.jpg
  doc/sphinx/miriam/abstract-rainbow-colored-linear-background-thumb8056499.jpg
  doc/sphinx/miriam/caustic_i.jpg
  doc/sphinx/miriam/controled-flow-arthur-schumaker.jpg
  doc/sphinx/miriam/data-flow-diagrams.png
  doc/sphinx/miriam/energy-flow-giorgio-vaselli.jpg
  doc/sphinx/miriam/hairpin-vortex32.jpg
  doc/sphinx/miriam/mandala36.jpg
  doc/sphinx/miriam/mandala36_detail.jpg
  doc/sphinx/miriam/match-vortex.jpg
  doc/sphinx/miriam/miriam.rst
  doc/sphinx/miriam/neuron-fractal_1.jpg
  doc/sphinx/miriam/particles_ribbon-1901.jpg
  doc/sphinx/miriam/particles_ribbon-2958.jpg
  doc/sphinx/miriam/stream.gif
  doc/sphinx/miriam/tmb_energy_flow1.jpg
  doc/sphinx/miriam/transportIV.jpg
  doc/sphinx/miriam/turb_cyl_karman_vortex.png
  doc/sphinx/miriam/vortex_big.gif
  doc/sphinx/miriam/vortices.gif
  doc/sphinx/miriam/wave.jpg

________________________________________________________________________________
Commit at 2009-07-01 19:34:48 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Improve doc for classes that inherit
Last revno: 449   Last revision id: hsw@jhu.edu-20090701165358-6m22qc7jmykk7cai
Last revision date: 2009-07-01 12:53:58 -0400

modified:
  py/coe/am/__init__.py
    Minor docstring tweaks.
  site_scons/site_tools/PyTools.py
    Add flags in automodule directives to turn on both display of
    inherited members and base class listing in doc for classes.

________________________________________________________________________________
Commit at 2009-07-01 12:53:58 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Major refactoring of the dataflow processor-network model, giving flat composite nodes that remember their subgraphs.
Last revno: 448   Last revision id: kbasye1@test1.hpcc1.hltcoe.jhu.edu-20090701135834-kspejrzs95bo9kjm
Last revision date: 2009-07-01 09:58:34 -0400

modified:
  py/coe/dataflow/graph.py
    We're abandoning the dataflow-network model whereby each processor node is
    responsible for doing its internal network-style work.  Instead, any network
    of processor nodes (a composite node) has a single graph describing its
    entire structure, and a single list of all the primitive nodes in the
    network.  Introduced the subgraph abstraction, whereby a composite node
    keeps track of the subgraphs within its network that correspond to the
    composite nodes (if any) out of which it was built.  Given the stateful
    mutability and non-copyability of most primitive processor nodes, the
    flattening that occurs means that a composite processor that gets injected
    into a larger network must hand over ownership of its primitive nodes to the
    larger network, and is thus rendered moribund.

    The interface for constructing processor networks has not changed, and nor
    have the essential tests of nested chains of processors.  The construction
    model means that any two subgraphs in a composite network are either
    disjoint or nested.  This corresponds to (and was somewhat motivated by,
    thanks to Ken) the dot/graphviz notion of the displayable relationships
    between subgraphs.

    At the implementation level, introduced Primitive and Composite mix-in
    baseclasses for expressing this essential binary property of processor
    nodes.  The ProcessorGraphBuilder and SisoProcessorGraphNode underwent
    substantial refactoring in order to handle the flattening and subgraph
    tracking.

    Work on prose for some of the essential documentation. Removed old
    commented-out code.
  py/coe/graph/graphtools.py
    Added support for classes SubgraphsBuilder and FrozenSubgraphs which handle
    the collection of node idenntifiers making up the subgraphs.  These are a
    work in progress as they will need to express the tree properties that the
    disjoint-or-nested constraints on subgraphs imply.

    Minor change to GraphBuilder's add_graph interface: it now includes the
    complete list of node ids for the nodes in the subgraph, in addition to the
    terminal nodes which it already returned, thus directly supporting the
    collecting of information about subgraphs.

    Work on prose for some of the essential documentation.
  py/coe/util/streamprocess.py
    Integration of the change to the add_graph interface.

________________________________________________________________________________
Commit at 2009-07-01 09:58:34 -0400 by Kenneth Basye <kbasye1@test1.hpcc1.hltcoe.jhu.edu> from code2
Message: Minor changes to projects/datatools
Last revno: 447   Last revision id: kbasye1@jhu.edu-20090630221134-0gnwp7aqkvey3fv8
Last revision date: 2009-06-30 18:11:34 -0400

modified:
  projects/datatools/parseLDCcatalog.py
    Improved command-line usability.
  projects/datatools/unlistedLDCinfo.py
    Added entries for LDC2009E{56,57,58}, the TAC 2009 evalutation
    suite.

________________________________________________________________________________
Commit at 2009-06-30 18:11:34 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Big overhaul of documentation generation
Last revno: 446   Last revision id: hsw@jhu.edu-20090630134436-4vazgu7h9yhucu50
Last revision date: 2009-06-30 09:44:36 -0400

modified:
  doc/sphinx/core.rst
    Account for changed names of generated ReST files.
  py/coe/SConscript
    Retitle this package to 'Base'.
  py/coe/am/SConscript
    Rearrange the order in which modules appear to get an ordering in
    the doc that seems more sensible.  Stop testing __init__.py in
    this package.
  py/coe/am/__init__.py
    Added inline markup to the module docstring so that class names
    link correctly in the generated doc.  This was mostly to see how
    it worked, but it is kind of nice to have.
  py/coe/audio/SConscript
  py/coe/containers/SConscript
  py/coe/graph/SConscript
  py/coe/grid/SConscript
    Minor title tweaks.
  py/coe/htkfiles/SConscript
    Stop generating doc for mmf.py, which is auto-generated and should
    not be used directly.
  py/coe/util/SConscript
    Introduce four categories and divide the modules in this package
    into them.  Both the categories and the assignments should
    probably be revisited at some point.
  py/coe/audio/audiodata.py
  py/coe/containers/objectset.py
  py/coe/containers/serializable.py
  py/coe/dataflow/framesynchronous.py
  py/coe/signalprocessing/__init__.py
  py/coe/textdata/coetext.py
  py/coe/util/codedependency.py
  py/coe/util/safediv.py
  py/coe/util/singleton.py
  py/coe/util/timestamp.py
  py/coe/util/versionset.py
    Added module docstrings to these guys, mostly just copying their
    descriptions from the file header to form a coherent first line in
    the docstring, since that appears as the title of the module when
    Sphinx's automodule is used.
  site_scons/site_tools/PyTools.py
    A significant modification to how we write the ReST files for
    Sphinx.  In particular, we now write a separate file for each
    module, so that each module ends up in its own html file.  Also
    added the ability to partition the modules in a package into
    categories for the purpose of organizing the doc; this is current
    used only in the util directory.
  templates/module.py
    Added a prompt to include a reasonable module title in the
    docstring for the module.
added:
  sandbox/sphinx
  sandbox/sphinx/expt1
  sandbox/sphinx/expt1/conf.py
  sandbox/sphinx/expt1/content.rst
  sandbox/sphinx/expt1/extensions
  sandbox/sphinx/expt1/extensions/auto_section.py
  sandbox/sphinx/expt1/index.rst
  sandbox/sphinx/expt1/intro.rst
  sandbox/sphinx/expt1/nosections.rst
  sandbox/sphinx/expt1/notes.txt
  sandbox/sphinx/expt1/onyx3.png
  sandbox/sphinx/expt2
  sandbox/sphinx/expt2/conf.py
  sandbox/sphinx/expt2/core.rst
  sandbox/sphinx/expt2/extensions
  sandbox/sphinx/expt2/extensions/auto_section.py
  sandbox/sphinx/expt2/index.rst
  sandbox/sphinx/expt2/intro.rst
  sandbox/sphinx/expt2/notes.txt
  sandbox/sphinx/expt2/onyx3.png
  sandbox/sphinx/expt2/pkg1
  sandbox/sphinx/expt2/pkg1.rst
  sandbox/sphinx/expt2/pkg1/__init__.py
  sandbox/sphinx/expt2/pkg1/mymod.py
  sandbox/sphinx/expt2/pkg1_mymod.rst
  sandbox/sphinx/expt2/pkg2
  sandbox/sphinx/expt2/pkg2.rst
  sandbox/sphinx/expt2/pkg2/__init__.py
  sandbox/sphinx/expt2/pkg2/mymod.py
  sandbox/sphinx/expt2/pkg2_mymod.rst
    A sandbox for experimenting with Sphinx.  This is useful because
    modifying the code to automatically write the ReST files is a
    pretty painful way to experiment.

________________________________________________________________________________
Commit at 2009-06-30 09:44:36 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Start on making dataflow graphs render themselves to dot.
Last revno: 445   Last revision id: hsw@jhu.edu-20090629205333-eiiwkbp753ym1n32
Last revision date: 2009-06-29 16:53:33 -0400

modified:
  py/coe/dataflow/graph.py
    Start on having processor graphs display themselves.  Change how the nested
    test is contructed.

________________________________________________________________________________
Commit at 2009-06-29 16:53:33 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: First pass at a factoring that allows graphical construction of nested processor nodes.
Last revno: 444   Last revision id: kbasye1@test1.hpcc1.hltcoe.jhu.edu-20090629145834-y07m971cfgw4v7wx
Last revision date: 2009-06-29 10:58:34 -0400

modified:
  py/coe/dataflow/graph.py
    First pass at a factoring that allows graphical construction of processor
    nodes, and nesting of such processors.  There are various mix-in classes for
    basic functionality, and then user-level classes that mix the base classes
    together and provide essential logic.  The framework has the beginnings of
    support for splits and joins, although at present only nested linear
    sequences of processors can be built.

________________________________________________________________________________
Commit at 2009-06-29 10:58:34 -0400 by Kenneth Basye <kbasye1@test1.hpcc1.hltcoe.jhu.edu> from code2
Message: Fix test breakage on HPCC machines
Last revno: 443   Last revision id: hsw@jhu.edu-20090626221906-f01u4dss5wyf5nvh
Last revision date: 2009-06-26 18:19:06 -0400

modified:
  py/coe/graph/dynamicgraph.py
    Fix test breakage on HPCC machines using doctest ellipsis; the
    problem was a difference in the last two digits of a floating
    point number for an eigenvalue.



________________________________________________________________________________
Commit at 2009-06-26 18:19:06 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Fixed an html link in the doc.
Last revno: 442   Last revision id: hsw@jhu.edu-20090626221312-qiqmjqvxp3ywpzlb
Last revision date: 2009-06-26 18:13:12 -0400

modified:
  doc/sphinx/index.rst
    Fixed the html link to Johns Hopkins.

________________________________________________________________________________
Commit at 2009-06-26 18:13:11 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: Changes to top-level of the documentation.
Last revno: 441   Last revision id: hugh@vmubuntu-20090618080224-2eaklpj464cdmfg9
Last revision date: 2009-06-18 04:02:24 -0400

modified:
  doc/sphinx/SConscript
  doc/sphinx/index.rst
  doc/sphinx/intro.rst
added:
  doc/sphinx/faq.rst
  doc/sphinx/vision.rst
    Work on the top-level of our documentation.  Just a rough start.

________________________________________________________________________________
Commit at 2009-06-18 04:02:24 -0400 by Hugh Secker-Walker <hugh@VmUbuntu> from code
Message: Minor fixes for Linux/Python2.6.
Last revno: 440   Last revision id: kbasye1@jhu.edu-20090626212323-zlx7pcbbeufc5400
Last revision date: 2009-06-26 17:23:23 -0400

modified:
  py/coe/dataflow/graph.py
    Fix a problem on Python 2.6 whereby object.__init__ no longer accepts any
    arguments.  So, we have to use a class as the base of our
    multiple-inheritance, **kwargs-using __init__ hierarchy that calls
    object.__init__ with no args.
  py/coe/graph/dynamicgraph.py
    Fixed an frequent, but random, problem on Linux/Python2.6/numpy whereby
    numpy.fromiter() sometimes had allocation failures; used the count=blah
    argument to prevent the problem.

________________________________________________________________________________
Commit at 2009-06-26 17:23:23 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Fix build problem in doc generation
Last revno: 439   Last revision id: hsw@jhu.edu-20090626210338-9eftuxn933dnr7wg
Last revision date: 2009-06-26 17:03:38 -0400

modified:
  doc/sphinx/SConscript
    Fix a build problem by adding the onyx3.png file to the list of
    aux_scons_sources, which are files used in the doc build but not
    declared with PyFile().


________________________________________________________________________________
Commit at 2009-06-26 17:03:38 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Work on processor graphs, and on social network graphs.
Last revno: 438   Last revision id: kbasye1@jhu.edu-20090626172107-zkms8ea5ilfnwfs8
Last revision date: 2009-06-26 13:21:07 -0400

modified:
  doc/sphinx/SConscript
  doc/sphinx/conf.py
    Added use of a logo, and commented out extension name for math.
added:
  doc/sphinx/onyx3.png
    Include a logo in the generated documentation.

modified:
  py/coe/dataflow/graph.py
    Toying with a factoring of the processor graphs problem as per mulling
    things over and discussions with Ken.

modified:
  py/coe/graph/SConscript
added:
  py/coe/graph/randomgraph.py
    Allow creation of Erdos-Renyi random graphs.
modified:
  py/coe/graph/dynamicgraph.py
    Added a property that returns the incidence matrix.  Added a test that gets the
    eigenvalues/eigenvectors from an incidence matrix.  Added support for
    make an UndirectedOnlineInvariantsGraph from an iterator.
  py/coe/graph/graphtools.py
    Added commentary about how we find the weakly connected subgraphs of a graph.
  py/coe/util/pointprocess.py
    Added code snippet that compares the mad_lower_k values from an UndirectedOnlineInvariantsGraph
    with the largest eigenvalue of the incidence matrix.
  py/coe/util/process.py
    Made doctest of the subprocess function be more explicit about labeling what gets returned.

________________________________________________________________________________
Commit at 2009-06-26 13:21:06 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Initial version of doc/internal/graphProcessorNotes.txt
Last revno: 437   Last revision id: kbasye1@jhu.edu-20090625190524-jyozhxjjir8k5b9y
Last revision date: 2009-06-25 15:05:24 -0400

added:
  doc/internal/graphProcessorNotes.txt
    Initial version of some notes on organizing processors into
    graphs, some from Hugh and some from Ken.



________________________________________________________________________________
Commit at 2009-06-25 15:05:23 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Added timestamp.py and options to use it for command-line processing and debug printing
Last revno: 436   Last revision id: kbasye1@test1.hpcc1.hltcoe.jhu.edu-20090625145644-614gt2wfutnis6xb
Last revision date: 2009-06-25 10:56:44 -0400

added:
  py/coe/util/timestamp.py
    A simple utility for generating timestamp strings in a fixed
    format.  Allows construction from an existing Python datetime
    object or with the current time.  This module also provides an
    associated Python regexp which will match a timestamp with
    grouping, which is useful in removing log-file differences.
modified:
  py/coe/am/bwtrainer.log-ref
  py/coe/am/bwtrainer.py
    Added timestamping to one debug output that's used in a logref
    test to verify that this was being correctly output and
    substituted.  The output in question is done on a per-frame basis
    in a top-level BW training function, so this output is actually a
    useful example of being able to see about how fast processing is
    going.
  py/coe/dataflow/command.py
    Added functionality to allow CommandProcessor to have a notify
    stream (which can be either a file or a StringIO object) which it
    will then use to write a time-stamped notification of the starting
    and finishing of the command.
  py/coe/util/SConscript
    Added timestamp.py
  py/coe/util/debugprint.py
    Added timestamp functionality to DebugPrint.  There were two
    possible places to do this, one where the printing is done and one
    where the printing is controlled.  I decided that timestamping
    should be determined at the same place that printing is
    controlled.  Accordingly, the list of keys to activate in the
    DebugPrint constructor can now include either of the two new objects
    DebugPrint.TIMESTAMP_ON and DebugPrint_TIMESTAMP_OFF, which effect
    subsequent 'real' keys.  The default is to print without
    timestamps, i.e., the previous behavior.  Note that the control
    DebugPrint.NO_PREFIX, which is used at the location where printing
    is done, will override timestamping; that is, the timestamp is
    considered part of the DebugPrint prefix.  But also note that the
    local control DebugPrint.NEWLINE_PREFIX, used to put a newline
    before any output, is also honored when timestamps are on, so that
    the entire prefix, including the timestamp, appears after a blank
    line.
  site_scons/site_tools/HLTCOE.py
    Added substitution for timestamps in logref files generally.  I
    believe the RE provided by timestamp.py is sufficiently specific
    that this is reasonable.  Note that doctesting does not use this
    kind of substitution, so in places where timestamps appear in
    doctest output, I've been using the +ELLIPSIS trick, with the
    pattern '[20...]' to match the timestamp, which will work
    correctly for just over 90 years yet :->.





________________________________________________________________________________
Commit at 2009-06-25 10:56:44 -0400 by Kenneth Basye <kbasye1@test1.hpcc1.hltcoe.jhu.edu> from code2
Message: Added 'sending' functionality to ProcessorBase; other minor fixes
Last revno: 435   Last revision id: kbasye1@jhu.edu-20090617211915-omh9vigzdlb3urz0
Last revision date: 2009-06-17 17:19:15 -0400

modified:
  py/coe/util/streamprocess.py
    Added functionality in ProcessorBase that allows turning sending
    on and off independent of changing the sendee.  The implementation
    adds the boolean 'sending' property and the 'set_sending' function
    to ProcessorBase, and a 'sending' argument to __init__, which
    defaults to True.  This eliminated the need for SinkProcessor
    since any processor can now become a sink, so I removed
    SinkProcessor.  I also renamed the internal _push member in
    ProcessorBase to _sendee, since the external interface uses that
    term exclusively.  Many subclasses of ProcessorBase in this file
    also got the new 'sending' argument to their initializers.  Note
    that SplitProcessor is still a special case, and needed some
    additional work to make it honor the 'sending' mechanism.  It may
    be that we want to eliminate the subclassing of SplitProcessor
    from ProcessorBase, as the latter is really geared toward
    one-in/one-out processing elements.  I also changed the labeling
    scheme for FunctionProcessor so that it now puts ()s after the
    function name when making the label, meant to signify a function
    call.
  projects/htk_test/test0.py
  projects/std/ngramidx.py
  py/coe/am/classifier.py
  py/coe/dataflow/framesynchronous.py
  py/coe/dataflow/join.py
  py/coe/dataflow/source.py
  py/coe/htkfiles/htkscp.py
  py/coe/htkfiles/mlfprocess.py
  py/coe/textdata/textfileprocess.py
    Added 'sending' argument to __init__ for classes that derive from
    ProcessorBase.  In all cases it defaults to True, and the only
    other change made was to pass this value to the superclass
    initializer.
  py/coe/am/acctrack.py
  sandbox/eventdet/eventchain.py
    As above, and removed some SinkProcessor usage.
  py/coe/dataflow/command.py
    As above, and changed label so is starts with a '$' - meant to
    signify a shell prompt.
  sandbox/livedemo/livedemo.py
    Finished some renaming, using 'split' instead of 'fanout', and
    removed some SinkProcessor usage.


________________________________________________________________________________
Commit at 2009-06-17 17:19:15 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Made CommandLineProcessor take a dict of bindings as the triggering event, rather than True
Last revno: 434   Last revision id: hsw@jhu.edu-20090617165754-iiz19dqs1a2l4zuz
Last revision date: 2009-06-17 12:57:54 -0400

modified:
  py/coe/dataflow/command.py
    A fundamental shift in the design of this module that was actually
    not that large a modification in the code.  Rather than taking
    True events which are just control signals, we now take
    dictionaries with variable bindings.  This allows data,
    configuration information, and particularly proxies for data in
    the form of filenames to be passed in.  The same dictionary is
    sent as the result event in case the command is executed
    successfully.  I removed the "output_files" property since it was
    probably not static enough to be useful anymore, and added
    properties "last_command_line", "last_stdout_output", and
    "last_stderr_output" which should be useful for logging, error
    messages and debugging.

________________________________________________________________________________
Commit at 2009-06-17 12:57:54 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Added support for sampling from a sliding window over a point process.
Last revno: 433   Last revision id: kbasye1@jhu.edu-20090617141200-4ioqkgfj2cz70ci8
Last revision date: 2009-06-17 10:12:00 -0400

added:
  py/coe/util/pointprocess.py
    Added PointProcessSamplingWindow, a class to support sampling from a sliding
    window on a point process.
modified:
  py/coe/graph/dynamicgraph.py
    Added an accessor method to UndirectedOnlineInvariantsGraph.
  py/coe/util/SConscript
    Added pointprocess.py to the SCons world.

________________________________________________________________________________
Commit at 2009-06-17 10:12:00 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add CommandLineProcessor class and rename FanoutSetProcessor to SplitProcessor
Last revno: 432   Last revision id: hsecker@hpcc1.hltcoe.jhu.edu-20090616233900-lb4zjj6472fm03ut
Last revision date: 2009-06-16 19:39:00 -0400

modified:
  py/coe/dataflow/SConscript
    Account for new file command.py
  py/coe/signalprocessing/htkmfcc.py
  py/coe/util/streamprocess.py
  sandbox/livedemo/livedemo.py
    Renamed FanoutSetProcessor to SplitProcessor, since this is the
    term we've taken to using for this element.
added:
  py/coe/dataflow/command.py
    Added CommandLineProcessor, a dataflow processing element for
    running command-line subprocesses.  This element is very simple,
    and assumes that all the interesting data will be transferred by
    file rather than in the dataflow.  Thus, the events consumed and
    produced by this element consist only of the object True.


________________________________________________________________________________
Commit at 2009-06-16 19:39:00 -0400 by Hugh Secker-Walker <hsecker@hpcc1.hltcoe.jhu.edu> from coe_repo
Message: Fix doc building bug on platforms with no live audio.
Last revno: 431   Last revision id: hsw@jhu.edu-20090616232707-826wn83pc9eadtne
Last revision date: 2009-06-16 19:27:07 -0400

modified:
  py/coe/audio/SConscript
    Added 'no_doc=True' to live audio files that shouldn't be documented
    on platforms with no live audio.

________________________________________________________________________________
Commit at 2009-06-16 19:27:07 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Work around a Sphinx bug.
Last revno: 430   Last revision id: hsw@jhu.edu-20090616231412-7ydla02x4nvfi0a5
Last revision date: 2009-06-16 19:14:12 -0400

modified:
  py/coe/audio/unshorten.py
    Put in a workaround to a Sphinx bug that was manifest when
    non-ascii character escaping appears in the docstring.
  py/coe/audio/SConscript
    Enable doc build on unshorten.py.

________________________________________________________________________________
Commit at 2009-06-16 19:14:12 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Online social networking work.  Some unshorten work.
Last revno: 429   Last revision id: hsw@jhu.edu-20090616220415-lngq109qodnvph1t
Last revision date: 2009-06-16 18:04:15 -0400

modified:
  py/coe/graph/dynamicgraph.py
    Substantial refactoring of what is now called
    UndirectedOnlineInvariantsGraph, a graph for use in online social networking
    analysis.  It now generates all the features that Glen and Carey are
    currently working with.  Added extensive testing and documentation, and even
    conjectural code regarding an improved greedy MAD estimate.  Work still
    remains to be done on a largest-eigenvalue MAD bound.

    Added PointProcessWindow, a proof-of-concept a sampling window for point
    processes.  This needs to be broken out into its own module somewhere else.
    Tested using real Enron data.
  py/coe/graph/SConscript
    Added dependency of dynamicgraph on the Enron data file.
  py/coe/util/SConscript
    New iterutils module that is used for reading CSV files.
added:
  py/coe/util/iterutils.py
    Added some iterator/generator tools.  Wrapped support for iterating through
    CSV files.
  py/coe/graph/enron_subset.csv
    Records of a few thousand Enron emails.

added:
  py/coe/audio/unshorten.py
    A bit-stream decoder for Tony Robinson's shorten format.  This is one half
    of a reference shorten decoder.  The other half will do the numerical work
    using the arrays that the stream decoder creates.  At that point, we could
    work with Erik de Castro Lopo of libsndfile to make a C version for use
    in libsndfile.
  py/coe/audio/shorten.shn
    Shorten data for testing the bit-stream decoder.
modified:
  py/coe/audio/SConscript
    Include unshorten.py.  Cleaned up.

modified:
  site_scons/site_tools/PyTools.py
    Fixed a spelling error.

________________________________________________________________________________
Commit at 2009-06-16 18:04:15 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: Add dependencies of Sphinx on PYCs.
Last revno: 428   Last revision id: kbasye1@test1.hpcc1.hltcoe.jhu.edu-20090615223732-o07a4loh2zzqvzem
Last revision date: 2009-06-15 18:37:32 -0400

modified:
  site_scons/site_tools/PyTools.py
    Changes, with Ken's help, to get Sphinx's doc generation to properly depend
    on the PYCs of the project so that when when Sphinx imports it works.
  py/syck/SConscript
    Added explicit dependency of the package on the syck shared object library.

modified:
  py/coe/audio/audiodata.py
    Added ellipses on the libsndfile version test since I'm bleeding edge.

________________________________________________________________________________
Commit at 2009-06-15 18:37:32 -0400 by Kenneth Basye <kbasye1@test1.hpcc1.hltcoe.jhu.edu> from code2
Message: Improve generation of Twiki table in datatools
Last revno: 427   Last revision id: kbasye1@jhu.edu-20090515205503-00xkx3k5o9fuik6q
Last revision date: 2009-05-15 16:55:03 -0400

modified:
  projects/datatools/parseLDCcatalog.py
    Added an entry for LDC2009E20, which we now have.
  projects/datatools/unlistedLDCinfo.py
    Fixed sorting of table during generation of Twiki table so things
    start out in a reasonable state.  I note that they also seem to
    stay in a reasonable state after various column sorts, although
    there's not much I could do if that didn't happen.  Also added
    code to mark WikiWords with '!' so they don't appear with '?'s to
    prompt new topics.

________________________________________________________________________________
Commit at 2009-05-15 16:55:03 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Rework doc building to eliminate LD_LIBRARY_PATH hack
Last revno: 426   Last revision id: kbasye1@jhu.edu-20090515164132-epp1z03o2a30chf0
Last revision date: 2009-05-15 12:41:32 -0400

modified:
  site_scons/site_tools/PyTools.py
    Taking some useful advice from Hugh, I reorganized the way doc is
    built using Sphinx so that the sphinx-build process is run
    directly from Scons, whereas before I was creating a separate
    subprocess from Python.  This allowed me to get rid of the
    LD_LIBRARY_PATH hacking that had been necessary before.



________________________________________________________________________________
Commit at 2009-05-15 12:41:32 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: SConscript file additions and updates in doc directory
Last revno: 425   Last revision id: hsw@jhu.edu-20090513192505-x47av0vldjay0oyt
Last revision date: 2009-05-13 15:25:05 -0400

modified:
  SConscript
  doc/SConscript
  doc/presentations/SConscript
  doc/readmes/SConscript
added:
  doc/images/SConscript
  doc/licenses/SConscript
removed:
  doc/licenses/LICENSE_double_py
    Cleanup of SConscript files in the doc directory.  I added new
    SConscript files in 'images' and 'licenses' and made sure the
    others were including all the files in those directories.  At this
    point, the only files in the doc directory *not* mentioned in
    SConscript files are those in the 'internal' directory, which has
    no SConscript file at all.  Since we no longer include the
    double.py library, I removed its license.

________________________________________________________________________________
Commit at 2009-05-13 15:25:04 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Work on dynamic graph for social networks.  Doc cleanup.
Last revno: 424   Last revision id: kbasye1@jhu.edu-20090511205821-di8o0p5arfoht3h0
Last revision date: 2009-05-11 16:58:21 -0400

modified:
  py/coe/graph/dynamicgraph.py
    Major overhaul.  Added features property.  Fixed subtle problems with the
    node adjacency list.
  py/coe/audio/audiodata.py
    Added ReST syntax for a table in a docstring.
  py/coe/graph/graphsandbox.py
    Converted from DOS to Unix line endings.  Added a module doc string.

________________________________________________________________________________
Commit at 2009-05-11 16:58:21 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add tools for parsing Malach project transcription files
Last revno: 423   Last revision id: kbasye1@jhu.edu-20090505211821-jwjsf1l870q5zjhq
Last revision date: 2009-05-05 17:18:21 -0400

modified:
  SConscript
added:
  sandbox/malach
  sandbox/malach/README.TXT
  sandbox/malach/SConscript
  sandbox/malach/filefix.py
  sandbox/malach/malach_parse.py
  sandbox/malach/test_transcriptions
  sandbox/malach/test_transcriptions/00009-003.trs
  sandbox/malach/test_transcriptions/35995-002.trs
  sandbox/malach/test_transcriptions/trans-13.dtd
    Added a new sandbox project 'malach' which contains some tools,
    explanations, and examples of parsing transcriptions files from
    the Malach project.  These files were originally produced using
    the Transcriber program (see http://trans.sourceforge.net).  The
    transcriptions needed a lot of work to get them into reasonable
    shape; the file README.TXT explains what I did, and the machinery
    for the changes is in filefix.py (not tested).

    malach_parse.py contains code for parsing these files into Python
    data structures.  There's also code to validate the files against
    a DTD used by Transcriber 1.5.2, but this is only run if the
    platform doing the build has the lxml library available.


________________________________________________________________________________
Commit at 2009-05-05 17:18:21 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Create .../doc/internal for non-released planning documents, other minor cleanup
Last revno: 422   Last revision id: kbasye1@test1.hpcc1.hltcoe.jhu.edu-20090427163620-6xsp5ui44mkt1us2
Last revision date: 2009-04-27 12:36:20 -0400

modified:
  changes.txt
    Added some notes to the commentary for my last checkin noting the
    LD_LIBRARY_PATH hackery that I added to get the doc build working
    on HPCC Linux.  This is probably also a good time to note that
    building doc on Mac may not work with a Sphinx version older than
    0.6.1, but it does work for me with that version.
  projects/datatools/parseLDCcatalog.py
    Minor correction to imports
  py/coe/graph/graphtools.py
    Fixed documentation which suggested using hashable labels in
    GraphBuilder was optional, but a good idea.  In fact, the code
    insists on it, so the doc now makes it clear this is required.
added:
  doc/internal
renamed:
  doc/brainstorming-2008-11-25.txt ==> doc/internal/brainstorming-2008-11-25.txt
  doc/coe-diagram-planning-2008-11.txt ==> doc/internal/coe-diagram-planning-2008-11.txt
  doc/longtermThingsToDo.txt ==> doc/internal/longtermThingsToDo.txt
  doc/names.txt ==> doc/internal/names.txt
  doc/outreachPlanning.txt ==> doc/internal/outreachPlanning.txt
  doc/planning-2008-11-04.txt ==> doc/internal/planning-2008-11-04.txt
  doc/planning-2009-01-13.txt ==> doc/internal/planning-2009-01-13.txt
  doc/planning-2009-02-03.txt ==> doc/internal/planning-2009-02-03.txt
    In preparation for an automated release process, moved a
    collection of files we don't want to appear in releases to a new
    directory in .../doc called 'internal'.  The idea is that this
    directory will be stripped away from releases.

________________________________________________________________________________
Commit at 2009-04-27 12:36:19 -0400 by Kenneth Basye <kbasye1@test1.hpcc1.hltcoe.jhu.edu> from code1
Message: Get doc building working on the HPCC
Last revno: 421   Last revision id: kbasye1@test1.hpcc1.hltcoe.jhu.edu-20090424183728-um1aaa6ai2a3qvqr
Last revision date: 2009-04-24 14:37:28 -0400

Changes to get doc building working on the HPCC - with thanks to Ben
for getting Sphinx installed there.
modified:
  doc/sphinx/SConscript
    Changed platform-conditional code so that we now build under both
    Darwin and Linux.
  py/coe/SConscript
    Made this module on that generates documentation; that it wasn't
    was an oversight in an earlier checkin.
  py/coe/audio/SConscript
    Made a couple Mac-specific files not try to build doc under Linux.
    This points out a bit of an issue with doc-building which I'm not
    going to tackle in this checkin.  The problem is that Sphinx's
    autodoc faciliity uses 'import' to build the documentation for
    Python files, so any file we want to appear in the doc has to be
    importable without errors on all the platforms where we want to
    build doc.  We may need to start doing imports of libraries which
    are supported only on some platforms in a conditional way.
  py/coe/htkfiles/mmf.g
  py/coe/htkfiles/mmf.py
    Pacified Sphinx by changing the way one test in this file
    displayed the output.  I still don't see what the objection was,
    but this fixed the last error from Sphinx when running on the
    cluster.
  py/coe/util/__init__.py
    Rearranged some doc-string contents that Sphinx wasn't happy with.
  site_scons/site_tools/PyTools.py
    Tweaked code so that files in .../py/coe, that is, at the top
    level of the project core, are correctly included in doc
    generation.  Changed the function that builds the doc to return an
    error code so that Scons will correctly abort the build when
    doc-building fails.  I added a pretty ugly hack to get around not
    being able to import certain files because their C++ libraries
    were not being found; look for manipulations of LD_LIBRARY_PATH.
    NOTE: I haven't tried this change out on the Mac yet, where I
    think we may still be getting some Sphinx errors.  An upgrade to
    Sphinx may be necessary to get the doc to build without errors
    which will now cause the build to fail.


________________________________________________________________________________
Commit at 2009-04-24 14:37:28 -0400 by Kenneth Basye <kbasye1@test1.hpcc1.hltcoe.jhu.edu> from code1
Message: Initial version of tools to help index the CoE's data archive
Last revno: 420   Last revision id: hsw@jhu.edu-20090424014712-pv2opo5h1fi50vdn
Last revision date: 2009-04-23 21:47:12 -0400

modified:
  SConscript
    Account for new project directory.
added:
  projects/datatools
  projects/datatools/SConscript
    Initial version of some tools to help build useful indices of the
    data archive at the CoE.
  projects/datatools/parseLDCcatalog.py
  projects/datatools/unlistedLDCinfo.py
    A tool to parse the XML file available at the LDC which provides
    an index of their publically available corpora.  Under normal
    operation, the tool will open the XML file on the LDC website,
    although the tests use a static file.  The tool builds a Python
    dictionary, which can then be pruned to contain only information
    about corpora we have by comparing the catalog numbers with those
    found in /export/common/data/corpora/LDC.  Thus this tool is
    really meant to be run on a cluster machine, although the tests
    are self-contained.  An additional function can turn the Python
    dictionary into a TWiki table for use in the ResearchData area of
    the CoE TWiki.  unlistedLDCinfo.py just defines a dictionary which
    attempts to provide some of the same information for corpora the
    CoE has which don't appear in the XML file, and there is
    functionality in parseLDCcatalog.py to augment the database with
    this additional information.
  projects/datatools/ldc_catalog_2009_3_30.xml
  projects/datatools/test_dir
  projects/datatools/test_dir/LDC2004S13
  projects/datatools/test_dir/LDC2004S13/dummy.txt
  projects/datatools/test_dir/LDC2009T01
  projects/datatools/test_dir/LDC2009T01/dummy.txt
    Assorted files and directories used to test these tools.  In
    creating these, I encountered an interesting (and annoying) little
    glitch in our build tools, which I'll document here for
    posterity.  Originally, the two LDC directories were just empty
    files I had touched, since the tools don't care if the entries are
    directories or not.  But when I listed these files as doctest
    files in the SConscript, Scons insisted on appending a .pyc
    extension on them and then failed to find them.  I think this will
    happen whenever the files given in the doctest_files argument to
    PyFile() don't already have an extension, and further that this
    arises out of the way the Scons Builder class works, so it may be
    hard to fix well.  My work-around was to make these into real
    directories and put dummy files which do have extensions into
    those directories, then put the dummy files into the doctest_files
    argument.



________________________________________________________________________________
Commit at 2009-04-23 21:47:11 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Preliminary work on an online, undirected graph object.
Last revno: 419   Last revision id: hsw@jhu.edu-20090420212039-5y2cofbhoe86a6pc
Last revision date: 2009-04-20 17:20:39 -0400

modified:
  py/coe/graph/SConscript
added:
  py/coe/graph/dynamicgraph.py
    Initial work on an online, undirected graph object.  This is very
    preliminary work that starts to address the data structure needs and the
    configuration needs.  The UndirectedGraph class is a start at the basic
    object for managing the addition and removal of edges and the collecting of
    local and global stats (according to some, as yet unimplemented, constructor
    configuration option).  The OnlineUndirectedGraphStats class is a failed
    attempt to layer the logic of the basic data structure under the statistics
    collection.  This class should be removed.

    Future work should involve a class that would manage the flow of edges added
    to and removed from UndirectedGraph, e.g. by keeping a deque of the edges
    that are pushed into the system from some external source of edges, and also
    for implementing an algorithm/policy for removing them in some timely
    fashion.  Some other class, in a processor chain, would be responsible for
    deciding when and how to request and then model the statistics being kept in
    UndirectedGraph.

________________________________________________________________________________
Commit at 2009-04-20 17:20:39 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: More integration of sph2pipe audio code.
Last revno: 418   Last revision id: hsecker@hpcc1.hltcoe.jhu.edu-20090420191445-68sx23u20wikzgfz
Last revision date: 2009-04-20 15:14:45 -0400

modified:
  py/coe/audio/audiodata.py
    Changes to use the new sph2pipe code for all Sphere files.  Cleanup and
    consolidation of the audio processing codepaths.  Added tests of errors
    using libsndfile.

________________________________________________________________________________
Commit at 2009-04-20 15:14:45 -0400 by Hugh Secker-Walker <hsecker@hpcc1.hltcoe.jhu.edu> from coe_repo
Message: Added a 64-bit version of sph2pipe.
Last revno: 417   Last revision id: hugh@vmubuntu-20090417204250-o7wp61ixuujt8ugu
Last revision date: 2009-04-17 16:42:50 -0400

added:
  bin/linux2-posix-x86_64-64bit-le/sph2pipe
    Added a 64-bit version of sph2pipe.

________________________________________________________________________________
Commit at 2009-04-17 16:42:50 -0400 by Hugh Secker-Walker <hugh@VmUbuntu> from code
Message: Added a Linux version of sph2pipe.  Tweaked bzr ignore list.
Last revno: 416   Last revision id: kbasye1@jhu.edu-20090420185134-q7hcattjnfgaoflu
Last revision date: 2009-04-20 14:51:34 -0400

modified:
  .bzrignore
    Told bzr to ignore ./ckin_files.py

added:
  bin/linux2-posix-i386-32bit-le/sph2pipe
    A Linux version of sph2pipe.

________________________________________________________________________________
Commit at 2009-04-20 14:51:34 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Better bailout behavior and error messages in bzrtool.py
Last revno: 415   Last revision id: hsw@jhu.edu-20090420184825-2f5yr2144tlgs5vr
Last revision date: 2009-04-20 14:48:25 -0400

modified:
  bin/bzrtool.py
    Changes to improve checking on the status of changes in the local
    tree and the parent; we now offer users a chance to bail out if
    the parent has commits we don't have yet, suggesting that doing a
    pull first would be a good idea.  Also somewhat more informative
    error messages, particularly in cases of network failures.

________________________________________________________________________________
Commit at 2009-04-20 14:48:25 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Added support for reading NIST Sphere files.  Bug fix.  Added Exceptions.
Last revno: 414   Last revision id: hsecker@test1.hpcc1.hltcoe.jhu.edu-20090415211216-3anz6eisd3ecp3on
Last revision date: 2009-04-15 17:12:16 -0400

modified:
  py/coe/audio/audiodata.py
    Added low-level support for using sph2pipe to uncompress and read
    NIST Sphere files.  Changed some code to use the project's exceptions.
  py/coe/audio/SConscript
    Added to the set of doctest_files for audiodata.py.
added:
  bin/darwin-posix-i386-32bit-le/sph2pipe
    A platform-specific executable for decoding NIST Sphere files.
  py/coe/audio/shorten.sph
    An SPH file with shorten-compressed data; used for testing.

modified:
  py/coe/__init__.py
    Added some standard exceptions to be used within the project:
    coe.Exception(Exception)
      Baseclass for exceptions generated by logic within the project.
    coe.DataTypeError(coe.Exception)
      The DataTypeError exception is raised when the type of some data is
      incorrect or cannot be determined.
    DataFormatError(coe.Exception):
      The DataFormatError is raised when an inconsistency is detected in the
      internal structure of data.
    ExternalError(coe.Exception):
      The ExternalError is used when an exception must be raised due to an error
      condition occuring outside of Python or the project's Python code.
    SubprocessError(EnvironmentError, coe.ExternalError):
      Exception raised when communication with a subprocess fails.
  py/coe/util/SConscript
    Added the new process.py file
added:
  py/coe/util/process.py
    Module for working with subprocesses.  For now it has a subprocess()
    function that takes care of the low-level details and error throwing of our
    most common subprocess usage scenario.

modified:
  py/coe/dataflow/source.py
    Fixed a show-stopper error condition whereby we tried to pop from a queue
    that had become empty due to the client calling Stop().

________________________________________________________________________________
Commit at 2009-04-15 17:12:16 -0400 by Hugh Secker-Walker <hsecker@test1.hpcc1.hltcoe.jhu.edu> from coe_repo
Message: Changes to get audio code working on 64-bit platforms.
Last revno: 413   Last revision id: kbasye1@jhu.edu-20090414222730-hc06oz71o3g2j474
Last revision date: 2009-04-14 18:27:30 -0400

modified:
  cpp/floatutils/floatutils.cpp
  cpp/liveaudio/sndfilewrap.c
    Fixed formatting strings to work on 64-bit platform.
  py/coe/audio/audiodata.py
    Added doctest ellipsis for numpy arrays that have different dtype
    printing behavior on 64-bit platform than on 32-bit platform.

  cpp/liveaudio/SConscript
    Changes to find includes and shared libraries at a well-known
    location on the 64-bit environment while building and while
    running under SCons.  This is a short-term solution to get us
    running with the new audio code on the grid.

    To use audio code outside of SCons you will also need to tweak
    your environment, e.g. by adding something like the following to
    your ~/.profile:

      if [ ${LD_LIBRARY_PATH:-} ] ; then
        export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/export/local/libsndfile-1.0.19/lib:/export/local/mpg123-1.7.2/lib
      else
        export LD_LIBRARY_PATH=/export/local/libsndfile-1.0.19/lib:/export/local/mpg123-1.7.2/lib
      fi

________________________________________________________________________________
Commit at 2009-04-14 18:27:30 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Changes to support Python 2.6
Last revno: 412   Last revision id: hsw@jhu.edu-20090414221042-0k4c9cia0sen9g22
Last revision date: 2009-04-14 18:10:42 -0400

    Work to get the project to build with Python 2.6.  At this point I'm
    able to build on MacOS with Python 2.6 and Numpy 1.3.0.
modified:
  py/coe/SConscript
    Removed coe_py_compile.py (see below).
  py/coe/builtin.py
  py/coe/containers/__init__.py
    Changed error message expected in doctest cases where TypeError is
    raised because the type isn't hashable.  This handles a new form
    for the details associated with this error in Python 2.6.  In
    order to keep these tests working with Python 2.5, I've used an
    ellipsis.  When we drop support for Python 2.5, we can change
    these to use the details as formatted by 2.6.
  py/coe/dataflow/cfg.py
  py/coe/dataflow/simplecfg.py
  py/coe/graph/graphtools.py
    Eliminate arguments passed to __init__ functions in superclasses
    where those superclasses were either 'tuple' or 'object'.
    Python 2.6 doesn't allow arguments to be passed to the 'object'
    __init__ function, and, apparently, 'tuple' defers its __init__
    function to object.
  site_scons/site_tools/PyTools.py
    Removed references to coe_py_compile module, which wasn't used
    here any more.
removed:
  py/coe/coe_py_compile.py
    This wrapper around the Python compiler was no longer used, so
    I've removed it.

________________________________________________________________________________
Commit at 2009-04-14 18:10:42 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Another tweak to sprintf formatting.
Last revno: 411   Last revision id: hugh@vmubuntu-20090414170050-3ekofrny1qaenzln
Last revision date: 2009-04-14 13:00:50 -0400

modified:
  cpp/liveaudio/mpg123wrap.c
    Another tweak to fix sprintf warnings, this time by brute-force casting to
    known large type.

________________________________________________________________________________
Commit at 2009-04-14 13:00:50 -0400 by Hugh Secker-Walker <hugh@VmUbuntu> from code
Message: Fixes to get audio reading code running under 32-bit linux.
Last revno: 410   Last revision id: hugh@vmubuntu-20090414161841-atfn8dcf9t9h0ghy
Last revision date: 2009-04-14 12:18:41 -0400

Changes to get the new audio code running under 32-bit linux.
modified:
  cpp/liveaudio/SConscript
    Made generation of compile flags happen for all platforms.  Added
    /usr/local/lib to the linux LIBPATH.
  cpp/liveaudio/mpg123wrap.c
    Tweak some sprintf formatting modifiers.  Remove requirement that the
    decoder be generic.
  cpp/liveaudio/sndfilewrap.c
    Tweak some sprintf formatting modifiers.
  py/coe/audio/audiodata.py
    Sigh... added ellipses to various mpg123 output values.

________________________________________________________________________________
Commit at 2009-04-14 12:18:41 -0400 by Hugh Secker-Walker <hugh@VmUbuntu> from code
Message: Fix URL in thirdParty.txt.  Make chkin_files.py get a final newline.
Last revno: 409   Last revision id: hsw@jhu.edu-20090414150929-n3yjs3l5rygmelf5
Last revision date: 2009-04-14 11:09:29 -0400

modified:
  doc/thirdParty.txt
    Fix URL for libsndfile code.

  bin/bzrtool.py
    Make sure ckin_files.py gets a final newline.

________________________________________________________________________________
Commit at 2009-04-14 11:09:29 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: Updated manifest of third-party tools.
Last revno: 408   Last revision id: kbasye1@jhu.edu-20090414145719-b9fl08rvkws0jmbi
Last revision date: 2009-04-14 10:57:19 -0400

modified:
  doc/thirdParty.txt
    Updated to reflect recent changes in dependencies etc.  Rearranged
    'checked-in' section to come after 'required-external'.  Added links
    to download sites for many of the packages.

________________________________________________________________________________
Commit at 2009-04-14 10:57:19 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Remove double.py from py/coe/util
Last revno: 407   Last revision id: hsw@jhu.edu-20090413204357-v1gpf7oydg7gqprl
Last revision date: 2009-04-13 16:43:57 -0400

modified:
  py/coe/util/SConscript
  py/coe/util/floatutils.py
removed:
  py/coe/util/double.py
    Removed double.py, a third-party bit of Python code that emulated
    some C99 floating-point functionality.  All of this was made
    obsolete by the C++-based floatutil package, and we decided
    keeping this third-party code wasn't worth it.

________________________________________________________________________________
Commit at 2009-04-13 16:43:57 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Fix compile paths for Darwin.  Minor cleanup.
Last revno: 406   Last revision id: hsw@jhu.edu-20090413160632-j679r1e514rq4cek
Last revision date: 2009-04-13 12:06:32 -0400

modified:
  cpp/liveaudio/SConscript
    Fix CPPPATH and LIBPATH for Darwin to point to /opt/local directories.
    Other cleanup.
  doc/sphinx/SConscript
    Remove a gratuitous print.

________________________________________________________________________________
Commit at 2009-04-13 12:06:32 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: New audio-file interface.  Stricter C/C++ checking.
Last revno: 405   Last revision id: kbasye1@jhu.edu-20090413150450-mwyuhg9yli86iw9w
Last revision date: 2009-04-13 11:04:50 -0400

modified:
  SConstruct
    Added '-Wall -Werror' to CPPFLAGS to make us fail on any of numerous
    compiler warnings.  This found many unsigned/signed comparisons, and many
    formatting vs argument mismatches in sprintf-like calls.
  cpp/liveaudio/DCAudioFileRecorder.cpp
  cpp/liveaudio/audiomodule.cpp
  cpp/liveaudio/ring_buffer_threads.h
    Fixed numerous formatting/argument mismatches.  Fixed numerous
    unsigned/signed mismatches, mostly by declaring loop counters as unsigned.
    Wrapped some verbose startup and shutdown logging with the VERBOSE macro,
    effectively silencing it until we integrate DebugPrint with our C library
    interfaces.  Also removed unused functions and variables.

  py/coe/__init__.py
    Fixed pylib_build_path.

  cpp/liveaudio/SConscript
    Added new targets for wrapping the sndfile and mpg123 audio libraries.  Also
    added some not-currently-used logic for the sox library; the sox library is
    likely unusable as it calls exit() under certain conditions.
added:
  cpp/liveaudio/ctypes_defs.h
    Macros to support returning useful error messages to Python via the ctypes
    interface.  The mechanism is string based, with the first token of the
    string being the Python exception type that should be thrown, and the rest
    of the string being formatted with variable arguments plus boilerplate with
    the filename and line number in the C library.
  cpp/liveaudio/mpg123wrap.c
  cpp/liveaudio/mpg123wrap.h
  cpp/liveaudio/sndfilewrap.c
  cpp/liveaudio/sndfilewrap.h
    Wrapper for the mpg123 MPEG decoder audio library.  Wrapper for the sndfile
    audio-file library.  These wrappers expose a very simple interface for
    ctypes access from python.  The interface conventions make it easy to cause
    Python to generate informative error messages, and at the same time, handle
    freeing up of pointers, regardless of whether and where (C or Python) errors
    get generated.
  py/coe/audio/audiodata.py
    New interface to audio files.  Will replace our usage of sox.  Has a more
    principled way of exposing the file-centric aspects of audio encoding and
    the numpy-array-centric aspects the returned audio data.  Still needs work
    to use sph2pipe on shorten-encoded data.  This file also contains a lot of
    utility code for using ctypes to access our C libraries.  Makes effective
    use of numerous context managers to create, use, and free the C pointers
    that working with the audio C libraries entails, notably with correct
    freeing of pointers regardless of where (C or Python) the errors originate.
  py/coe/audio/problem.sph
  py/coe/audio/problem.mp3
  py/coe/audio/seven.mp3
  py/coe/audio/zero.sph
  py/coe/audio/zero.wav
    Data files used in the audiodata.py tests.

________________________________________________________________________________
Commit at 2009-04-13 11:04:49 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Fix a build problem and add grid to documentated packages
Last revno: 404   Last revision id: kbasye1@jhu.edu-20090412181111-o9ec014uxts3rdl2
Last revision date: 2009-04-12 14:11:11 -0400

modified:
  doc/sphinx/SConscript
    Forgot to remove PyFile declaration for doc-build.py, which I
    removed in my previous checkin.
  doc/sphinx/core.rst
    Added grid.rst to the list of rst files indexed here, since we are
    now generating that file.

________________________________________________________________________________
Commit at 2009-04-12 14:11:11 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Build documentation under SCons (on MacOS only for now)
Last revno: 403   Last revision id: kbasye1@jhu.edu-20090319171821-397zojpz59yj8mei
Last revision date: 2009-03-19 13:18:21 -0400

Move doc generation machinery under SCons; doc generation is now part
of the standard build on MacOS (but not on other platforms).

modified:
  SConscript
    Add doc/sphinx/SConscript to the list of system SConscript files.
  doc/SConscript
    Removed no-longer-relevant comment.
  py/coe/am/SConscript
  py/coe/containers/SConscript
  py/coe/dataflow/SConscript
  py/coe/graph/SConscript
  py/coe/htkfiles/SConscript
  py/coe/lexicon/SConscript
  py/coe/signalprocessing/SConscript
  py/coe/textdata/SConscript
    Added calls to DocBuildThisPackage() in all SConscript files under
    .../py/coe/.  See comments for PyTools.py, below.
  py/coe/grid/SConscript
    As above, plus uncomment explicit Depends call for gridgo.py on
    griddy.py since several runs of scons with --random failed by not
    honoring this dependency.
  py/coe/audio/SConscript
    As above, plus turn off doc generation for asciivumeter.py, since
    it has no doc and can't be safely imported by Sphinx.
  py/coe/util/SConscript
    As above, plus add PyFile calls for rocutils.py and versionset.py,
    and remove duplicate entry for debugprint.py.
  py/coe/util/rocutils.py
  py/yapps2/__init__.py
    Minor cleanup.
  site_scons/site_tools/PyTools.py
    Implement Sphinx-based doc building under SCons.  This is
    accomplished with two new functions meant to be called from
    SConscript files.  DocBuildThisPackage() should be called from all
    SConscript files which list (via PyFile() calls) Python files
    which should be documented.  The function takes a string argument
    which is used as the title string for the package, and must be
    called *before* any calls to PyFile().  The second function,
    SphinxDocBuild(), should be called only once, and this is
    currently done from .../doc/sphinx/SConscript.  Finally, PyFile()
    now takes a new argument, "no_doc" (default False), which allows
    doc-generation to be disabled on a per-file basis.  Under the
    covers, DocBuildThisPackage and PyFile now cooperate to build the
    list of reST files which should be generated and the Python files
    which should be included in each reST file.  Note, however, that
    the hand-written file core.rst (in .../doc/sphinx), still contains
    hard-coded references to these rst filenames; automatically
    generating the contents of core.rst is deferred to a later time.
added:
  doc/sphinx/SConscript
    This SConscript is where doc-building actually happens, by
removed:
  doc/sphinx/doc_build.py
    The doc generation code in this file was moved to PyTools.py
  py/coe/coehome.py
    This file was a stub for earlier doc generation and was no longer
    needed.

________________________________________________________________________________
Commit at 2009-03-19 13:18:20 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Fix bugs in conversion of TrainingGraph to Hmm, lots of new tests
Last revno: 402   Last revision id: kbasye1@jhu.edu-20090302161331-k88q81n50utxyv8i
Last revision date: 2009-03-02 11:13:31 -0500

  A round of optimizations in training networks of
  embedded HMMs and some bug fixes in converting these networks into
  standalong HMMs.  The bugs were tickled by having networks which
  included HMMs where there was a non-zero probability of making a
  transition directly from an input state to an output state.  Such
  networks are now correctly converted.  NOTE: there are still bugs in
  the actual training of networks with these HMMs.  Those will be
  fixed in a subsequent checkin, but I wanted to get this first round
  of fixes in first.
modified:
  py/coe/am/bwtrainer.log-ref
  py/coe/am/bwtrainer.py
    We now deal correctly with HMMs which can skip from inputs to
    outputs without going through any real states when converting from
    TrainingGraphs to standalone HMMs.  This involves quite a bit of
    work in the conversion process, since the previous assumption that
    non-zero transitions could only occur between the real states of
    HMMs which were adjacent in the network.  With some fairly complex
    book-keeping, I was able to preserve the one-pass algorithm that
    does the conversion.  Also fixed a bug in initialization in which
    I wasn't checking split-prob entries correctly.  Added many new
    tests and cleaned up the log-ref testing framework substantially.
  py/coe/am/hmm.py
    An initial round of optimizations and fixes, but see above for
    remaining problems - this is work in progress.  Added better
    diagnostics when transition matrices are not summing to 1.0
    correctly.  Added a member which stores the working transition
    matrix with the axes swapped - it's not clear this really saves
    much computation, though.  Mostly this work is aimed at getting
    the computations in the backward pass to look more like those in
    the forward pass, which would also make them much more efficient.
  py/coe/am/hmm_mgr.py
    Added a property to HmmMgr which tracks whether the HMMs stored
    are using the log domain or not, and checks to verify that all the
    HMMs agree about this property.  Yet another example of a property
    that seems like it should always be consistent, but which is hard
    to know in advance of having any actual models.
  py/coe/am/modelmgr.py
    Attempted to optimize an accumulation routine by rearranging some
    computation.  Unfortunately this resulted in very slightly
    different results, which I wasn't ready to tolerate just yet.  So
    there's a replacement function in this file that isn't being used
    (look for 'XXX').  I'm fairly certain these differences would not
    affect training in a significant way, so we may want to use this
    function when we can verify that.
  py/coe/am/testbwt.log-ref
  py/coe/am/testbwt.py
    Added a bunch of new tests aimed at tracking down the training bug
    mentioned above, and did some streamlining of the test
    infrastructure in this file.

________________________________________________________________________________
Commit at 2009-03-02 11:13:30 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Overhaul bzrtool.py to make prep and ckin better
Last revno: 401   Last revision id: kbasye1@jhu.edu-20090219222233-ug45lf0zj5s1hygl
Last revision date: 2009-02-19 17:22:33 -0500

modified:
  bin/bzrtool.py
    We now unconditionally write a Python file with a list of files to
    be committed.  This file can be edited to effect a partial
    check-in.  Note that when merges are pending, this file is
    ignored, since Bazaar doesn't support partial check-ins when
    merges are pending.  Both 'prep' and 'ckin' now check to make sure
    the current installation is up to date relative to the parent, and
    both check to make sure there are no conflicts, which would cause
    attempts to commit to fail.

________________________________________________________________________________
Commit at 2009-02-19 17:22:33 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Fix a bug in new partial check-in code; add commentary in changes.txt
Last revno: 400   Last revision id: kbasye1@jhu.edu-20090219181917-pvn715ecgezgz9cl
Last revision date: 2009-02-19 13:19:17 -0500

modified:
  bin/bzrtool.py
    Fix a bug in which the file list written to partial_ckin.py was
    incorrect for files which were renamed.
  changes.txt
    Added some additional commentary to my initial check-in comments
    for partial check-ins, suggesting some simple sanity checks to
    perform.

________________________________________________________________________________
Commit at 2009-02-19 13:19:17 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Complete previous partial check-in with small snew change
Last revno: 399   Last revision id: kbasye1@jhu.edu-20090219181636-x01u6gwpxt1uyo0d
Last revision date: 2009-02-19 13:16:36 -0500

modified:
  bin/snew
    Completing my previous partial check-in.  snew now passes any
    arguments to bzrtool.py, which complains and prints usage if any
    are provided, as, for now, it doesn't take any.


________________________________________________________________________________
Commit at 2009-02-19 13:16:35 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add partial check-ins in bzrtool.py and snew-checking in prep command
Last revno: 398   Last revision id: kbasye1@jhu.edu-20090218213012-fhb2owqhz5uerppc
Last revision date: 2009-02-18 16:30:12 -0500

modified:
  bin/bzrtool.py
    Added support for partial check-ins.  To use it, first do
    "bin/prep --partial" which will write a file partial_ckin.py in
    your project root directory.  Edit this file, removing files you
    don't want to check in from the tuple it defines.  Don't forget to
    also remove these files from comments.txt, since you won't be
    checking them in.  Then run "/bin/ckin --partial" which will read
    the file and check in only the files provided in the tuple, along
    with changes.txt, which will be checked in unconditionally.  For
    now, you can't do this if you have a pending merge - there are
    some Bazaar issues I need to delve into before allowing that (if
    indeed it's even possible).  Here are some things you might want
    to do between making a partial check-in and pushing:
      run "bzr log -v | less"
    this will show you the files checked in, which should match those
    you *didn't* delete from partial_ckin.py.  Then:
      run "bzr status"
    which should show you that there are still modifications,
    additions, renames, etc., of the files that you *did* remove from
    partial_ckin.py.

    Also added a check in prep to tell you whether you are up to date
    relative to the current parent for your installation.  That is, it
    does roughly what snew does, but doesn't say anything if you are
    up to date, and warns with specific suggestions if you aren't.
    This lengthens the time to prep by a bit, particularly if the
    parent is on some other machine, so you may use "prep --no_check"
    to disable this check.

    Tidied up the operation of this script as a command driver and
    factored code in several places to support the new functionality
    mentioned above.

    Note that this check-in is itself partial, as I have a change to
    the snew script in this installation.

________________________________________________________________________________
Commit at 2009-02-18 16:30:12 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add doc/license directory with 3rd party licenses; update thirdParty.txt
Last revno: 397   Last revision id: kbasye1@jhu.edu-20090218204640-c9lw6ia1rlucvb31
Last revision date: 2009-02-18 15:46:40 -0500

added:
  doc/licenses/
  doc/licenses/LICENSE_PySyck
  doc/licenses/LICENSE_double_py
  doc/licenses/LICENSE_scons
  doc/licenses/LICENSE_syck
  doc/licenses/LICENSE_yapps2
    Added text of licenses for third-party software we're including.
    Note that we currently have python-mode.el checked in and I didn't
    copy that (extremely liberal) license here, since I'm figuring
    we'll remove that from distributions.  We still need a copy of the
    Sox license.
modified:
  doc/thirdParty.txt
    Updated to reflect the removal of PyYAML, and to mention the new
   'license' directory.

________________________________________________________________________________
Commit at 2009-02-18 15:46:40 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: AM adaptation cleanup and doc, some new doc files, misc. other stuff
Last revno: 396   Last revision id: kbasye1@jhu.edu-20090217150020-resjeuhhoq1ay8ep
Last revision date: 2009-02-17 10:00:20 -0500

added:
  doc/one_page.doc
    A one-page flyer on the toolkit that we made for Gary to take to
    the FLARENET launching event in Vienna.
  doc/readmes/bzrGuide.txt
    A guide to using Bazaar at the CoE, including instructions on how
    to set up new projects, and on how to use our add-on tools like
    prep, ckin, and snew.
  templates/changes.txt
    A template for a changes.txt file, useful for people who want to
    set up other projects that use our add-on Bazaar tools.
modified:
  doc/ROI-Assn_Form-COE_Toolkit.doc
    Another iteration of this form, now pretty much complete.
  py/coe/am/__init__.py
    Added a lot of doc-string prose in an attempt to get a clearer
    picture of how the various modules in this package fit together,
    esp. with respect to adaptation.  Early experimentation with ReST
    tables.
  py/coe/am/classifier.py
    Added HmmClassifier, which is unfinished and untested at the
    moment.  Minor cleanup.
  py/coe/am/gaussian.py
    Added begin/add/end interface to GaussianModelBase, DummyModel,
    and SimpleGaussianModel (but *not* to GaussianMixtureModel).  A
    substantial refactoring of EM adaptation of GaussianMixtureModels;
    we now use almost all the same code for both diagonal and full
    covariance cases.  Import Numpy as np and use it that way
    throughout.  Other cleanup, especially around imports.
  py/coe/am/hmm.py
    Added Hmm methods forward_score_sequence() and train() which make
    standalone Hmms a bit more useful.  Resolved a couple of XXX
    comments by doing a bit of Numpy tweaking.
  py/coe/am/hmm_mgr.py
    Changed initialization of HmmMgr to be more flexible; it now takes
    three forms.  Note that passing in an empty tuple is no longer
    supported; you must provide the dimension in the initialization,
    even if you provide nothing else.
  py/coe/am/modelmgr.py
    Minor cleanup in add_models(), this function now checks to make
    sure added models have the correct dimension.
  py/coe/am/testhmm.log-ref
  py/coe/am/testhmm.py
    Added a new test here to test forward_score_sequence().
  py/coe/htkfiles/htkmmf.py
    Provide dimension when building HmmMgr (see above).

________________________________________________________________________________
Commit at 2009-02-17 10:00:19 -0500 by Ken Basye <kbasye1@jhu.edu> from code_pure
Message: Rename two recently added files to get rid of spaces
Last revno: 395   Last revision id: kbasye1@jhu.edu-20090217145436-91l5tll6xubccz6l
Last revision date: 2009-02-17 09:54:36 -0500

renamed:
  doc/ROI-Assn Form - COE Toolkit.doc => doc/ROI-Assn_Form-COE_Toolkit.doc
  doc/Supplemental Software Implementation Form CoE Toolkit.doc => doc/Supplemental_Software_Implementation_Form_CoE_Toolkit.doc
    Renamed these files so their names don't contain spaces, which we
    try to avoid in filenames.


________________________________________________________________________________
Commit at 2009-02-17 09:54:36 -0500 by Ken Basye <kbasye1@jhu.edu> from code_pure
Message: Add Technology Transfer forms in doc directory
Last revno: 394   Last revision id: hsw@jhu.edu-20090204180337-itrvk0rveqi2is0q
Last revision date: 2009-02-04 13:03:37 -0500

added:
  doc/ROI-Assn Form - COE Toolkit.doc
  doc/Supplemental Software Implementation Form CoE Toolkit.doc
    These forms are from the JHU Office of Technology Transfer.  In
    this checkin, they are not in their final form, but have been
    mostly completed.  The "ROI" form is the main form for reporting
    inventions, the "Supplemental" form applies to inventions which
    have a software component.  I originally got these forms from
    Jason Paradis in the TechTransfer office.


________________________________________________________________________________
Commit at 2009-02-04 13:03:37 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Added initial code to support function-like grid jobs.
Last revno: 393   Last revision id: hsw@jhu.edu-20090203195809-zielwjn2nz4f56n3
Last revision date: 2009-02-03 14:58:09 -0500

modified:
  SConscript
added:
  py/coe/grid/
  py/coe/grid/SConscript
  py/coe/grid/__init__.py
  py/coe/grid/griddy.py
  py/coe/grid/gridgo.log-ref
  py/coe/grid/gridgo.py
    Added some of the logic needed to provide function-like initiation of grid
    jobs.  This is a work in progress: currently the only mode that works is the
    fake_grid mode in which the jobs are all run local, and within the Python
    that's running.  But the pickle files interface is working.  And the
    logreftest runs one of the jobs from another Python.

________________________________________________________________________________
Commit at 2009-02-03 14:58:09 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Fix a race condition in sources.
Last revno: 392   Last revision id: hsw@jhu.edu-20090203131616-ekp977qekv4rladi
Last revision date: 2009-02-03 08:16:16 -0500

modified:
  py/coe/dataflow/source.py
    Fix a race condition that could have led to the framesynchronous failures
    we've observerd.

________________________________________________________________________________
Commit at 2009-02-03 08:16:16 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Fixed line terminations.
Last revno: 391   Last revision id: hsw@jhu.edu-20090203032202-m615y4nh11fsmxnf
Last revision date: 2009-02-02 22:22:02 -0500

modified:
  py/coe/util/mathutils.py
    Fixed line terminations from DOS to Unix.

________________________________________________________________________________
Commit at 2009-02-02 22:22:01 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Minor work on the framesynchronous/IteratorSource race condition.
Last revno: 390   Last revision id: hsw@jhu.edu-20090202173859-kd58a1ykvi5f00rt
Last revision date: 2009-02-02 12:38:59 -0500

modified:
  py/coe/containers/objectset.py
    Changed from DOS to Unix line terminations.
  py/coe/dataflow/framesynchronous.py
    Minor tweaks to IteratorSource usage.
  py/coe/dataflow/source.py
    Minor changes to improve thread-saftey at object construction.  Added some
    logging to be triggered in rare cases.  Commentary clean up.

________________________________________________________________________________
Commit at 2009-02-02 12:38:59 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: Added the "final" version of the presentation for today.
Last revno: 389   Last revision id: kbasye1@jhu.edu-20090202144844-asfqvj0ferc34izf
Last revision date: 2009-02-02 09:48:44 -0500

added:
  doc/presentations/CoeToolkit-ScalePlanning-2009-02-02.ppt
    The 'final' presentation, merged, with edits, from
    ScalePlanning2009_2_2KJB.ppt and
    TTO5ResearchLaboratoryForSCALE-2009-02-02-HSW.ppt

________________________________________________________________________________
Commit at 2009-02-02 09:48:44 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add slides and images of Sphinx-based doc; other cleanup
Last revno: 388   Last revision id: kbasye1@jhu.edu-20090201224810-ehhcuf1ffuxcd2kx
Last revision date: 2009-02-01 17:48:10 -0500

added:
  doc/images/sphinx_dither.png
  doc/images/sphinx_top.png
    Screen shots of sphinx-generated doc in browser.
  doc/release.txt
    Notes on what I did in putting up the first release.
modified:
  doc/presentations/ScalePlanning2009_2_2KJB.ppt
    Added a couple slides with screen shots of doc.
  doc/sphinx/doc_build.py
    Fixed a bug in reporting errorful invocation from command line.



________________________________________________________________________________
Commit at 2009-02-01 17:48:10 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Remove many unused directories and a few other files; some SConscript changes; presentation work
Last revno: 387   Last revision id: hsw@jhu.edu-20090201220712-rwgxk6fl3b0dvng1
Last revision date: 2009-02-01 17:07:12 -0500

removed:
  abnf/
  abnf/README
  abnf/Rakefile
  abnf/bin/
  abnf/bin/fsgraph
  abnf/bin/fsngraph
  abnf/examples/
  abnf/examples/example.abnf
  abnf/lib/
  abnf/lib/abnf.rb
  abnf/lib/adjacency_graph.rb
  abnf/lib/adjacency_graph_builder.rb
  abnf/lib/incident_graph.rb
  abnf/lib/incident_graph_builder.rb
  abnf/lib/shunting_parser.rb
  abnf/test/
  abnf/test/tc_adjacency_graph.rb
  abnf/test/tc_incident_graph.rb
  abnf/test/tc_shunting_parser.rb
  abnf/test/ts_all.rb
  py/coe/signalprocessing/spectrum
  py/coe/textdata/textdata.py.00
  py/coe/textdata/textdata.py.01
  py/yaml/
  py/yaml-PyYAML-3.05-py2.5.egg-info
  py/yaml/__init__.py
  py/yaml/composer.py
  py/yaml/constructor.py
  py/yaml/cyaml.py
  py/yaml/dumper.py
  py/yaml/emitter.py
  py/yaml/error.py
  py/yaml/events.py
  py/yaml/loader.py
  py/yaml/nodes.py
  py/yaml/parser.py
  py/yaml/reader.py
  py/yaml/representer.py
  py/yaml/resolver.py
  py/yaml/scanner.py
  py/yaml/serializer.py
  py/yaml/tokens.py
  tmp/
  tmp/to_ken_hugh/
  tmp/to_ken_hugh/Jenbet_Features.txt
  tmp/to_ken_hugh/Jenbet_Features_plus.xls
  tmp/to_ken_hugh/README
  tmp/to_ken_hugh/callhome_english_lexicon_970618/
  tmp/to_ken_hugh/callhome_english_lexicon_970618/PRONUNCIATION
  tmp/to_ken_hugh/callhome_english_lexicon_970618/en_lexic.doc
  tmp/to_ken_hugh/callhome_english_lexicon_970618/en_lexic.v03
  tmp/to_ken_hugh/ch-en.devtest.mlf
  tmp/to_ken_hugh/ch-en.devtest.rec.mlf
  tmp/to_ken_hugh/ch-en.devtest.stm/
  tmp/to_ken_hugh/ch-en.devtest.stm/en_0638-A.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_0638-B.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_4157-A.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_4157-B.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_4315-A.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_4315-B.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_4335-A.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_4335-B.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_4371-A.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_4371-B.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_4521-A.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_4521-B.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_4576-A.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_4576-B.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_4580-A.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_4580-B.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_4666-A.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_4666-B.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_4677-A.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_4677-B.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_4686-A.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_4686-B.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_4808-A.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_4808-B.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_4822-A.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_4822-B.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_5208-A.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_5208-B.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_5573-A.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_5573-B.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_5648-A.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_5648-B.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_5713-A.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_5713-B.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_6079-A.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_6079-B.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_6161-A.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_6161-B.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_6348-A.stm
  tmp/to_ken_hugh/ch-en.devtest.stm/en_6348-B.stm
  tmp/to_ken_hugh/ch-en.devtest.task
  tmp/to_ken_hugh/ch-en.devtest.vit.mlf
  tmp/to_ken_hugh/en_lexic.v04
  trainer/
  trainer/README
  trainer/Rakefile
  trainer/alien/
  trainer/alien/junit4.1.jar
  trainer/src/
  trainer/src/decoder/
  trainer/src/decoder/edu/
  trainer/src/decoder/edu/cmu/
  trainer/src/decoder/edu/cmu/sphinx/
  trainer/src/decoder/edu/cmu/sphinx/decoder/
  trainer/src/decoder/edu/cmu/sphinx/decoder/BatchResults.java
  trainer/src/decoder/edu/cmu/sphinx/decoder/Decoder.java
  trainer/src/decoder/edu/cmu/sphinx/decoder/package.html
  trainer/src/decoder/edu/cmu/sphinx/decoder/pruner/
  trainer/src/decoder/edu/cmu/sphinx/decoder/pruner/NullPruner.java
  trainer/src/decoder/edu/cmu/sphinx/decoder/pruner/Pruner.java
  trainer/src/decoder/edu/cmu/sphinx/decoder/pruner/SimplePruner.java
  trainer/src/decoder/edu/cmu/sphinx/decoder/pruner/package.html
  trainer/src/decoder/edu/cmu/sphinx/decoder/scorer/
  trainer/src/decoder/edu/cmu/sphinx/decoder/scorer/AcousticScorer.java
  trainer/src/decoder/edu/cmu/sphinx/decoder/scorer/Scoreable.java
  trainer/src/decoder/edu/cmu/sphinx/decoder/scorer/SimpleAcousticScorer.java
  trainer/src/decoder/edu/cmu/sphinx/decoder/scorer/ThreadedAcousticScorer.java
  trainer/src/decoder/edu/cmu/sphinx/decoder/scorer/package.html
  trainer/src/decoder/edu/cmu/sphinx/decoder/search/
  trainer/src/decoder/edu/cmu/sphinx/decoder/search/ActiveList.java
  trainer/src/decoder/edu/cmu/sphinx/decoder/search/ActiveListFactory.java
  trainer/src/decoder/edu/cmu/sphinx/decoder/search/ActiveListManager.java
  trainer/src/decoder/edu/cmu/sphinx/decoder/search/AlternateHypothesisManager.java
  trainer/src/decoder/edu/cmu/sphinx/decoder/search/ArrayTokenStack.java
  trainer/src/decoder/edu/cmu/sphinx/decoder/search/PartitionActiveListFactory.java
  trainer/src/decoder/edu/cmu/sphinx/decoder/search/Partitioner.java
  trainer/src/decoder/edu/cmu/sphinx/decoder/search/SearchManager.java
  trainer/src/decoder/edu/cmu/sphinx/decoder/search/SimpleActiveListFactory.java
  trainer/src/decoder/edu/cmu/sphinx/decoder/search/SimpleActiveListManager.java
  trainer/src/decoder/edu/cmu/sphinx/decoder/search/SimpleBreadthFirstSearchManager.java
  trainer/src/decoder/edu/cmu/sphinx/decoder/search/SortingActiveListFactory.java
  trainer/src/decoder/edu/cmu/sphinx/decoder/search/Token.java
  trainer/src/decoder/edu/cmu/sphinx/decoder/search/TokenStack.java
  trainer/src/decoder/edu/cmu/sphinx/decoder/search/WordActiveListFactory.java
  trainer/src/decoder/edu/cmu/sphinx/decoder/search/WordPruningBreadthFirstSearchManager.java
  trainer/src/decoder/edu/cmu/sphinx/decoder/search/package.html
  trainer/src/decoder/edu/cmu/sphinx/frontend/
  trainer/src/decoder/edu/cmu/sphinx/frontend/BaseDataProcessor.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/Data.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/DataBlocker.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/DataEndSignal.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/DataProcessingException.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/DataProcessor.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/DataStartSignal.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/DoubleData.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/FloatData.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/FrontEnd.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/Signal.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/SignalListener.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/doc-files/
  trainer/src/decoder/edu/cmu/sphinx/frontend/doc-files/FrontEndConfiguration.html
  trainer/src/decoder/edu/cmu/sphinx/frontend/doc-files/FrontEndFAQ.html
  trainer/src/decoder/edu/cmu/sphinx/frontend/doc-files/frontend.jpg
  trainer/src/decoder/edu/cmu/sphinx/frontend/endpoint/
  trainer/src/decoder/edu/cmu/sphinx/frontend/endpoint/ExcessiveNonSpeechPruner.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/endpoint/NonSpeechDataFilter.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/endpoint/SpeechClassifiedData.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/endpoint/SpeechClassifier.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/endpoint/SpeechEndSignal.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/endpoint/SpeechMarker.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/endpoint/SpeechMarkerTest.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/endpoint/SpeechStartSignal.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/endpoint/doc-files/
  trainer/src/decoder/edu/cmu/sphinx/frontend/endpoint/doc-files/NonSpeechDataFilter.gif
  trainer/src/decoder/edu/cmu/sphinx/frontend/endpoint/doc-files/NonSpeechDataFilter.sxd
  trainer/src/decoder/edu/cmu/sphinx/frontend/endpoint/doc-files/one-region-filtered.gif
  trainer/src/decoder/edu/cmu/sphinx/frontend/endpoint/doc-files/one-region.gif
  trainer/src/decoder/edu/cmu/sphinx/frontend/endpoint/doc-files/two-regions-merge.gif
  trainer/src/decoder/edu/cmu/sphinx/frontend/endpoint/doc-files/two-regions-nonmerge.gif
  trainer/src/decoder/edu/cmu/sphinx/frontend/endpoint/doc-files/two-regions.gif
  trainer/src/decoder/edu/cmu/sphinx/frontend/endpoint/package.html
  trainer/src/decoder/edu/cmu/sphinx/frontend/endpoint/test/
  trainer/src/decoder/edu/cmu/sphinx/frontend/endpoint/test/NonSpeechDataFilterTest.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/feature/
  trainer/src/decoder/edu/cmu/sphinx/frontend/feature/BatchCMN.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/feature/DeltasFeatureExtractor.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/feature/FrameDropper.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/feature/LiveCMN.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/feature/S3FeatureExtractor.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/feature/doc-files/
  trainer/src/decoder/edu/cmu/sphinx/frontend/feature/doc-files/deltas.jpg
  trainer/src/decoder/edu/cmu/sphinx/frontend/feature/doc-files/deltas.sxd
  trainer/src/decoder/edu/cmu/sphinx/frontend/feature/doc-files/feature.jpg
  trainer/src/decoder/edu/cmu/sphinx/frontend/feature/doc-files/feature.sxd
  trainer/src/decoder/edu/cmu/sphinx/frontend/feature/package.html
  trainer/src/decoder/edu/cmu/sphinx/frontend/filter/
  trainer/src/decoder/edu/cmu/sphinx/frontend/filter/Preemphasizer.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/filter/package.html
  trainer/src/decoder/edu/cmu/sphinx/frontend/frequencywarp/
  trainer/src/decoder/edu/cmu/sphinx/frontend/frequencywarp/FrequencyWarper.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/frequencywarp/LinearPredictor.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/frequencywarp/MelFilter.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/frequencywarp/MelFrequencyFilterBank.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/frequencywarp/PLPCepstrumProducer.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/frequencywarp/PLPFilter.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/frequencywarp/PLPFrequencyFilterBank.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/frequencywarp/doc-files/
  trainer/src/decoder/edu/cmu/sphinx/frontend/frequencywarp/doc-files/melfilter.jpg
  trainer/src/decoder/edu/cmu/sphinx/frontend/frequencywarp/doc-files/melfilter.sxd
  trainer/src/decoder/edu/cmu/sphinx/frontend/frequencywarp/doc-files/melfilterbank.jpg
  trainer/src/decoder/edu/cmu/sphinx/frontend/frequencywarp/doc-files/melfilterbank.sxd
  trainer/src/decoder/edu/cmu/sphinx/frontend/frequencywarp/package.html
  trainer/src/decoder/edu/cmu/sphinx/frontend/package.html
  trainer/src/decoder/edu/cmu/sphinx/frontend/test/
  trainer/src/decoder/edu/cmu/sphinx/frontend/test/AbstractTestProcessor.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/test/DataBlockerTest.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/transform/
  trainer/src/decoder/edu/cmu/sphinx/frontend/transform/DiscreteCosineTransform.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/transform/DiscreteFourierTransform.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/transform/doc-files/
  trainer/src/decoder/edu/cmu/sphinx/frontend/transform/doc-files/139o.jpg
  trainer/src/decoder/edu/cmu/sphinx/frontend/transform/doc-files/139ospectrum.jpg
  trainer/src/decoder/edu/cmu/sphinx/frontend/transform/package.html
  trainer/src/decoder/edu/cmu/sphinx/frontend/util/
  trainer/src/decoder/edu/cmu/sphinx/frontend/util/AudioFileDataSource.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/util/AudioFileProcessListener.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/util/ConcatAudioFileDataSource.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/util/ConcatFileDataSource.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/util/DataDumper.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/util/DataSource.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/util/DataUtil.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/util/EnergyPlotter.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/util/FrontEndUtils.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/util/Microphone.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/util/StreamCepstrumSource.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/util/StreamDataSource.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/util/Utterance.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/util/VUMeter.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/util/VUMeterMonitor.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/util/VUMeterPanel.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/util/WavWriter.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/util/package.html
  trainer/src/decoder/edu/cmu/sphinx/frontend/util/test/
  trainer/src/decoder/edu/cmu/sphinx/frontend/util/test/AudioDataSourcesTest.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/window/
  trainer/src/decoder/edu/cmu/sphinx/frontend/window/RaisedCosineWindower.java
  trainer/src/decoder/edu/cmu/sphinx/frontend/window/doc-files/
  trainer/src/decoder/edu/cmu/sphinx/frontend/window/doc-files/framing.jpg
  trainer/src/decoder/edu/cmu/sphinx/frontend/window/doc-files/framing.sxd
  trainer/src/decoder/edu/cmu/sphinx/frontend/window/doc-files/hamming-window.gif
  trainer/src/decoder/edu/cmu/sphinx/frontend/window/package.html
  trainer/src/decoder/edu/cmu/sphinx/instrumentation/
  trainer/src/decoder/edu/cmu/sphinx/instrumentation/AccuracyTracker.java
  trainer/src/decoder/edu/cmu/sphinx/instrumentation/BeamFinder.java
  trainer/src/decoder/edu/cmu/sphinx/instrumentation/BestConfidenceAccuracyTracker.java
  trainer/src/decoder/edu/cmu/sphinx/instrumentation/BestPathAccuracyTracker.java
  trainer/src/decoder/edu/cmu/sphinx/instrumentation/ConfigMonitor.java
  trainer/src/decoder/edu/cmu/sphinx/instrumentation/MemoryTracker.java
  trainer/src/decoder/edu/cmu/sphinx/instrumentation/Monitor.java
  trainer/src/decoder/edu/cmu/sphinx/instrumentation/RecognizerMonitor.java
  trainer/src/decoder/edu/cmu/sphinx/instrumentation/RejectionTracker.java
  trainer/src/decoder/edu/cmu/sphinx/instrumentation/Resetable.java
  trainer/src/decoder/edu/cmu/sphinx/instrumentation/SpeedTracker.java
  trainer/src/decoder/edu/cmu/sphinx/instrumentation/doc-files/
  trainer/src/decoder/edu/cmu/sphinx/instrumentation/doc-files/Instrumentation.html
  trainer/src/decoder/edu/cmu/sphinx/instrumentation/doc-files/gdl_config.jpg
  trainer/src/decoder/edu/cmu/sphinx/instrumentation/doc-files/lingustDump.jpg
  trainer/src/decoder/edu/cmu/sphinx/instrumentation/doc-files/silent.config.xml
  trainer/src/decoder/edu/cmu/sphinx/instrumentation/package.html
  trainer/src/decoder/edu/cmu/sphinx/linguist/
  trainer/src/decoder/edu/cmu/sphinx/linguist/HMMSearchState.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/Linguist.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/LinguistProcessor.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/SearchGraph.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/SearchState.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/SearchStateArc.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/UnitSearchState.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/WordSearchState.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/WordSequence.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/AcousticModel.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/Context.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/HMM.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/HMMPosition.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/HMMState.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/HMMStateArc.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/LeftRightContext.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/Unit.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/UnitManager.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/package.html
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/tiedstate/
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/tiedstate/CompositeSenone.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/tiedstate/GaussianMixture.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/tiedstate/HMMManager.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/tiedstate/Loader.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/tiedstate/MixtureComponent.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/tiedstate/Pool.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/tiedstate/PropertiesDumper.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/tiedstate/Saver.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/tiedstate/Senone.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/tiedstate/SenoneHMM.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/tiedstate/SenoneHMMState.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/tiedstate/SenoneSequence.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/tiedstate/Sphinx3Loader.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/tiedstate/TiedStateAcousticModel.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/tiedstate/package.html
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/tiedstate/test/
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/tiedstate/test/MixtureComponentTest.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/tiedstate/trainer/
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/tiedstate/trainer/TrainerAcousticModel.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/tiedstate/trainer/TrainerScore.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/trivial/
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/trivial/TrivialAcousticModel.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/acoustic/trivial/package.html
  trainer/src/decoder/edu/cmu/sphinx/linguist/dflat/
  trainer/src/decoder/edu/cmu/sphinx/linguist/dflat/DynamicFlatLinguist.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/dflat/OutOfGrammarGraph.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/dictionary/
  trainer/src/decoder/edu/cmu/sphinx/linguist/dictionary/Dictionary.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/dictionary/FastDictionary.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/dictionary/FullDictionary.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/dictionary/Pronunciation.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/dictionary/Word.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/dictionary/WordClassification.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/dictionary/package.html
  trainer/src/decoder/edu/cmu/sphinx/linguist/flat/
  trainer/src/decoder/edu/cmu/sphinx/linguist/flat/AlternativeState.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/flat/BranchState.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/flat/CIPhoneLoop.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/flat/Color.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/flat/ContextBucket.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/flat/ExtendedUnitState.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/flat/FlatLinguist.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/flat/GrammarPoint.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/flat/GrammarState.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/flat/HMMStateState.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/flat/NonEmittingHMMState.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/flat/PronunciationState.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/flat/SentenceHMMState.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/flat/SentenceHMMStateArc.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/flat/SentenceHMMStateVisitor.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/flat/StatePath.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/flat/UnitState.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/flat/WordState.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/flat/package.html
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/grammar/
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/grammar/BatchForcedAlignerGrammar.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/grammar/FSTGrammar.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/grammar/ForcedAlignerGrammar.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/grammar/Grammar.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/grammar/GrammarArc.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/grammar/GrammarInterface.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/grammar/GrammarNode.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/grammar/LMGrammar.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/grammar/SimpleWordListGrammar.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/grammar/doc-files/
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/grammar/doc-files/fst-end-node.jpg
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/grammar/package.html
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/ngram/
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/ngram/LanguageModel.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/ngram/SimpleNGramModel.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/ngram/alphabet.arpaformat
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/ngram/large/
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/ngram/large/BigramBuffer.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/ngram/large/BigramProbability.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/ngram/large/BinaryLoader.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/ngram/large/LargeTrigramModel.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/ngram/large/NGramBuffer.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/ngram/large/TrigramBuffer.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/ngram/large/TrigramProbability.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/ngram/large/UnigramProbability.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/ngram/large/package.html
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/ngram/package.html
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/package.html
  trainer/src/decoder/edu/cmu/sphinx/linguist/language/test.props
  trainer/src/decoder/edu/cmu/sphinx/linguist/lextree/
  trainer/src/decoder/edu/cmu/sphinx/linguist/lextree/HMMTree.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/lextree/LexTreeLinguist.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/lextree/package.html
  trainer/src/decoder/edu/cmu/sphinx/linguist/package.html
  trainer/src/decoder/edu/cmu/sphinx/linguist/util/
  trainer/src/decoder/edu/cmu/sphinx/linguist/util/GDLDumper.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/util/HMMPool.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/util/LinguistDumper.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/util/LinguistStats.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/util/LinguistTimer.java
  trainer/src/decoder/edu/cmu/sphinx/linguist/util/package.html
  trainer/src/decoder/edu/cmu/sphinx/model/
  trainer/src/decoder/edu/cmu/sphinx/model/acoustic/
  trainer/src/decoder/edu/cmu/sphinx/model/acoustic/sphinx3/
  trainer/src/decoder/edu/cmu/sphinx/model/acoustic/sphinx3/Model.java
  trainer/src/decoder/edu/cmu/sphinx/model/acoustic/sphinx3/ModelLoader.java
  trainer/src/decoder/edu/cmu/sphinx/model/acoustic/sphinx3/PropertiesDumper.java
  trainer/src/decoder/edu/cmu/sphinx/recognizer/
  trainer/src/decoder/edu/cmu/sphinx/recognizer/Recognizer.java
  trainer/src/decoder/edu/cmu/sphinx/recognizer/RecognizerState.java
  trainer/src/decoder/edu/cmu/sphinx/recognizer/StateListener.java
  trainer/src/decoder/edu/cmu/sphinx/recognizer/package.html
  trainer/src/decoder/edu/cmu/sphinx/result/
  trainer/src/decoder/edu/cmu/sphinx/result/AbstractSausageMaker.java
  trainer/src/decoder/edu/cmu/sphinx/result/ConfidenceResult.java
  trainer/src/decoder/edu/cmu/sphinx/result/ConfidenceScorer.java
  trainer/src/decoder/edu/cmu/sphinx/result/ConfusionSet.java
  trainer/src/decoder/edu/cmu/sphinx/result/Edge.java
  trainer/src/decoder/edu/cmu/sphinx/result/FrameStatistics.java
  trainer/src/decoder/edu/cmu/sphinx/result/GDLLatticeFactory.java
  trainer/src/decoder/edu/cmu/sphinx/result/Lattice.java
  trainer/src/decoder/edu/cmu/sphinx/result/LatticeOptimizer.java
  trainer/src/decoder/edu/cmu/sphinx/result/MAPConfidenceScorer.java
  trainer/src/decoder/edu/cmu/sphinx/result/Node.java
  trainer/src/decoder/edu/cmu/sphinx/result/Path.java
  trainer/src/decoder/edu/cmu/sphinx/result/PivotSausageMaker.java
  trainer/src/decoder/edu/cmu/sphinx/result/Result.java
  trainer/src/decoder/edu/cmu/sphinx/result/ResultListener.java
  trainer/src/decoder/edu/cmu/sphinx/result/Sausage.java
  trainer/src/decoder/edu/cmu/sphinx/result/SausageMaker.java
  trainer/src/decoder/edu/cmu/sphinx/result/SimpleWordResult.java
  trainer/src/decoder/edu/cmu/sphinx/result/TokenGraphDumper.java
  trainer/src/decoder/edu/cmu/sphinx/result/WordResult.java
  trainer/src/decoder/edu/cmu/sphinx/result/WordResultPath.java
  trainer/src/decoder/edu/cmu/sphinx/result/package.html
  trainer/src/decoder/edu/cmu/sphinx/sphinx4.manifest
  trainer/src/decoder/edu/cmu/sphinx/tools/
  trainer/src/decoder/edu/cmu/sphinx/tools/audio/
  trainer/src/decoder/edu/cmu/sphinx/tools/audio/AudioData.java
  trainer/src/decoder/edu/cmu/sphinx/tools/audio/AudioDataInputStream.java
  trainer/src/decoder/edu/cmu/sphinx/tools/audio/AudioPanel.java
  trainer/src/decoder/edu/cmu/sphinx/tools/audio/AudioPlayer.java
  trainer/src/decoder/edu/cmu/sphinx/tools/audio/AudioTool.java
  trainer/src/decoder/edu/cmu/sphinx/tools/audio/Downsampler.java
  trainer/src/decoder/edu/cmu/sphinx/tools/audio/FilenameDialog.java
  trainer/src/decoder/edu/cmu/sphinx/tools/audio/Manifest
  trainer/src/decoder/edu/cmu/sphinx/tools/audio/RawReader.java
  trainer/src/decoder/edu/cmu/sphinx/tools/audio/RawRecorder.java
  trainer/src/decoder/edu/cmu/sphinx/tools/audio/RawWriter.java
  trainer/src/decoder/edu/cmu/sphinx/tools/audio/Sinusoid.java
  trainer/src/decoder/edu/cmu/sphinx/tools/audio/SpectrogramPanel.java
  trainer/src/decoder/edu/cmu/sphinx/tools/audio/Utils.java
  trainer/src/decoder/edu/cmu/sphinx/tools/audio/doc-files/
  trainer/src/decoder/edu/cmu/sphinx/tools/audio/doc-files/HowToRunAudioTool.html
  trainer/src/decoder/edu/cmu/sphinx/tools/audio/doc-files/audiotool.gif
  trainer/src/decoder/edu/cmu/sphinx/tools/audio/package.html
  trainer/src/decoder/edu/cmu/sphinx/tools/audio/spectrogram.config.xml
  trainer/src/decoder/edu/cmu/sphinx/tools/batch/
  trainer/src/decoder/edu/cmu/sphinx/tools/batch/BatchForcedAlignerRecognizer.java
  trainer/src/decoder/edu/cmu/sphinx/tools/batch/BatchModeRecognizer.java
  trainer/src/decoder/edu/cmu/sphinx/tools/batch/BatchNISTRecognizer.java
  trainer/src/decoder/edu/cmu/sphinx/tools/batch/package.html
  trainer/src/decoder/edu/cmu/sphinx/tools/corpus/
  trainer/src/decoder/edu/cmu/sphinx/tools/corpusEditor/
  trainer/src/decoder/edu/cmu/sphinx/tools/feature/
  trainer/src/decoder/edu/cmu/sphinx/tools/feature/FeatureFileDumper.java
  trainer/src/decoder/edu/cmu/sphinx/tools/feature/build.xml
  trainer/src/decoder/edu/cmu/sphinx/tools/feature/frontend.config.xml
  trainer/src/decoder/edu/cmu/sphinx/tools/feature/logger.props
  trainer/src/decoder/edu/cmu/sphinx/tools/feature/package.html
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/ConfigProperties.java
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/GUIFileActionListener.java
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/GUIMainDriver.java
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/GUIMediator.java
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/GUIOperationException.java
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/MainJFrame.form
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/MainJFrame.java
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/PanelConfigurable.form
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/PanelConfigurable.java
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/PanelGlobal.form
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/PanelGlobal.java
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/README.txt
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/RawPropertyData.java
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/build.xml
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/reader/
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/reader/GUIReader.java
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/reader/GUIReaderException.java
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/reader/SaxLoader.java
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/reader/XMLConfigReader.java
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/util/
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/util.conf
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/util/ClassFinder.java
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/util/ClassTraverseTester.java
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/util/ConfigurableComponent.java
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/util/ConfigurableProperty.java
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/util/ConfigurableUtilException.java
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/util/DocletHelper.java
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/util/JavadocExtractor.java
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/util/ModelBuilder.java
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/util/Registry.java
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/util/SysCommandExecutor.java
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/writer/
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/writer/ConfigConverter.java
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/writer/GUIWriter.java
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/writer/GUIWriterException.java
  trainer/src/decoder/edu/cmu/sphinx/tools/gui/writer/XMLConfigWriter.java
  trainer/src/decoder/edu/cmu/sphinx/tools/live/
  trainer/src/decoder/edu/cmu/sphinx/tools/live/LiveModeRecognizer.java
  trainer/src/decoder/edu/cmu/sphinx/tools/live/package.html
  trainer/src/decoder/edu/cmu/sphinx/util/
  trainer/src/decoder/edu/cmu/sphinx/util/BatchFile.java
  trainer/src/decoder/edu/cmu/sphinx/util/BatchItem.java
  trainer/src/decoder/edu/cmu/sphinx/util/BatchManager.java
  trainer/src/decoder/edu/cmu/sphinx/util/CommandInterface.java
  trainer/src/decoder/edu/cmu/sphinx/util/CommandInterpreter.java
  trainer/src/decoder/edu/cmu/sphinx/util/Complex.java
  trainer/src/decoder/edu/cmu/sphinx/util/ExtendedStreamTokenizer.java
  trainer/src/decoder/edu/cmu/sphinx/util/FileReferenceSource.java
  trainer/src/decoder/edu/cmu/sphinx/util/GapInsertionDetector.java
  trainer/src/decoder/edu/cmu/sphinx/util/IDGenerator.java
  trainer/src/decoder/edu/cmu/sphinx/util/LogMath.java
  trainer/src/decoder/edu/cmu/sphinx/util/MatrixUtils.java
  trainer/src/decoder/edu/cmu/sphinx/util/NISTAlign.java
  trainer/src/decoder/edu/cmu/sphinx/util/PooledBatchManager.java
  trainer/src/decoder/edu/cmu/sphinx/util/ReferenceSource.java
  trainer/src/decoder/edu/cmu/sphinx/util/ResultAnalyzer.java
  trainer/src/decoder/edu/cmu/sphinx/util/SimpleBatchManager.java
  trainer/src/decoder/edu/cmu/sphinx/util/SocketCommandClient.java
  trainer/src/decoder/edu/cmu/sphinx/util/SocketCommandInterpreter.java
  trainer/src/decoder/edu/cmu/sphinx/util/SphinxHelp.java
  trainer/src/decoder/edu/cmu/sphinx/util/SphinxLogFormatter.java
  trainer/src/decoder/edu/cmu/sphinx/util/SphinxProperties.java
  trainer/src/decoder/edu/cmu/sphinx/util/StatisticsVariable.java
  trainer/src/decoder/edu/cmu/sphinx/util/StreamFactory.java
  trainer/src/decoder/edu/cmu/sphinx/util/Timer.java
  trainer/src/decoder/edu/cmu/sphinx/util/Utilities.java
  trainer/src/decoder/edu/cmu/sphinx/util/package.html
  trainer/src/decoder/edu/cmu/sphinx/util/props/
  trainer/src/decoder/edu/cmu/sphinx/util/props/ConfCategory.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/Configurable.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/ConfigurableAdapter.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/ConfigurationChangeListener.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/ConfigurationManager.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/ConfigurationManagerUtils.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/InternalConfigurationException.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/PropertyException.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/PropertySheet.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/RawPropertyData.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/S4Boolean.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/S4Component.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/S4ComponentList.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/S4Double.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/S4Integer.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/S4PropWrapper.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/S4Property.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/S4String.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/SaxLoader.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/doc-files/
  trainer/src/decoder/edu/cmu/sphinx/util/props/doc-files/ConfigurationManagement.html
  trainer/src/decoder/edu/cmu/sphinx/util/props/package.html
  trainer/src/decoder/edu/cmu/sphinx/util/props/test/
  trainer/src/decoder/edu/cmu/sphinx/util/props/test/AnotherDummyFrontEnd.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/test/AnotherDummyProcessor.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/test/ComponentPropertyTest.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/test/ConfigurationManagerTest.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/test/DummyComp.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/test/DummyFrontEnd.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/test/DummyFrontEndProcessor.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/test/DummyProcessor.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/test/TestConfigurable.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/tools/
  trainer/src/decoder/edu/cmu/sphinx/util/props/tools/GDLDumper.java
  trainer/src/decoder/edu/cmu/sphinx/util/props/tools/HTMLDumper.java
  trainer/src/decoder/overview.html
  trainer/src/trainer/
  trainer/src/trainer/edu/
  trainer/src/trainer/edu/cmu/
  trainer/src/trainer/edu/cmu/sphinx/
  trainer/src/trainer/edu/cmu/sphinx/trainer/
  trainer/src/trainer/edu/cmu/sphinx/trainer/BaumWelchLearner.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/BuildTranscriptHMM.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/ControlFile.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/Edge.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/FlatInitializerLearner.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/Graph.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/Graphb.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/Learner.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/Node.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/NodeType.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/SimpleControlFile.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/SimpleTrainManager.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/SimpleTranscript.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/SimpleUtterance.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/Stage.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/StateListener.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/TrainManager.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/Trainer.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/TrainerDemo.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/TrainerDictionary.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/TrainerLink.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/TrainerState.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/TrainerToken.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/Transcript.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/TranscriptGraph.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/TranscriptHMMGraph.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/Utterance.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/UtteranceGraph.java
  trainer/src/trainer/edu/cmu/sphinx/trainer/UtteranceHMMGraph.java
  trainer/target/
  trainer/target/classes/
  trainer/target/classes/edu/
  trainer/target/classes/edu/cmu/
  trainer/target/classes/edu/cmu/sphinx/
  trainer/target/classes/edu/cmu/sphinx/decoder/
  trainer/target/classes/edu/cmu/sphinx/decoder/pruner/
  trainer/target/classes/edu/cmu/sphinx/decoder/scorer/
  trainer/target/classes/edu/cmu/sphinx/decoder/search/
  trainer/target/classes/edu/cmu/sphinx/frontend/
  trainer/target/classes/edu/cmu/sphinx/frontend/endpoint/
  trainer/target/classes/edu/cmu/sphinx/frontend/endpoint/test/
  trainer/target/classes/edu/cmu/sphinx/frontend/feature/
  trainer/target/classes/edu/cmu/sphinx/frontend/filter/
  trainer/target/classes/edu/cmu/sphinx/frontend/frequencywarp/
  trainer/target/classes/edu/cmu/sphinx/frontend/test/
  trainer/target/classes/edu/cmu/sphinx/frontend/transform/
  trainer/target/classes/edu/cmu/sphinx/frontend/util/
  trainer/target/classes/edu/cmu/sphinx/frontend/util/test/
  trainer/target/classes/edu/cmu/sphinx/frontend/window/
  trainer/target/classes/edu/cmu/sphinx/instrumentation/
  trainer/target/classes/edu/cmu/sphinx/linguist/
  trainer/target/classes/edu/cmu/sphinx/linguist/acoustic/
  trainer/target/classes/edu/cmu/sphinx/linguist/acoustic/tiedstate/
  trainer/target/classes/edu/cmu/sphinx/linguist/acoustic/tiedstate/test/
  trainer/target/classes/edu/cmu/sphinx/linguist/acoustic/tiedstate/trainer/
  trainer/target/classes/edu/cmu/sphinx/linguist/acoustic/trivial/
  trainer/target/classes/edu/cmu/sphinx/linguist/dflat/
  trainer/target/classes/edu/cmu/sphinx/linguist/dictionary/
  trainer/target/classes/edu/cmu/sphinx/linguist/flat/
  trainer/target/classes/edu/cmu/sphinx/linguist/language/
  trainer/target/classes/edu/cmu/sphinx/linguist/language/grammar/
  trainer/target/classes/edu/cmu/sphinx/linguist/language/ngram/
  trainer/target/classes/edu/cmu/sphinx/linguist/language/ngram/large/
  trainer/target/classes/edu/cmu/sphinx/linguist/lextree/
  trainer/target/classes/edu/cmu/sphinx/linguist/util/
  trainer/target/classes/edu/cmu/sphinx/model/
  trainer/target/classes/edu/cmu/sphinx/model/acoustic/
  trainer/target/classes/edu/cmu/sphinx/model/acoustic/sphinx3/
  trainer/target/classes/edu/cmu/sphinx/recognizer/
  trainer/target/classes/edu/cmu/sphinx/result/
  trainer/target/classes/edu/cmu/sphinx/tools/
  trainer/target/classes/edu/cmu/sphinx/tools/audio/
  trainer/target/classes/edu/cmu/sphinx/tools/batch/
  trainer/target/classes/edu/cmu/sphinx/tools/feature/
  trainer/target/classes/edu/cmu/sphinx/tools/gui/
  trainer/target/classes/edu/cmu/sphinx/tools/gui/reader/
  trainer/target/classes/edu/cmu/sphinx/tools/gui/util/
  trainer/target/classes/edu/cmu/sphinx/tools/gui/writer/
  trainer/target/classes/edu/cmu/sphinx/tools/live/
  trainer/target/classes/edu/cmu/sphinx/trainer/
  trainer/target/classes/edu/cmu/sphinx/util/
  trainer/target/classes/edu/cmu/sphinx/util/props/
  trainer/target/classes/edu/cmu/sphinx/util/props/test/
  trainer/target/classes/edu/cmu/sphinx/util/props/tools/
  trainer/target/s4decoder.jar
  trainer/target/s4trainer.jar
  yggdrasil/
  yggdrasil/README
  yggdrasil/Rakefile
  yggdrasil/bin/
  yggdrasil/bin/ygraph
  yggdrasil/bin/yscore
  yggdrasil/bin/ytrain
  yggdrasil/lib/
  yggdrasil/lib/binary.rb
  yggdrasil/lib/purity.rb
  yggdrasil/lib/tree_maker.rb
  yggdrasil/lib/y_graph.rb
  yggdrasil/lib/y_score.rb
  yggdrasil/lib/y_train.rb
  yggdrasil/test/
  yggdrasil/test/test_command_line.rb
  yggdrasil/test/test_view.rb
  yggdrasil/test/test_view.yaml
  yggdrasil/test/test_yggdrasil.rb
    Removed top-level directories 'abnf', 'tmp', 'trainer', and
    'yggdrasil'.  Removed two backup copies of textdata.py which were
    named textdata.py.{00,01} - these were only marginally different
    from textdata.py, and we're not really using that much either.
    Removed the file 'spectrum' in 'signalprocessing' it contained two
    Python class definitions without implementations.  Finally,
    removed the 'py/yaml' directory and the associated 'egg-info' file
    that went with it.  This was a Python implementation of a YAML
    parser/reader that was just too slow for our purposes; it's been
    replaced by a combination of syck for reading and our own Python
    code for writing.
modified:
  doc/presentations/ScalePlanning2009_2_2KJB.ppt
  projects/htk_test/labeledData.dot
    Some further work on this presentation and a new version of the
    dotfile it uses for one image.
  py/coe/signalprocessing/SConscript
    Added 'vocalsource.py' to this file so it's now tested.
  py/coe/textdata/yamldata.py
    Removed a few last vestiges of using the Python-based YAML
    package, but these were only in comments at this point.
  py/coe/util/SConscript
    Changed names of modules given to PyFile to all have the '.py'
    extension, since this is how they appear in all other SConscript
    files.

    At this point I believe all the Python files under 'py/coe' are
    mentioned in some Sconscript (although a few with NoTest = True),
    with the exception of 'toychannel.py' in 'signalprocessing'.



________________________________________________________________________________
Commit at 2009-02-01 17:07:11 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: Added code for making DOT files used in presentations.
Last revno: 386   Last revision id: hsw@jhu.edu-20090201134529-3dchgmj2dffq7152
Last revision date: 2009-02-01 08:45:29 -0500

added:
  doc/images/demo-2009-02-02.py
    Code for creating DOT files for graphics used in presentations.

________________________________________________________________________________
Commit at 2009-02-01 08:45:28 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: More work on presentation.
Last revno: 385   Last revision id: hsw@jhu.edu-20090201002817-lagzzr0000g8a7wd
Last revision date: 2009-01-31 19:28:17 -0500

modified:
  doc/presentations/TTO5ResearchLaboratoryForSCALE-2009-02-02-HSW.ppt
    Work on code examples.  Also an overview slide.

________________________________________________________________________________
Commit at 2009-01-31 19:28:16 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: Work on presentation.
Last revno: 384   Last revision id: hsw@jhu.edu-20090130211201-nsl1d49bp0epvln8
Last revision date: 2009-01-30 16:12:01 -0500

modified:
  doc/presentations/TTO5ResearchLaboratoryForSCALE-2009-02-02-HSW.ppt
    Added slides with dataflow networks, and a syntax legend.
    Started on code examples.

________________________________________________________________________________
Commit at 2009-01-30 16:12:01 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: Work on presentation.
Last revno: 383   Last revision id: kbasye1@jhu.edu-20090130210511-ffxzgtjsjfoztacm
Last revision date: 2009-01-30 16:05:11 -0500

added:
  doc/presentations/TTO5ResearchLaboratoryForSCALE-2009-02-02-HSW.ppt
    First pass at slides for the presentation.
modified:
  doc/planning-2009-02-03.txt
    Minor tweaks

________________________________________________________________________________
Commit at 2009-01-30 16:05:10 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Early draft of 2-Feb-2009 presentation
Last revno: 382   Last revision id: hsw@jhu.edu-20090130175701-6vpgcds6rrx4dhhg
Last revision date: 2009-01-30 12:57:01 -0500

added:
  doc/presentations/ScalePlanning2009_2_2KJB.ppt
    An early draft of a PPT presentation on the toolkit for the SCALE
    planning meeting on 2-Feb-2009.
modified:
  projects/htk_test/labeledData.dot
    Modified to reflect use of sources and joins - beginning of a
    graphical syntax for dataflow images.



________________________________________________________________________________
Commit at 2009-01-30 12:57:01 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: Planning work.
Last revno: 381   Last revision id: hsw@jhu.edu-20090130171749-hyckb5qefh9hjl5k
Last revision date: 2009-01-30 12:17:49 -0500

modified:
  doc/planning-2009-02-03.txt
    More changes based on discussion.

________________________________________________________________________________
Commit at 2009-01-30 12:17:48 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: Added planning notes about the Febrary 2009 SCALE planning meetings.
Last revno: 380   Last revision id: kbasye1@jhu.edu-20090129202018-t227ursmnlv23yrq
Last revision date: 2009-01-29 15:20:18 -0500

added:
  doc/planning-2009-02-03.txt
    Notes about the Febrary SCALE planning meetings.

________________________________________________________________________________
Commit at 2009-01-29 15:20:18 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Merge in Hugh's last checkin
Last revno: 379   Last revision id: kbasye1@jhu.edu-20090129201422-fp63flq4x48iwucg
Last revision date: 2009-01-29 15:14:22 -0500

pending merges:
  Hugh Secker-Walker 2009-01-28 Clean up LM code.  Add comments to PyTools.
renamed:
  projects/lm/Probs.py => projects/lm/probs.py
modified:
  changes.txt
  projects/lm/SConscript
  projects/lm/fileprob.py
  site_scons/site_tools/PyTools.py
  projects/lm/probs.py
    Merge in Hugh's changes.

________________________________________________________________________________
Commit at 2009-01-29 15:14:22 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Docstring cleanup to pacify Sphinx
Last revno: 378   Last revision id: kbasye1@jhu.edu-20090128221321-qcmyyzffsiegfq5a
Last revision date: 2009-01-28 17:13:21 -0500

modified:
  py/coe/am/gaussian.py
  py/coe/am/hmm.py
  py/coe/am/hmm_mgr.py
  py/coe/am/modelmgr.py
  py/coe/audio/audiobase.py
  py/coe/audio/audiofile.py
  py/coe/builtin.py
  py/coe/coe_py_compile.py
  py/coe/containers/__init__.py
  py/coe/containers/serializable.py
  py/coe/dataflow/__init__.py
  py/coe/dataflow/cfg.py
  py/coe/graph/graphtools.py
  py/coe/signalprocessing/window.py
  py/coe/textdata/textdata.py
  py/coe/textdata/yamldata.py
  py/coe/util/__init__.py
  py/coe/util/alignment.py
  py/coe/util/debugprint.py
    One round of cleanup of dcostring content to pacify Sphinx.
    Mostly this was adding newlines between prose commentary and
    doctest blocks.  There are eight Sphinx warnings remaining, six of
    them coming from classes or types embedded in other classes, and
    two somewhat cryptic ones that may be related to the other six.
    There's still a lot of cleanup to do, but this is a start.

    Along the way I came across a trickly little wart we should be
    aware of; the contextlib.contextmanager decorator blocks execution
    of doctests in functions it decorates.  This seems to be an
    instance of a more general phenomenon, so we should be careful
    about either writing and using decorators that don't do this, or
    moving tests to places where they'll actually get run.

________________________________________________________________________________
Commit at 2009-01-28 21:13:54 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Clean up LM code.  Add comments to PyTools.
Last revno: 378   Last revision id: kbasye1@jhu.edu-20090128221321-qcmyyzffsiegfq5a
Last revision date: 2009-01-28 17:13:21 -0500

modified:
  projects/lm/SConscript
  projects/lm/fileprob.py
  projects/lm/probs.py
    Cleaned up the LM code to adhere better to our coding conventions: added
    copyright boilerplate, use 'with' syntax for files, raise errors instead of
    calling sys.exit(), log everything using print instead of sending some stuff
    to stderr, regularize string formatting, use __future__ division, eliminate
    unnecessary parens, etc.
renamed:
  projects/lm/Probs.py => projects/lm/probs.py
    Convention is for lower-case module names.

modified:
  site_scons/site_tools/PyTools.py
    Added a lot of commentary about some of the greyer areas of what we're
    doing.

________________________________________________________________________________
Commit at 2009-01-28 17:13:21 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Initial doc generation framework using Sphinx
Last revno: 377   Last revision id: hsw@jhu.edu-20090128212840-kdxz7hbsprhdhrch
Last revision date: 2009-01-28 16:28:40 -0500

added:
  doc/sphinx/
  doc/sphinx/conf.py
  doc/sphinx/core.rst
  doc/sphinx/doc_build.py
  doc/sphinx/extensions/
  doc/sphinx/extensions/auto_section.py
  doc/sphinx/index.rst
  doc/sphinx/intro.rst
  doc/sphinx/projects.rst
  doc/sphinx/sandbox.rst
    Initial work on documentation generation with Sphinx.  The root of
    the documentation tree is the index.rst file; that file refers to
    the other rst files I'm checking in.  Note that core.rst refers to
    a collection of rst files that are not checked in, one for each
    package in the py/coe directory.  These rst files are generated by
    the script doc_build.py, using the '--makehtml' option.  One next
    step is to get Scons to do this as part of the build.  Currently
    the entire process takes about 15 seconds, so we can certainly
    afford to do this as part of the build, even if we have to do
    everything.  The file conf.py is Sphinx' configuration file; there
    are many interesting options here, most of which we are not
    using.  We are, though, using a Sphinx extension, found in
    auto_section.py in the extensions subdir.  This does some
    massaging of doc strings for modules to get section titles for
    each module in a package.
modified:
  py/coe/dataflow/framesynchronous.py
    Modified the module docstring to remove a couple lines that Sphinx
    interpreted as section titles; Sphinx doesn't seem to tolerate
    multiple section titles in doc strings.

________________________________________________________________________________
Commit at 2009-01-28 16:28:40 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Changes to make framesynchronous.py doctest be more deterministic vis-a-vis stdout.
Last revno: 376   Last revision id: hsw@jhu.edu-20090128202505-wbwp06nz5og7p9ns
Last revision date: 2009-01-28 15:25:05 -0500

modified:
  py/coe/dataflow/framesynchronous.py
    Fix an apparent case of contention over the stdout buffer between the
    DebugPrint framework and Python's print statement.  It is hoped that this
    will fix the rare but persistent failures of the framesynchronous doctest.
    Also updated some comments regarding why a ChainProcessor doesn't work.

________________________________________________________________________________
Commit at 2009-01-28 15:25:04 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Have SCons do some early checking that will point to PYTHONPATH problems.
Last revno: 375   Last revision id: kbasye1@jhu.edu-20090128151851-glcy3s1hg1ljkhct
Last revision date: 2009-01-28 10:18:51 -0500

modified:
  site_scons/site_init.py
    Changes to make SCons do some checking that will point users to problems
    with their PYTHONPATH.  The one-time headache involved in making this work
    under the three scenarios in which this module gets executed will be more
    than made up by its pain-relief for developers and users.
  site_scons/site_tools/HLTCOE.py
    Removed a print that doesn't need to happen since SCons reports which
    variant it's building.

________________________________________________________________________________
Commit at 2009-01-28 10:18:51 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Rename ROCutils.py; docstring cleanup; permission changes
Last revno: 374   Last revision id: hugh@vmubuntu-20090126110725-xxxlv7jxdm31qvl5
Last revision date: 2009-01-26 06:07:25 -0500

renamed:
  py/coe/util/ROCutils.py => py/coe/util/rocutils.py
    Renamed to avoid caps in filenames; this makes sure __init__.py is
    always the first listed file in a directory.
modified:
  py/coe/am/hmm.py
  py/coe/am/hmm_mgr.py
    Early cleanup of doc strings motivated by explorations with Sphinx
    - still lots to do.
  py/coe/graph/graphtools.py*
  py/coe/signalprocessing/vocalsource.py*
    I noticed that the permissions on these files included exec bits,
    so I changed them with chmod.  I've seen this before, but I don't
    know what causes it.  Doing the chmod and then checking in seems
    to fix things, though.


________________________________________________________________________________
Commit at 2009-01-26 06:07:25 -0500 by Hugh Secker-Walker <hugh@VmUbuntu> from code
Message: Change where .sconsign.dblite is saved, allows sumultaneous builds.
Last revno: 373   Last revision id: hugh@vmubuntu-20090125191210-a4si9l1rydbliun9
Last revision date: 2009-01-25 14:12:10 -0500

modified:
  site_scons/site_tools/HLTCOE.py
    Changed the tool so that the SConsignFile, '.sconsign.dblit', gets
    written to the top of the architecture-specific build directory.
    This allows multiple builds to be run at the same time as long as
    either their BUILD_TOPs or their architectures differ.

________________________________________________________________________________
Commit at 2009-01-25 14:12:09 -0500 by Hugh Secker-Walker <hugh@VmUbuntu> from code
Message: Allow building under an alternate build directory via a new BUILD_TOP=subdir option to SCons.
Last revno: 372   Last revision id: hsecker@hltcoe95-779-30601-20090126224151-lfy3woch1u4kufsv
Last revision date: 2009-01-26 17:41:51 -0500

modified:
  SConstruct
  site_scons/site_tools/HLTCOE.py
    Changes to allow a particular top-level subdirectory for the
    build.  The default remains 'build'.  To build somewhere else:
      $ bin/scons BUILD_TOP=build2
    The path must be relative to the top of an installation, it can
    have subdirs, e.g.:
      $ bin/scons BUILD_TOP=build2/trial1
    Regardless of the value of BUILD_TOP, the build takes place in a
    platform-specific subdirectory of BUILD_TOP.  Reference log files
    for logreftests must come from builds with the default value of
    BUILD_TOP, but can come from any supported platform.

________________________________________________________________________________
Commit at 2009-01-26 17:41:51 -0500 by Hugh Secker-Walker <hsecker@hltcoe95-779-30601> from code
Message: Change dependency reporting for objectset.py
Last revno: 371   Last revision id: hsecker@hltcoe95-779-30601-20090126214335-36y2yajpstshsyr1
Last revision date: 2009-01-26 16:43:35 -0500

modified:
  py/coe/containers/SConscript
    Change how dependencies for the troublesome objectset test are
    signaled to SCons (before the changes I saw some frequent failures
    on the HPCC).

________________________________________________________________________________
Commit at 2009-01-26 16:43:35 -0500 by Hugh Secker-Walker <hsecker@hltcoe95-779-30601> from coe_repo
Message: Fix argument ordering problem for PyTools LogrefTestVerify builder.
Last revno: 370   Last revision id: hsw@jhu.edu-20090126211129-7b0pn36m851miru1
Last revision date: 2009-01-26 16:11:29 -0500

modified:
  site_scons/site_tools/HLTCOE.py
  site_scons/site_tools/PyTools.py
    Change the order of arguments the LogrefTestVerify builder sends
    to HLTCOE.diff so as to correspond to (reference, trial) ordering
    that this tool expects.  The textdata.py test flushed out this
    problem.  Also changed how and where we log the build_dir for the
    variant build.

________________________________________________________________________________
Commit at 2009-01-26 16:11:29 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Removed the chdir behavior from the LogrefTest builder.
Last revno: 369   Last revision id: hsw@jhu.edu-20090126205303-vyxzg8qqt1dhlpxe
Last revision date: 2009-01-26 15:53:03 -0500

modified:
  py/coe/htkfiles/htkmmf.py
  py/coe/textdata/textdata.log-ref
  site_scons/site_tools/PyTools.py
    Changed PyTools so that the LogrefTest builder does not do a chdir into each
    directory before it runs the doctest.  This helps uncomplicate the log a
    bit, and it should help support using SCon's multithreading '-j n' option.

    This change required changing a function in htkmmf.py to adopt the idiom
    I used below (for doctest), and a new reference file with a build directory prefix for
    the textdata test.

________________________________________________________________________________
Commit at 2009-01-26 15:53:03 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Get rid of use chdir in the DocTest builder of SCons.
Last revno: 368   Last revision id: hsecker@hltcoe95-779-30601-20090126175655-jslzfvy1xg6ykl5l
Last revision date: 2009-01-26 12:56:55 -0500

modified:
  projects/lm/fileprob.py
  py/coe/htkfiles/htkaudio.py
  py/coe/htkfiles/htklex.py
  py/coe/htkfiles/htkmmf.py
  py/coe/htkfiles/htkmmf2native.py
  py/coe/htkfiles/htkscoring.py
  py/coe/htkfiles/htkscp.py
  py/coe/htkfiles/mlfprocess.py
  py/coe/textdata/textfileprocess.py
  site_scons/site_tools/PyTools.py
    Changed PyTools so that the DocTest builder does not do a chdir into each
    directory before it runs the doctest.  This helps unclutter the log a bit,
    and it should support using SCon's multithreading '-j n' option.

    This change required changing a few of the modules that refered to local
    files to construct filenames that point to the directory in which the module
    lives.  I adopted the idiom:
        >>> module_dir, module_name = os.path.split(__file__)
        >>> filename = os.path.join(module_dir, local_filename)
    which has the nice feature of working from emacs, in which case
    module_dir becomes '' and so you get the local directory!
    In a couple of places I had to use ellipses to mask out the directory
    name when the resulting filename gets logged.

________________________________________________________________________________
Commit at 2009-01-26 12:56:55 -0500 by Hugh Secker-Walker <hsecker@hltcoe95-779-30601> from code
Message: Added a dependency that the 64-bit test machine ferreted out.
Last revno: 367   Last revision id: hsw@jhu.edu-20090126160119-qu8mv3ktczz0dnlo
Last revision date: 2009-01-26 11:01:19 -0500

modified:
  py/coe/containers/SConscript
    Added a package dependency that the 64-bit test machine showed to
    be missing.

________________________________________________________________________________
Commit at 2009-01-26 11:01:19 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Changes and fixes for numerous dependency problems.  Build speedups.
Last revno: 366   Last revision id: kbasye1@jhu.edu-20090123224847-azyz4e3ylw37pny8
Last revision date: 2009-01-23 17:48:47 -0500

More work preparing for a release -- mostly dealing with a bunch of previously
untracked dependencies, but also a considerable speedup to the build.  I have
done a large number of 'bin/scons --random' builds, each after removing the
entire build tree, both on Darwin and Ubuntu Linux.  Several edge cases of
missing dependencies were only rarely found (e.g. occuring in on 1% of the
--random builds).  I believe these are all fixed.  There is still an occasional,
troubling, failure of framesynchronous.py where it processes one fewer frame
than it should.  This does not appear to be a dependency issue.

modified:
  site_scons/site_tools/PyTools.py
    Switched to using the py_compile module to compile Py files.  Use this from
    within the Python that's running scons for PYC files.  Also, batch up PYO
    compilation to be done with a single 'python -O' instance near the end of
    the build.  Both these changes speed up the build considerably.

    Added PyPackageDepends() and PyModuleDepends() functions on the enviroment
    which allow our SConscript files to explicitly list such dependencies for
    those cases where the Python code that they manage defeats our scanner's
    ability to find such dependencies.

    Changed the handling of Python files which our SCons tools need.  Such files
    are declared as tool_file in the SConscript code that calls PyFile, and we
    now avoid setting up circular dependencies.

    Considerable work on the scanner to handle non-Py files, e.g. data files,
    which we now allow the DocTest builder to accept and manage.  Removed a lot
    of unused stuff.  But also left a lot of stuff just commented out.  There
    are still many hacks in here; I'm working with the SCons user group to
    improve our situation.  The main problem(s) seem to stem from the scanner
    being called to scan nodes that don't exist yet, and the difficulty for our
    tools to know whether the source directory or the build_dir variant is
    what's being talked about when the tools are called with filenames/nodes.
  site_scons/site_tools/SConscript
  py/coe/SConscript
    Integrate new tool_file argument for build-related Py files.

modified:
  projects/ddt/bitlm.py
  projects/ddt/datagen.py
  projects/ddt/ddt.py
  py/coe/__init__.py
  py/coe/am/SConscript
  py/coe/am/hmm_mgr.py
  py/coe/am/modelmgr.py
  py/coe/audio/audiobase.py
  py/coe/audio/audiofile.py
  py/coe/audio/liveaudio.py
  py/coe/audio/soxversion.py
  py/coe/coe_py_compile.py
  py/coe/dataflow/__init__.py
  py/coe/dataflow/cfg.py
  py/coe/dataflow/simplecfg.py
  py/coe/dataflow/source.py
  py/coe/graph/graphtools.py
  py/coe/htkfiles/__init__.py
  py/coe/htkfiles/htkmmf.py
  py/coe/signalprocessing/channel.py
  py/coe/signalprocessing/htkmfcc.py
  py/coe/signalprocessing/scale.py
  py/coe/textdata/yamldata.py
  py/coe/util/ROCutils.py
  py/coe/util/__init__.py
  py/coe/util/checkutils.py
  py/coe/util/floatutils.py
  py/coe/util/mathutils.py
  py/yapps2/__init__.py
  sandbox/livedemo/livedemo.py
    Import, boilerplate, and other cleanup.

    Changed 'from blah1 import blah2' to avoid having blah2 be a module
    attribute.  This typically involved replacing blah2 with the module at the
    end of blah1 and stripping off the trailing module name in blah1 in the
    import; in the code it meant changing the use of blah2 to be prefixed with
    the module name.  This makes for more readable code since it eliminates use
    of unqualified attributes from other modules.

    Removed instances of imports from doctest strings since our module scanner,
    based on Python's modulefinder, does not know to look for these imports.
    There is one exception to this non-use of imports in doctest strings, in
    py/coe/containers/serializable.py; here the doctest explicitly imports the
    serializable module, so there's no dependency that's being skipped.

    I also fixed copyrights and standardized boilerplate in files I touched.
    Also fixed line-terminations in a couple of files, but will later do a
    blanket fix to get rid of DOS line endings while doing no logic changes.

added:
  data/htk_r1_adg0_4/SConscript
modified:
  SConscript
    Tell SCons explicitly to manage the project's data files.
added:
  projects/lm/__init__.py
    The lm directory needed to be a package.
modified:
  projects/ddt/SConscript
  projects/ddt/__init__.py
    Make the ddt directory be a package.

modified:
  projects/lm/SConscript
    Added dependecies of doctests on data files.
  py/coe/containers/SConscript
    Classes here do non-standard imports, so their dependencies are not tracked
    by our scanner, so I added explicit mention of dependencies of module
    doctests on other modules and packages.
  py/coe/dataflow/SConscript
    Added dependency of framesynchronous.py doctests on data files.
  py/coe/htkfiles/SConscript
    Added dependecies on data files for htkscp and htkscoring.
  py/yapps2/SConscript
    Since we won't modify external Py files to help our scanner I added explicit
    dependencies of yapps2.py on yappsrt.py module and yappsrt package.
  sandbox/eventdet/SConscript
    Updated dependencies of eventchain.py on local wave data files.
  py/coe/containers/serializable.py
    Added more details to an error message.  Made the testing function be
    private.  Note that this module is an exception to the rule that doctest
    strings don't do imports.  The case here seems difficult to avoid if the
    logic is to stay within this one module, and it doesn't involve an untracked
    dependency; so for now it stays.

________________________________________________________________________________
Commit at 2009-01-23 17:48:47 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Use sources for training; add states to HMM samples; add htkmmf2native.py script
Last revno: 365   Last revision id: kbasye1@jhu.edu-20090122163651-q9j3zu0rkqv0696l
Last revision date: 2009-01-22 11:36:51 -0500

removed:
  projects/htk_test/hmm0_r1.models
    Removed in favor of hmm0_r1.am; see below.
added:
  projects/htk_test/SConscript
    Add for this directory so that we now do doctests on test0.py
  projects/htk_test/hmm0_r1.am
    Replacement for hmm0_r1.models, now in newer native format.
  py/coe/htkfiles/htkmmf2native.py
    A simple script for converting HTK's mmf files into our native
    format.  Run with no args for a test, or with two args to convert.
  py/coe/htkfiles/monophones.am
  py/coe/htkfiles/start.am
    Test files used to compare with htkmmf2native's output.
modified:
  projects/htk_test/test0.py
    Updated some of the dataflow code in this file and made it run for
    everyone rather than just me.  Run with no args to doctest, with
    one arg for a very short test of embedded training, or with 4 args
    to operate as a simple, but real, trainer.  This is still mostly
    pedagogical, though.
  py/coe/am/hmm.py
    HMM sampling now also returns the state the sample came from; see
    help for sample().
  py/coe/am/testhmm.log-ref
    New output in tests of HMM sampling.
  py/coe/htkfiles/SConscript
    Add new htkmmf2native.py script and its data files.
  py/coe/htkfiles/htkscp.py
    Rewrote the top-level doctest to use an IteratorSource.  Changed
    the process() function of ScpProcessor to silently ignore lines
    made of only whitespace.



________________________________________________________________________________
Commit at 2009-01-22 11:36:51 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add HPCC instructions to readme.txt; other readme.txt cleanup
Last revno: 364   Last revision id: kbasye1@jhu.edu-20090121234100-qfc8lyao0ct351ar
Last revision date: 2009-01-21 18:41:00 -0500

modified:
  README.txt
    Added instructions for installing and building on HPCC machines.
    Changed Windows instructions to say that only MinGw is allowed for
    C++.  Other minor cleanup and additions.


________________________________________________________________________________
Commit at 2009-01-21 18:41:00 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add serialization for AdaptingGmmClassifier; other minor cleanup
Last revno: 363   Last revision id: hsw@jhu.edu-20090121195313-ktrmexl3vw8nmqum
Last revision date: 2009-01-21 14:53:13 -0500

modified:
  py/coe/am/classifier.py
    Added functions to support serialization of AdaptingGmmClassifiers.
  py/coe/am/gaussian.py
    Added relevances property to GaussianMixtureModel; moved some
    utility functions to mathutils.py
  py/coe/am/hmm_mgr.py
  py/coe/am/modelmgr.py
    Moved two functions used to serialize dictionaries from hmm_mgr.py to
    modelmgr.py.  Added relevances to the things that are serialized
    for GaussianMixtureModels.
  py/coe/util/mathutils.py
    Moved a couple functions here, other minor cleanup.

________________________________________________________________________________
Commit at 2009-01-21 14:53:13 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Lots of build-related work.  Upgrade to SCons 1.2.0
Last revno: 362   Last revision id: kbasye1@jhu.edu-20090120235140-8kh1fsn13bdv41w8
Last revision date: 2009-01-20 18:51:40 -0500

Fixed up various loose ends aimed at getting a release out.
added:
  cpp/pylib/linux2-posix-i386-32bit-le/_syck.so
    Added support for Ubuntu server 8.10 Linux.  This platform now builds and
    tests successfully.
modified:
  cpp/pylib/README.txt
  cpp/pylib/README_syck.txt
    Updated with instructions for building syck and PySyck on Ubuntu Linux.
  py/coe/htkfiles/htkscoring.py
    Tweak the ellipsis for Ubuntu.

modified:
  SConscript
    Added SConscripts in cpp/pylib, doc, doc/presentations, and doc/readmes.
  SConstruct
    Minor changes associated with (maybe) using a different environment for releases.
  doc/SConscript
    Added comment that this SConscript needs to do something!
added:
  doc/presentations/SConscript
  doc/readmes/SConscript
    Copy presentations and readmes into the build.

modified:
  cpp/floatutils/SConscript
  cpp/liveaudio/SConscript
    Use new SCons functions for getting shared libraries installed.  Prevent the Unix
    library prefix from being put on the shared library's name.
  site_scons/site_tools/PyTools.py
    Significant simplification of the Python file scanner!  Use SCons '#' prefix
    in dependencies.  Added SCons functions, PylibSharedLibrary,
    PylibSharedLibraryFile, and PylibDepends.  These provide support for
    declaring shared libraries and their dependencies, and they copy the shared
    libraries to the correct place in the build.
  py/coe/audio/SConscript
  py/coe/util/SConscript
  py/syck/SConscript
    Added use of new SCons function PylibDepends to tell SCons about dependencies of Python
    modules on shared libraries.
added:
  cpp/pylib/SConscript
    Explicitly manage copying external shared libraries into the build.

added:
  py/coe/htkfiles/mmf.py
    Made this troublesome, machine-generated file be a checked-in part of the project.
modified:
  py/coe/htkfiles/SConscript
    Changes to use the checked-in mmf.py file.  Changed the generation code into
    a test that verifies that we can still generate mmf.py.
  py/coe/htkfiles/mmf.g
    Added some commentary at the top that gets copied into the generated py file.
  py/coe/htkfiles/htkmmf.py
    Changed 'import mmf' to 'from coe.htkfiles import mmf'
  py/yapps2/SConscript
    Added a note about where to look for usage of the yapss2 tools.

modified:
  site_scons/site_tools/HLTCOE.py
    Improved the normalization of the build directory when diffing.  Removed the
    './' prefix from the build_dir.  Minor debug work.
  py/coe/dataflow/join.py
    Modified the test to use simulate_realtime to give more deterministic output and verification.
  py/coe/dataflow/source.py
    Further work to avoid threading interactions with doctest.
  site_scons/site_init.py
    Added a real doctest based on checking the version.
  cpp/liveaudio/audiomodule.cpp
    More learning about Apple's audio protocol.  Progress on using audio object
    addressing which will help us deal with a microphone being unplugged.

Upgraded from SCons 1.0.1 to 1.2.0.  I followed the steps given below at 'Last
revno: 211', but with suitable version-number changes.  For future reference,
here are the steps undertaken, with parameterized version numbers:
    $ old_version_number="1.0.1"
    $ new_version_number="1.2.0"
    $ cd scons
    $ bzr status
    Make sure there is nothing reported in the status
    $ bzr mv scons-local-${old_version_number} scons-local-${new_version_number}
    $ rm -r scons-local-${new_version_number}
    $ cp <your-download-directory>/scons-local-${new_version_number}.tar.gz .
    $ tar xzf scons-local-${new_version_number}.tar.gz
    $ rm scons-local-${new_version_number}.tar.gz
    $ bzr status .
    There should be lots of modified files
    $ bzr add <the 'unknown:' scons files and directories from the status report>
renamed:
  scons/scons-local-1.0.1 => scons/scons-local-1.2.0
added:
  scons/scons-local-1.2.0/SCons/Scanner/RC.py
modified:
  scons/scons-time.py
  scons/scons.py
  scons/sconsign.py
  scons/scons-local-1.2.0/SCons/Action.py
  scons/scons-local-1.2.0/SCons/Builder.py
  scons/scons-local-1.2.0/SCons/CacheDir.py
  scons/scons-local-1.2.0/SCons/Conftest.py
  scons/scons-local-1.2.0/SCons/Debug.py
  scons/scons-local-1.2.0/SCons/Defaults.py
  scons/scons-local-1.2.0/SCons/Environment.py
  scons/scons-local-1.2.0/SCons/Errors.py
  scons/scons-local-1.2.0/SCons/Executor.py
  scons/scons-local-1.2.0/SCons/Job.py
  scons/scons-local-1.2.0/SCons/Memoize.py
  scons/scons-local-1.2.0/SCons/Node/Alias.py
  scons/scons-local-1.2.0/SCons/Node/FS.py
  scons/scons-local-1.2.0/SCons/Node/Python.py
  scons/scons-local-1.2.0/SCons/Node/__init__.py
  scons/scons-local-1.2.0/SCons/Options/BoolOption.py
  scons/scons-local-1.2.0/SCons/Options/EnumOption.py
  scons/scons-local-1.2.0/SCons/Options/ListOption.py
  scons/scons-local-1.2.0/SCons/Options/PackageOption.py
  scons/scons-local-1.2.0/SCons/Options/PathOption.py
  scons/scons-local-1.2.0/SCons/Options/__init__.py
  scons/scons-local-1.2.0/SCons/PathList.py
  scons/scons-local-1.2.0/SCons/Platform/__init__.py
  scons/scons-local-1.2.0/SCons/Platform/aix.py
  scons/scons-local-1.2.0/SCons/Platform/cygwin.py
  scons/scons-local-1.2.0/SCons/Platform/darwin.py
  scons/scons-local-1.2.0/SCons/Platform/hpux.py
  scons/scons-local-1.2.0/SCons/Platform/irix.py
  scons/scons-local-1.2.0/SCons/Platform/os2.py
  scons/scons-local-1.2.0/SCons/Platform/posix.py
  scons/scons-local-1.2.0/SCons/Platform/sunos.py
  scons/scons-local-1.2.0/SCons/Platform/win32.py
  scons/scons-local-1.2.0/SCons/SConf.py
  scons/scons-local-1.2.0/SCons/SConsign.py
  scons/scons-local-1.2.0/SCons/Scanner/C.py
  scons/scons-local-1.2.0/SCons/Scanner/D.py
  scons/scons-local-1.2.0/SCons/Scanner/Dir.py
  scons/scons-local-1.2.0/SCons/Scanner/Fortran.py
  scons/scons-local-1.2.0/SCons/Scanner/IDL.py
  scons/scons-local-1.2.0/SCons/Scanner/LaTeX.py
  scons/scons-local-1.2.0/SCons/Scanner/Prog.py
  scons/scons-local-1.2.0/SCons/Scanner/__init__.py
  scons/scons-local-1.2.0/SCons/Script/Interactive.py
  scons/scons-local-1.2.0/SCons/Script/Main.py
  scons/scons-local-1.2.0/SCons/Script/SConsOptions.py
  scons/scons-local-1.2.0/SCons/Script/SConscript.py
  scons/scons-local-1.2.0/SCons/Script/__init__.py
  scons/scons-local-1.2.0/SCons/Sig.py
  scons/scons-local-1.2.0/SCons/Subst.py
  scons/scons-local-1.2.0/SCons/Taskmaster.py
  scons/scons-local-1.2.0/SCons/Tool/386asm.py
  scons/scons-local-1.2.0/SCons/Tool/BitKeeper.py
  scons/scons-local-1.2.0/SCons/Tool/CVS.py
  scons/scons-local-1.2.0/SCons/Tool/FortranCommon.py
  scons/scons-local-1.2.0/SCons/Tool/JavaCommon.py
  scons/scons-local-1.2.0/SCons/Tool/Perforce.py
  scons/scons-local-1.2.0/SCons/Tool/PharLapCommon.py
  scons/scons-local-1.2.0/SCons/Tool/RCS.py
  scons/scons-local-1.2.0/SCons/Tool/SCCS.py
  scons/scons-local-1.2.0/SCons/Tool/Subversion.py
  scons/scons-local-1.2.0/SCons/Tool/__init__.py
  scons/scons-local-1.2.0/SCons/Tool/aixc++.py
  scons/scons-local-1.2.0/SCons/Tool/aixcc.py
  scons/scons-local-1.2.0/SCons/Tool/aixf77.py
  scons/scons-local-1.2.0/SCons/Tool/aixlink.py
  scons/scons-local-1.2.0/SCons/Tool/applelink.py
  scons/scons-local-1.2.0/SCons/Tool/ar.py
  scons/scons-local-1.2.0/SCons/Tool/as.py
  scons/scons-local-1.2.0/SCons/Tool/bcc32.py
  scons/scons-local-1.2.0/SCons/Tool/c++.py
  scons/scons-local-1.2.0/SCons/Tool/cc.py
  scons/scons-local-1.2.0/SCons/Tool/cvf.py
  scons/scons-local-1.2.0/SCons/Tool/default.py
  scons/scons-local-1.2.0/SCons/Tool/dmd.py
  scons/scons-local-1.2.0/SCons/Tool/dvi.py
  scons/scons-local-1.2.0/SCons/Tool/dvipdf.py
  scons/scons-local-1.2.0/SCons/Tool/dvips.py
  scons/scons-local-1.2.0/SCons/Tool/f77.py
  scons/scons-local-1.2.0/SCons/Tool/f90.py
  scons/scons-local-1.2.0/SCons/Tool/f95.py
  scons/scons-local-1.2.0/SCons/Tool/filesystem.py
  scons/scons-local-1.2.0/SCons/Tool/fortran.py
  scons/scons-local-1.2.0/SCons/Tool/g++.py
  scons/scons-local-1.2.0/SCons/Tool/g77.py
  scons/scons-local-1.2.0/SCons/Tool/gas.py
  scons/scons-local-1.2.0/SCons/Tool/gcc.py
  scons/scons-local-1.2.0/SCons/Tool/gfortran.py
  scons/scons-local-1.2.0/SCons/Tool/gnulink.py
  scons/scons-local-1.2.0/SCons/Tool/gs.py
  scons/scons-local-1.2.0/SCons/Tool/hpc++.py
  scons/scons-local-1.2.0/SCons/Tool/hpcc.py
  scons/scons-local-1.2.0/SCons/Tool/hplink.py
  scons/scons-local-1.2.0/SCons/Tool/icc.py
  scons/scons-local-1.2.0/SCons/Tool/icl.py
  scons/scons-local-1.2.0/SCons/Tool/ifl.py
  scons/scons-local-1.2.0/SCons/Tool/ifort.py
  scons/scons-local-1.2.0/SCons/Tool/ilink.py
  scons/scons-local-1.2.0/SCons/Tool/ilink32.py
  scons/scons-local-1.2.0/SCons/Tool/install.py
  scons/scons-local-1.2.0/SCons/Tool/intelc.py
  scons/scons-local-1.2.0/SCons/Tool/jar.py
  scons/scons-local-1.2.0/SCons/Tool/javac.py
  scons/scons-local-1.2.0/SCons/Tool/javah.py
  scons/scons-local-1.2.0/SCons/Tool/latex.py
  scons/scons-local-1.2.0/SCons/Tool/lex.py
  scons/scons-local-1.2.0/SCons/Tool/link.py
  scons/scons-local-1.2.0/SCons/Tool/linkloc.py
  scons/scons-local-1.2.0/SCons/Tool/m4.py
  scons/scons-local-1.2.0/SCons/Tool/masm.py
  scons/scons-local-1.2.0/SCons/Tool/midl.py
  scons/scons-local-1.2.0/SCons/Tool/mingw.py
  scons/scons-local-1.2.0/SCons/Tool/mslib.py
  scons/scons-local-1.2.0/SCons/Tool/mslink.py
  scons/scons-local-1.2.0/SCons/Tool/msvc.py
  scons/scons-local-1.2.0/SCons/Tool/msvs.py
  scons/scons-local-1.2.0/SCons/Tool/mwcc.py
  scons/scons-local-1.2.0/SCons/Tool/mwld.py
  scons/scons-local-1.2.0/SCons/Tool/nasm.py
  scons/scons-local-1.2.0/SCons/Tool/packaging/__init__.py
  scons/scons-local-1.2.0/SCons/Tool/packaging/ipk.py
  scons/scons-local-1.2.0/SCons/Tool/packaging/msi.py
  scons/scons-local-1.2.0/SCons/Tool/packaging/rpm.py
  scons/scons-local-1.2.0/SCons/Tool/packaging/src_tarbz2.py
  scons/scons-local-1.2.0/SCons/Tool/packaging/src_targz.py
  scons/scons-local-1.2.0/SCons/Tool/packaging/src_zip.py
  scons/scons-local-1.2.0/SCons/Tool/packaging/tarbz2.py
  scons/scons-local-1.2.0/SCons/Tool/packaging/targz.py
  scons/scons-local-1.2.0/SCons/Tool/packaging/zip.py
  scons/scons-local-1.2.0/SCons/Tool/pdf.py
  scons/scons-local-1.2.0/SCons/Tool/pdflatex.py
  scons/scons-local-1.2.0/SCons/Tool/pdftex.py
  scons/scons-local-1.2.0/SCons/Tool/qt.py
  scons/scons-local-1.2.0/SCons/Tool/rmic.py
  scons/scons-local-1.2.0/SCons/Tool/rpcgen.py
  scons/scons-local-1.2.0/SCons/Tool/rpm.py
  scons/scons-local-1.2.0/SCons/Tool/sgiar.py
  scons/scons-local-1.2.0/SCons/Tool/sgic++.py
  scons/scons-local-1.2.0/SCons/Tool/sgicc.py
  scons/scons-local-1.2.0/SCons/Tool/sgilink.py
  scons/scons-local-1.2.0/SCons/Tool/sunar.py
  scons/scons-local-1.2.0/SCons/Tool/sunc++.py
  scons/scons-local-1.2.0/SCons/Tool/suncc.py
  scons/scons-local-1.2.0/SCons/Tool/sunf77.py
  scons/scons-local-1.2.0/SCons/Tool/sunf90.py
  scons/scons-local-1.2.0/SCons/Tool/sunf95.py
  scons/scons-local-1.2.0/SCons/Tool/sunlink.py
  scons/scons-local-1.2.0/SCons/Tool/swig.py
  scons/scons-local-1.2.0/SCons/Tool/tar.py
  scons/scons-local-1.2.0/SCons/Tool/tex.py
  scons/scons-local-1.2.0/SCons/Tool/tlib.py
  scons/scons-local-1.2.0/SCons/Tool/wix.py
  scons/scons-local-1.2.0/SCons/Tool/yacc.py
  scons/scons-local-1.2.0/SCons/Tool/zip.py
  scons/scons-local-1.2.0/SCons/Util.py
  scons/scons-local-1.2.0/SCons/Variables/BoolVariable.py
  scons/scons-local-1.2.0/SCons/Variables/EnumVariable.py
  scons/scons-local-1.2.0/SCons/Variables/ListVariable.py
  scons/scons-local-1.2.0/SCons/Variables/PackageVariable.py
  scons/scons-local-1.2.0/SCons/Variables/PathVariable.py
  scons/scons-local-1.2.0/SCons/Variables/__init__.py
  scons/scons-local-1.2.0/SCons/Warnings.py
  scons/scons-local-1.2.0/SCons/__init__.py
  scons/scons-local-1.2.0/SCons/compat/__init__.py
  scons/scons-local-1.2.0/SCons/compat/_scons_UserString.py
  scons/scons-local-1.2.0/SCons/compat/_scons_hashlib.py
  scons/scons-local-1.2.0/SCons/compat/_scons_itertools.py
  scons/scons-local-1.2.0/SCons/compat/_scons_subprocess.py
  scons/scons-local-1.2.0/SCons/compat/builtins.py
  scons/scons-local-1.2.0/SCons/cpp.py
  scons/scons-local-1.2.0/SCons/exitfuncs.py

________________________________________________________________________________
Commit at 2009-01-20 18:51:39 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: AdaptingGmmClassifiers use GmmMgr; several other GmmMgr changes; other changes
Last revno: 361   Last revision id: hsw@jhu.edu-20090116203604-mxp1ris29egzy1p6
Last revision date: 2009-01-16 15:36:04 -0500

modified:
  doc/thirdParty.txt
    Added sox to the list of third-party software that's checked into
    the project.
  py/coe/am/classifier.log-ref
    Labeling differences only.
  py/coe/am/classifier.py
    Changed AdaptingGmmClassifier to use a GmmMgr to keep track of its
    models.  Changed argument and variable names from "num_features"
    to "dimension" to be consistent with low-level model nomenclature.
    Note that much of the priming functionality is now in GmmMgr.
  py/coe/am/gaussian.py
    Added method 'copy()' to all the model types in this file.
    Changed GaussianMixtureModel priming to take a SimpleGaussianModel
    as the primer; the details of the priming remain the same, but now
    we can also prime models with full covariance.
  py/coe/am/hmm.py
    Avoid creating GmmMgrs with empty lists.
  py/coe/am/hmm_mgr.py
    Use new read_htk_mmf_file() interface.
  py/coe/am/modelmgr.py
    Add __iter__() to base class and property 'dimension', which must
    now be fixed at initialization.  GmmMgrs now have several new
    initialization options, including making a copy, providing only
    the dimension, and providing just a list of the number of desired
    components with optional priming models.  Also changed how GmmMgrs
    are printed to string to make them more readable.
  py/coe/am/testhmm.py
  py/coe/am/testhmm2.py
    Avoid creating GmmMgrs with empty lists.
  py/coe/dataflow/framesynchronous.py
    Use new read_htk_mmf_file() interface.
  py/coe/htkfiles/htkmmf.log-ref
    New GmmMgr printing differences only.
  py/coe/htkfiles/htkmmf.py
    Changed read_htk_mmf_file() so that it now longer takes an HmmMgr
    and a GmmMgr and fills them in.  Instead, it now creates both
    items and returns them along with the dictionary it previously
    returned (so the return is now a triple).  This was more-or-less
    necessary since GmmMgr's can't be created without knowing the
    dimension.
  py/coe/htkfiles/htkscoring.py
    Use new read_htk_mmf_file() interface.
  sandbox/livedemo/livedemo.py
    Changed top-level code to use new GmmMgr and AdaptingGmmClassifier
    initialization interfaces.


________________________________________________________________________________
Commit at 2009-01-16 15:36:03 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Start on release process.  Added to versioning discussion.
Last revno: 360   Last revision id: kbasye1@jhu.edu-20090116182259-k10fbvq5mjad63x7
Last revision date: 2009-01-16 13:22:59 -0500

modified:
  SConscript
  SConstruct
    Beginnings of support for a release process.  Added a RELEASE variable to
    our SCons command-line:
        $ bin/scons -h
        scons: Reading SConscript files ...
        scons: done reading SConscript files.

        RELEASE: Set to True to do the additional work that targets a release (yes|no)
            default: False
            actual: False

        Use scons -H for help about command-line options.

        $ bin/scons RELEASE=1
        scons: Reading SConscript files ...
        ...
added:
  doc/SConscript
    Only gets run for release builds.

modified:
  doc/names.txt
    Added some 'flow' type names from Mary and Hugh.
  doc/versioning.txt
    Added discusion about private data.

________________________________________________________________________________
Commit at 2009-01-16 13:22:59 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add versioning.txt in doc - a proposal for a versioning scheme
Last revno: 359   Last revision id: hsw@jhu.edu-20090115163811-x5jg1xlfddhdfsju
Last revision date: 2009-01-15 11:38:11 -0500

added:
  doc/versioning.txt
    A proposal for a versioning scheme; the intention is to settle on
    scheme and turn this document into a specification for it.




________________________________________________________________________________
Commit at 2009-01-15 11:38:11 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Added to longtermThingsToDo.txt.  Added doc/names.txt, a list of possible names.
Last revno: 358   Last revision id: kbasye1@jhu.edu-20090115043049-08qrxae9uf22snny
Last revision date: 2009-01-14 23:30:49 -0500

modified:
  doc/longtermThingsToDo.txt
    Added a lot of stuff based on development issues that came to my attention
    in the run up to the presentation and demos.
added:
  doc/names.txt
    List of suggested names for the toolkit.

________________________________________________________________________________
Commit at 2009-01-14 23:30:49 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add sample() function to Hmm, other cleanup
Last revno: 357   Last revision id: hsw@jhu.edu-20090114212355-umjfkraqt33klgrn
Last revision date: 2009-01-14 16:23:55 -0500

modified:
  doc/thirdParty.txt
    Fixed wrong number of categories.
  py/coe/am/gaussian.py
    Added function find_cumulative_index(), which should really be
    moved to a more general location along with the nearby distance
    function.
  py/coe/am/hmm.py
    Added sample() function to Hmm class
  py/coe/am/testhmm.log-ref
  py/coe/am/testhmm.py
    Added a test of Hmm.sample; note that all the doctests in hmm.py
    use dummy models so they can't be sampled.  I should probably fix this.

________________________________________________________________________________
Commit at 2009-01-14 16:23:54 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Tying up loose ends from demos.  Overhauled visual display tools.
Last revno: 356   Last revision id: kbasye1@jhu.edu-20090114155151-8p66cd44x30fjubz
Last revision date: 2009-01-14 10:51:51 -0500

renamed:
  bin/saddemo.sh => bin/livedemo.sh
  sandbox/saddemo => sandbox/livedemo
  sandbox/saddemo/saddemo.py => sandbox/livedemo/livedemo.py
modified:
  SConscript
  sandbox/livedemo/SConscript
  bin/livedemo.sh
    Renamed: sad -> live  (where sad was from Speaker Activity Detection)
  sandbox/livedemo/livedemo.py
    More tweaks.
added:
  doc/presentations/livedemo_script.txt
    Instructions and Python interpreter commands for running the live demo.

modified:
  projects/chartrecorder/chart.py
    Lots of cleanup and abstraction.  Now takes optional '--log' to have
    it run in vertical mode, suitable for text logging.  The default is
    to run in horizontal mode, suitable for chart-plotting.  See also
    the coordinated work on bin/display.sh.
added:
  bin/display.sh
    Shell script for OS X that starts a terminal window and then starts
    chart.py in the window.  Takes two arguments:
      --log      (optional) large font, runs in vertical mode,
                 the default is run very small font in horizontal mode
      pipename   name of the namedpipe to create and listen on
    Sets the window size, font name, font size, and window title.

________________________________________________________________________________
Commit at 2009-01-14 10:51:51 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add some images and demo files used in 13-Jan-2009 presentation
Last revno: 355   Last revision id: kbasye1@jhu.edu-20090113161810-4yiv1tf0z01ntcov
Last revision date: 2009-01-13 11:18:10 -0500

added:
  bin/fsdemo.sh
    Simple script for the framesynchronous phoneme decoder demo.  Note
    that this demo is really more about inspecting objects, generating
    diagnostic output and interacting with the interpreter.
  doc/images/fsdemoflow.png
    A picture of the two-node dataflow network for the FS demo -
    autogenerated by framesynchronous.py
  doc/images/htk_mfcc.dot
    A dot graph of the HTK-like MFCC front end - autogenerated by
    htkmfcc.py.
  doc/presentations/fsdemo_script.txt
    Script for the FS demo.



________________________________________________________________________________
Commit at 2009-01-13 11:18:10 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Merge in Hugh's changes
Last revno: 354   Last revision id: kbasye1@jhu.edu-20090113161446-guiivj8r2w7f8bo3
Last revision date: 2009-01-13 11:14:46 -0500

pending merges:
  Hugh Secker-Walker 2009-01-13 Added logo samples presentation.
added:
  doc/presentations/logo-samples.ppt
modified:
  changes.txt
    Merge in Hugh's changes.


________________________________________________________________________________
Commit at 2009-01-13 11:14:46 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Distributed version of slides for 13-Jan-2009 talk
Last revno: 353   Last revision id: hsw@jhu.edu-20090113153001-mii5hxhwiig2egoo
Last revision date: 2009-01-13 10:30:01 -0500

modified:
  doc/presentations/TTO5ResearchLaboratory13Jan_v0.ppt
    A few more edits.  This version is what we sent to Susan and Karen
    as a PDF file for the website, and gave them a paper original for
    distribution.  Of course, what we gave them has only the first 27
    slides; there's still a bunch of other slides at the end that are
    only in the PPT file.



________________________________________________________________________________
Commit at 2009-01-13 11:12:56 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: Added logo samples presentation.
Last revno: 353   Last revision id: hsw@jhu.edu-20090113153001-mii5hxhwiig2egoo
Last revision date: 2009-01-13 10:30:01 -0500

added:
  doc/presentations/logo-samples.ppt
    Added a one-slide montage of logo samples from Miriam.

________________________________________________________________________________
Commit at 2009-01-13 10:30:01 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: Added demo screenshots and more descriptions.
Last revno: 352   Last revision id: kbasye1@jhu.edu-20090113141547-sj6fte9lslb0ty4f
Last revision date: 2009-01-13 09:15:47 -0500

modified:
  doc/presentations/TTO5ResearchLaboratory13Jan_v0.ppt
    Added screenshots of the demo and more descriptions of the
    dataflows and the DDT processing.

________________________________________________________________________________
Commit at 2009-01-13 09:15:47 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: More presentation work, framesynchronous demo work
Last revno: 351   Last revision id: kbasye1@jhu.edu-20090113133301-0mjqg0ulhqgpdw32
Last revision date: 2009-01-13 08:33:01 -0500

modified:
  doc/presentations/TTO5ResearchLaboratory13Jan_v0.ppt
    New conclusions slide
  py/coe/dataflow/framesynchronous.py
    Tried, but failed, to use chain processor.  I got the picture I
    needed, though.



________________________________________________________________________________
Commit at 2009-01-13 08:33:01 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Chart.sh changes, framesynchronous demo, more presentation work
Last revno: 350   Last revision id: hsw@jhu.edu-20090112230151-q8erkhbxvema7jan
Last revision date: 2009-01-12 18:01:51 -0500

modified:
  bin/chart.sh
    Modified to allow vertical use from the command line (thanks, Hugh).
  doc/presentations/TTO5ResearchLaboratory13Jan_v0.ppt
    Further modifications by Ken and Hugh together through the first
    half of the presentation following the 12-Jan dry run.
  py/coe/dataflow/framesynchronous.py
    Added new script option --interactive that sets up the global
    environment for a demo of the decoder.  Run
      "python -i framesynchronous.py --interactive"
    to get the demo going.




________________________________________________________________________________
Commit at 2009-01-12 18:01:51 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: added slides for demos to the presentation
Last revno: 349   Last revision id: hsw@jhu.edu-20090112182952-gp6cvjilekrulkqt
Last revision date: 2009-01-12 13:29:52 -0500

modified:
  doc/presentations/TTO5ResearchLaboratory13Jan_v0.ppt
    Added first draft of slides and dot figures for the live
    audio demos.

________________________________________________________________________________
Commit at 2009-01-12 13:29:51 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Added a mode to the demo. Other cleanup.
Last revno: 348   Last revision id: kbasye1@jhu.edu-20090112180452-fk7j7g9z3du07d1i
Last revision date: 2009-01-12 13:04:52 -0500

modified:
  sandbox/saddemo/saddemo.py
    Added a mode:
      >>> mode.vu        # for just vu meter display
      >>> mode.train     # for training and logging
      >>> mode.classify  # for classification, uses all three windows
    Made it use sys.argv to figure out which files/pipes to write to.
    Moved the functions to the top of the file so that the graph-
    building logic is all together.  Removed a bunch of unused code.
  bin/saddemo.sh
    Made it start the demo with the necessary three arguments.  Added comment
    about starting a third chart plotter.
  py/coe/util/debugprint.py
    Made dprint() flush the stream.

________________________________________________________________________________
Commit at 2009-01-12 13:04:51 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: More presentation work, a new image, an updated logref file, and tweaks to one utility
Last revno: 347   Last revision id: kbasye1@jhu.edu-20090111224008-4ty9gp90ho5zlpa6
Last revision date: 2009-01-11 17:40:08 -0500

added:
  doc/images/CodeDependencyBW.png
    A copy of the code graph that looks good in black&white
    rendering.
modified:
  doc/presentations/TTO5ResearchLaboratory13Jan_v0.ppt
    Incorporate comments from Mary and do quite a bit of pruning.
  py/coe/am/classifier.log-ref
    Forgot to replace this in my last check-in.
  py/coe/util/codedependency.py
    Tweaked to do make a picture that works better in gray-scale.

________________________________________________________________________________
Commit at 2009-01-11 17:40:08 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: More presentation work and control EM iterations in AdaptingGmmClassifier
Last revno: 346   Last revision id: hsw@jhu.edu-20090111222023-t2aq418s8rnqoq9t
Last revision date: 2009-01-11 17:20:23 -0500

modified:
  doc/presentations/TTO5ResearchLaboratory13Jan_v0.ppt
    Pruned some things from the ASR section of this talk.
  py/coe/am/classifier.py
    Added set_num_em_iterations() to AdaptingGmmClassifier so clients
    can control the number of EM iterations done when adapt_one_class
    or adapt_all_classes() is called.


________________________________________________________________________________
Commit at 2009-01-11 17:20:23 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: First working version of the DDT speech/background classifier demo.
Last revno: 345   Last revision id: kbasye1@jhu.edu-20090111210903-twtc7f71oaba3oud
Last revision date: 2009-01-11 16:09:03 -0500

modified:
  sandbox/saddemo/saddemo.py
    Added code to build a single Gaussian model for each class.  Used
    the output of that (from 65,000 frames of Ken and Hugh skyping) to
    bootstrap the means and devs for the classifier models.  Added
    another display, so you need to open chart.py on /tmp/demo2.
    Do the semi-supervised adaptation of the two classifiers on the two
    signal processings.  Plot the log-likelihood ratios of each class
    from the two classifiers.

________________________________________________________________________________
Commit at 2009-01-11 16:09:03 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Fix two stupid bugs and add a test
Last revno: 344   Last revision id: kbasye1@jhu.edu-20090111195444-c1uje17mak17yanp
Last revision date: 2009-01-11 14:54:44 -0500

modified:
  py/coe/am/classifier.py
  py/coe/am/gaussian.py
    Fix a couple silly bugs and add testing of adaptation for
    SimpleGaussianModel.

________________________________________________________________________________
Commit at 2009-01-11 14:54:44 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add simple priming to GMM initialization
Last revno: 343   Last revision id: hsw@jhu.edu-20090111191055-quugng9ql8y4koz4
Last revision date: 2009-01-11 14:10:55 -0500

modified:
  py/coe/am/classifier.py
  py/coe/am/gaussian.py
    Add ability to prime GMM models on initialization.  The priming is
    crude at this point.  A single pair of mean, variance vector is
    expected and used as follows.  For each dimension the mean is
    used, along with the dev * 0.25, to generate a primed mean using a
    normal variate.  The variances are used directly in all components.

________________________________________________________________________________
Commit at 2009-01-11 14:10:55 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Work on demo
Last revno: 342   Last revision id: kbasye1@jhu.edu-20090111164948-01klkfc5borfjoqy
Last revision date: 2009-01-11 11:49:48 -0500

modified:
  bin/chart.sh
    Made the default to be to run in 'transpose' mode.
  projects/chartrecorder/chart.py
    Implemented some optimizations and a bug fix to the horizontal display.
    Minor steps towards unifying the two display modes.
  py/coe/signalprocessing/endpoint.py
    Made the max tracker ignore single outlier points.
  sandbox/saddemo/saddemo.py
    Tweaks to endpointer settings.  Work on the VU display code to make it
    more informative and less stressful on ncurses.  Added flags to support
    not connecting up all of the dataflow network.  Minor cleanup.

________________________________________________________________________________
Commit at 2009-01-11 11:49:48 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: More work on PPT presentation for 13-Jan
Last revno: 341   Last revision id: kbasye1@jhu.edu-20090111063807-yxtcos0lbjubv4ho
Last revision date: 2009-01-11 01:38:07 -0500

modified:
  doc/presentations/TTO5ResearchLaboratory13Jan_v0.ppt
    Further improvements, a complete version of the project
    organization picture, more notes, and some reorganization.



________________________________________________________________________________
Commit at 2009-01-11 01:38:07 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Try to fix assert bug and add one new slide with a picture to 13-Jan presentation
Last revno: 340   Last revision id: hsw@jhu.edu-20090111054913-o6p2g8mgvezuxfx1
Last revision date: 2009-01-11 00:49:13 -0500

modified:
  doc/presentations/TTO5ResearchLaboratory13Jan_v0.ppt
    Add a slide at the end with Hugh's project structure picture.
    This still needs work, esp. dependency arrows, maturity loop, and
    space to put them in.
  py/coe/am/gaussian.py
    Change some assert to try to avoid tripping them with an underflow.


________________________________________________________________________________
Commit at 2009-01-11 00:49:13 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Significant progress on components and plumbing for DDT demo.
Last revno: 339   Last revision id: kbasye1@jhu.edu-20090111044151-v1tz7i7dgsfd2wuh
Last revision date: 2009-01-10 23:41:51 -0500

modified:
  py/coe/dataflow/join.py
    Added SynchronizingSequenceJoin, a Processor which synchronizes data from
    multiple sources and passes it on, one-full-slotsworth at a time.
  py/coe/signalprocessing/htkmfcc.py
    Changed some of the labels on the processors so that generated dot display
    is more consistent.   Added make_melcepstral_processor() which builds
    the MelCepstral part of a sigproc chain.
  py/coe/util/streamprocess.py
    Fixed FanoutSetProcessor to send copies of ndarrays so that the targets
    can safely stomp on the data.
  sandbox/saddemo/saddemo.py
    Added more components and logic for the DDT demo.  The plumbing is almost
    all in place, except for creating and displaying the log-likelihood ratios,
    but that will be straightforward.  Hit a roadblock in the classifier
    training....

________________________________________________________________________________
Commit at 2009-01-10 23:41:50 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add horizontal display mode to chart.py and asciivumeter.py; add vu2.sh to use them
Last revno: 338   Last revision id: hsw@jhu.edu-20090110215217-mh4f4hliq2ptkkj1
Last revision date: 2009-01-10 16:52:17 -0500

added:
  bin/vu2.sh
    Simple script to run VU meter in horizontal mode.  Uses ugly
    extra-argument hacks in both chart.py and asciivumeter.py.
modified:
  projects/chartrecorder/chart.py
    Added a second function chartdisplay2() which does the display
    horizontally rather than vertically.  It could perhaps use some
    optimization, but it's basically functional.  When the dust
    settles, we should either switch to using one mode exclusively or
    refactor this code to support both modes in one function or
    object.  Tweaked "main" section to run the second function if
    there's *any* extra argument to this script.  So another good
    cleanup would be real argument processing.
  py/coe/audio/asciivumeter.py
    Added a configurable parameter vertical_display, which defaults to
    True, preserving the old behavior.  When set to false, the lines
    output use different character fors "vertical" and "horizontal"
    bars.  This mode is activated when the file is run as a script by
    providing *any* extra argument - see above.


________________________________________________________________________________
Commit at 2009-01-10 16:52:17 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Work on demos
Last revno: 337   Last revision id: kbasye1@jhu.edu-20090110204613-4kgso16y2gogmq8u
Last revision date: 2009-01-10 15:46:13 -0500

modified:
  py/coe/audio/liveaudio.py
    Made the LiveAudioSource __repr__ be informative.
  py/coe/signalprocessing/endpoint.py
    Simplifications to the logic.  But, included the range info from the
    tracker in what gets returned.  This supports overlaying the range
    on the vu display in the demo; but really it raises important
    questions about how to keep diagnositic info synchronized.
  py/coe/util/debugprint.py
    Rewrote the string-building logic to avoid n^2 work.
  py/coe/util/streamprocess.py
    Added a sendee property to all Processors.
  sandbox/saddemo/saddemo.py
    Work on endpointing demo with vumeter.  Lots of hacking at the module level
    to make it easy to control the demo.  Numerous fixes and tweaks to the
    components involved.  Lots of nacent ideas about how to control displaying
    etc at the interpreter level.

  doc/planning-2009-01-13.txt
    Added some notes based on a call with Chris

________________________________________________________________________________
Commit at 2009-01-10 15:46:13 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add graphs and labels to processors; making HTK SP chain displayable
Last revno: 336   Last revision id: kbasye1@jhu.edu-20090110153648-2ddjhl93iqkgnq1w
Last revision date: 2009-01-10 10:36:48 -0500

modified:
  py/coe/graph/graphtools.py
    Added a function 'add_graph' to GraphBuilder which adds an entire
    graph to the builder, returning the new indices of the added
    graph's original terminals.  It's a little disturbing that writing
    this function required access to the internals of the graph to be
    added, or perhaps I missed some obvious way of doing this.  Added
    some doc for GraphBuilder to test the new function, and left a
    note about changing dot output to use rankdir=LR by default when
    we have time to deal with the fallout.
  py/coe/signalprocessing/htkmfcc.py
    Provide label arguments to two FunctionProcessor creations (see
    below) and add a commented out test of dot display for a test
    chain.
  py/coe/util/streamprocess.py
    ProcessorBase now has a graph object and a label, so that all
    derived classes have them too.  By default the graph is one node
    whose label is the label of the processor, and the label of the
    processor is the name of the class.  FunctionProcessor and
    FunctionSequenceProcessor both override the default label to
    provide more informative labels.  ChainProcessor overrides the
    graph attribute to build a chain graph corresponding to all its
    sub-elements.  Nested ChainProcessors are untested at this point,
    at least in the sense that I don't know of anywhere in the code
    we're building such structures.




________________________________________________________________________________
Commit at 2009-01-10 10:36:48 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add BlockToFeatures processor
Last revno: 335   Last revision id: kbasye1@jhu.edu-20090109224639-ev54mqazqq2bxytn
Last revision date: 2009-01-09 17:46:39 -0500

modified:
  py/coe/htkfiles/htkscp.py
    Added BlockToFeatures, a processor element that transforms
    HTKAudioBlockEvents into raw feature vectors in the form of Numpy
    arrays.  Used downstream of an ScpProcessor, this gives a way to
    take an iterable of filenames and generate an undifferentiated
    feature stream from all the HTK audio files at once.



________________________________________________________________________________
Commit at 2009-01-09 17:46:38 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: First draft of PPT deck for 13-Jan presentation
Last revno: 334   Last revision id: kbasye1@jhu.edu-20090109162711-317a92jmrrz1wari
Last revision date: 2009-01-09 11:27:11 -0500

added:
  doc/presentations/TTO5ResearchLaboratory13Jan_v0.ppt
    First draft of a presentation for the 13-Jan-2009 Quarterly
    Technical Exchange.  Note that there are a lot of slides at the
    end that are really just raw material at this point.
modified:
  doc/presentations/outline-13-jan-2009.txt
    Minor tweaks.

________________________________________________________________________________
Commit at 2009-01-09 11:27:11 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: First draft of an outline for the 13-Jan-2009 talk
Last revno: 333   Last revision id: kbasye1@hltcoe95-779-30601-20090109044708-a3pmikarsvqyee5l
Last revision date: 2009-01-08 23:47:08 -0500

added:
  doc/presentations/outline-13-jan-2009.txt
    First draft of an outline for the presentation on 13-Jan-2009.
modified:
  .bzrignore
    Added 'doctest_summary' to the list of ignored files.

________________________________________________________________________________
Commit at 2009-01-08 23:47:08 -0500 by kbasye1 <kbasye1@hltcoe95-779-30601> from code1
Message: Fix HPCC test breakage
Last revno: 332   Last revision id: hsecker1@hltcoe95-779-30601-20090109032328-o6i72rnlwleuanyz
Last revision date: 2009-01-08 22:23:28 -0500

modified:
  py/coe/htkfiles/htkscoring.py
    Restore ellipsis to fix HPCC test breakage.  Note that we're no
    longer getting a platform-dependent change in the 4th hex digit,
    so I've removed a comment to that effect.  Still a bit troubling,
    though.


________________________________________________________________________________
Commit at 2009-01-08 22:23:28 -0500 by hsecker1 <hsecker1@hltcoe95-779-30601> from code
Message: Fix saddemo to not test live audio on non-darwin platforms.
Last revno: 331   Last revision id: hsw@jhu.edu-20090109031626-mqyteynv3viuutaf
Last revision date: 2009-01-08 22:16:26 -0500

modified:
  sandbox/saddemo/SConscript
    Prevent live-audio tests being run on non-darwin platforms.

________________________________________________________________________________
Commit at 2009-01-08 22:16:26 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Fix minor shutdown problem in source.py and liveaudio.py
Last revno: 330   Last revision id: hsw@jhu.edu-20090109025027-lp828o2g2a4bka92
Last revision date: 2009-01-08 21:50:27 -0500

modified:
  py/coe/audio/liveaudio.py
  py/coe/dataflow/source.py
    Moved __del__ logic to the baseclass.  Allow done() to be called more than
    once, thus avoiding an ignored error from the interpreter that slipped through
    the doctesting via stderr....

________________________________________________________________________________
Commit at 2009-01-08 21:50:27 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Work on SAD demo.
Last revno: 329   Last revision id: kbasye1@jhu.edu-20090109015915-yfmkpnc0x5cf10vi
Last revision date: 2009-01-08 20:59:15 -0500

added:
  bin/chart.sh
  bin/saddemo.sh
  sandbox/saddemo/
  sandbox/saddemo/SConscript
  sandbox/saddemo/saddemo.py
    Start on a Speaker Activity Detector demo that allows inspection and
    modfication of objects involved in a running live demo.  Quick and dirty
    example:
      in a terminal window at the top of the project do:
        $ bin/chart.sh /tmp/demo
      in another terminal window at the top of the project do:
        $ bin/chart.sh /tmp/log
      in a shell buffer or terminal at the top of the project do:
        $ bin/saddemo.sh
        Startup: _audio: audiomodule.cpp
        Startup: audioStartTimeNanos 843132084477904
        >>> start       # starts the live audio in the demo window
        >>> db(10, 5)   # changes the offset and scaling that's applied
        >>> on          # spews numerical values to the log window
        >>> off         # stops the spew
        >>> stop        # stops the live audio
        >>> ^D          # end the world

        $ bin/saddemo.sh  # to do it again, will reuse the display windows...

modified:
  SConscript
  py/coe/audio/liveaudio.py
    Added a done() method to the LiveAudioSource.
  py/coe/signalprocessing/htkmfcc.py
    Implemented HTK's STEREOMODE parameter.  Broke out the windowing
    and FFT work into a separate, reusable processing chain.

  py/coe/util/streamprocess.py
    Moved a bit of code and commented out something confusing that
    I thought might be a problem.
  py/coe/util/debugprint.py
    Clean up of a couple of lines that came to my attention.
  site_scons/site_tools/PyTools.py
    Make error messages from verify_log_doctest() begin with something
    to stderr so that they are color highlighted in emacs.
  doc/planning-2009-01-13.txt
    minor tweaks

________________________________________________________________________________
Commit at 2009-01-08 20:59:15 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Replace 13-feat HTK files with 39-feat ones; make sure to use audio files related to models in some tests; fix Win32 tests
Last revno: 328   Last revision id: kbasye1@jhu.edu-20090108225844-jdbxiwtdhehczy0w
Last revision date: 2009-01-08 17:58:44 -0500

modified:
  data/htk_r1_adg0_4/adg0_4_sr009.mfc
  data/htk_r1_adg0_4/adg0_4_sr049.mfc
  data/htk_r1_adg0_4/adg0_4_sr089.mfc
  data/htk_r1_adg0_4/adg0_4_sr129.mfc
  data/htk_r1_adg0_4/adg0_4_sr169.mfc
  data/htk_r1_adg0_4/adg0_4_sr209.mfc
  data/htk_r1_adg0_4/adg0_4_sr249.mfc
  data/htk_r1_adg0_4/adg0_4_sr289.mfc
  data/htk_r1_adg0_4/adg0_4_sr329.mfc
  data/htk_r1_adg0_4/adg0_4_sr369.mfc
  data/htk_r1_adg0_4/adg0_4_sr409.mfc
  data/htk_r1_adg0_4/adg0_4_sr449.mfc
  data/htk_r1_adg0_4/adg0_4_sr489.mfc
  data/htk_r1_adg0_4/adg0_4_sr529.mfc
  data/htk_r1_adg0_4/adg0_4_sr569.mfc
  data/htk_r1_adg0_4/adg0_4_st0019.mfc
  data/htk_r1_adg0_4/adg0_4_st0096.mfc
  data/htk_r1_adg0_4/adg0_4_st0193.mfc
  data/htk_r1_adg0_4/adg0_4_st0270.mfc
  data/htk_r1_adg0_4/adg0_4_st0358.mfc
  data/htk_r1_adg0_4/adg0_4_st0441.mfc
  data/htk_r1_adg0_4/adg0_4_st0534.mfc
  data/htk_r1_adg0_4/adg0_4_st0626.mfc
  data/htk_r1_adg0_4/adg0_4_st0724.mfc
  data/htk_r1_adg0_4/adg0_4_st0805.mfc
  data/htk_r1_adg0_4/adg0_4_st0902.mfc
  data/htk_r1_adg0_4/adg0_4_st0995.mfc
  data/htk_r1_adg0_4/adg0_4_st1089.mfc
  data/htk_r1_adg0_4/adg0_4_st1181.mfc
  data/htk_r1_adg0_4/adg0_4_st1253.mfc
  data/htk_r1_adg0_4/adg0_4_st1350.mfc
  data/htk_r1_adg0_4/adg0_4_st1440.mfc
  data/htk_r1_adg0_4/adg0_4_st1545.mfc
  data/htk_r1_adg0_4/adg0_4_st1655.mfc
  data/htk_r1_adg0_4/adg0_4_st1739.mfc
  data/htk_r1_adg0_4/adg0_4_st1823.mfc
  data/htk_r1_adg0_4/adg0_4_st1904.mfc
  data/htk_r1_adg0_4/adg0_4_st1996.mfc
  data/htk_r1_adg0_4/adg0_4_st2067.mfc
  data/htk_r1_adg0_4/adg0_4_st2165.mfc
    Replaced the earlier version of these files with new 39-feature
    versions which include the deltas and double-deltas.  These are
    from the old resource management set.
  py/coe/am/classifier.log-ref
  py/coe/am/classifier.py
    Fix Win32 test breakage by removing some FP printing from the
    logref test for this file.  In the longer run, we may need some
    way to mask these sorts of differences in logref tests as we do in
    doctests.
  py/coe/dataflow/SConscript
  py/coe/dataflow/framesynchronous.log-ref
  py/coe/dataflow/framesynchronous.py
  py/coe/htkfiles/htkscoring.py
    Replaced uses of "gaw....mfc" file in tests with adg0_4_st089 from
    the list above, since that file has some connection to the models
    used in these tests.  Since we have phoneme-level training
    transcriptions for the new files, I was able to see that there are
    indeed some significant overlaps between those references and our
    output in the logref test.




________________________________________________________________________________
Commit at 2009-01-08 17:58:44 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add new accuracy tracking processor with chart recorder output
Last revno: 327   Last revision id: kbasye1@jhu.edu-20090108204133-2lc6ymlx9zgk3f26
Last revision date: 2009-01-08 15:41:33 -0500

added:
  py/coe/am/acctrack.py
    A simple processor that tracks accuracy from a classifying process
    and can do output for display a chart recorder.  It's mostly a
    prototype.  It passes on every event it gets unchanged, so it can
    be inserted easily into networks.
modified:
  py/coe/am/SConscript

________________________________________________________________________________
Commit at 2009-01-08 15:41:33 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add relevance adaptation in simple and mixture models; add GMM-based classifier with processor wrapper
Last revno: 326   Last revision id: hsw@jhu.edu-20090108154147-0dncw4kewkx2775s
Last revision date: 2009-01-08 10:41:47 -0500

added:
  py/coe/am/classifier.log-ref
  py/coe/am/gaussian.log-ref
    New log-refs for these files, which previously only did doctests.
modified:
  projects/ddt/ddt.py
    Account for new output order from SimpleClassifier
  py/coe/am/SConscript
    Account for new log-ref testing.
  py/coe/am/classifier.py
    Added new classes ClassifierBase, AdaptingGmmClassifier, and
    AdaptingGmmClassProcessor.  The first is now the parent for
    SimpleClassifier and AdaptingGmmClassifier, so some common
    functionality was factored into this base class.  Changed the
    order of output from classification from (label, score) to (score,
    label).  Some other cleanup and new tests.
  py/coe/am/gaussian.py
    Added relevance-based adaptation to both SimpleGaussianModel and
    GaussianMixtureModel.  New functions set_relevances() and adapt()
    in both classes expose this functionality.  The relevance values
    are turned into factors RF using the formula RF = P / (P + R)
    where R is the relevance value and P is 1 for SimpleGaussianModels
    and the likelihood of each mixture in the case of mixture models.
    Updating is then done with RF * new_est + (1-RF) * old_val for all
    parameters: means, vars, and for mixtures, weights.  Note that
    this means that in mixtures, high-scoring components move less
    than low-scoring components.  Each class has as many separate
    relevance values as it has *kinds* of parameters, i.e., two values
    for means and var in the simple case, and three values for
    weights, means, and vars in the mixture case.



________________________________________________________________________________
Commit at 2009-01-08 10:41:47 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Implemented a simple energy-based endpointer.
Last revno: 325   Last revision id: hsw@jhu.edu-20090108023546-h9ty3wotnfl4wder
Last revision date: 2009-01-07 21:35:46 -0500

added:
  py/coe/signalprocessing/endpoint.py
    Initial implementation of a simple, energy-based endpointer,
    UtteranceTagger.  It emits boolean flags based on its utterance/background
    decision.
modified:
  py/coe/signalprocessing/SConscript
    Test the utterance tagger.
  py/coe/audio/asciivumeter.py
    Use the utterance tagger to underline utterance regions in the vumeter
    display. e.g. when bin/vu.sh is run.

________________________________________________________________________________
Commit at 2009-01-07 21:35:46 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Added ellipses for Windows tests in htkmfcc.py
Last revno: 324   Last revision id: hsw@jhu.edu-20090108021954-j3kl1xl5cplgl9kq
Last revision date: 2009-01-07 21:19:54 -0500

modified:
  py/coe/signalprocessing/htkmfcc.py
    Added ellipses for Windows testing....

________________________________________________________________________________
Commit at 2009-01-07 21:19:54 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Implement more features and more checking of signal processing in htkmfcc.py
Last revno: 323   Last revision id: hsw@jhu.edu-20090107153455-pk2x43b2lfb72tvn
Last revision date: 2009-01-07 10:34:55 -0500

modified:
  py/coe/signalprocessing/htkmfcc.py
    Implemented a lot of checking that the user of our MFCC is only setting HTK
    parameters that we honor.  Also require them to set a few away from their
    default values since we don't implement the default value.

    Switched to nano-second-based sampling periods.  Implemented C0 modifier for
    MFCC.  Implemented dithering. Refactored liftering object.  Implemented
    liftering the MFCC chain.

    Switch to using in-place Numpy operations where possible.

________________________________________________________________________________
Commit at 2009-01-07 10:34:55 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Added a new dataflow source, LiveAudioSource
Last revno: 322   Last revision id: hsw@hodain.net-20090107021128-7yjv19ck04o834gp
Last revision date: 2009-01-06 21:11:28 -0500

added:
  py/coe/audio/liveaudio.py
modified:
  py/coe/audio/SConscript
  py/coe/dataflow/source.py
    Added a dataflow source, LiveAudioSource.  It's very like NonBlockingSource,
    but it internally manages a live audio device that needs non-blocking
    acceptance of buffers of audio data that it pushes into the source.

modified:
  SConscript
  SConstruct
    Minor tweaks to move meta processing into SConstruct.

modified:
  templates/README.txt
  templates/SConscript
  templates/__init__.py
  templates/copyright.bat
  templates/copyright.hash
  templates/copyright.slash
  templates/copyright.txt
  templates/module.py
  templates/translation.cpp
  templates/translation.h
    Fixed copyrights to be 2009.

________________________________________________________________________________
Commit at 2009-01-06 21:11:28 Eastern Standard Time by Hugh Secker-Walker <hsw@hodain.net> from coe_win32
Message: Add ellipses to htkmfcc tests for Windows.
Last revno: 321   Last revision id: hsecker1@hltcoe95-779-30601-20090107015646-ql95mga0z8myfch7
Last revision date: 2009-01-06 20:56:46 -0500

modified:
  py/coe/signalprocessing/htkmfcc.py
    Add more ellipses to floating point values so that tests pass on
    Windows...

________________________________________________________________________________
Commit at 2009-01-06 20:56:45 -0500 by hsecker1 <hsecker1@hltcoe95-779-30601> from code
Message: Fix htkmfcc test failure on HPCC
Last revno: 320   Last revision id: hsw@jhu.edu-20090106220527-9zih1twri1r9f039
Last revision date: 2009-01-06 17:05:27 -0500

modified:
  py/coe/signalprocessing/htkmfcc.py
    Fix test failure on HPCC by adding ellipsis on a float32.
  doc/planning-2009-01-13.txt
    Added the storyboard possibility to Ken's list.

________________________________________________________________________________
Commit at 2009-01-06 17:05:27 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: First implementation of HTK MFCC front end.  Demo planning work.
Last revno: 319   Last revision id: kbasye1@jhu.edu-20090106171101-e7fy5tukh88fhvsg
Last revision date: 2009-01-06 12:11:01 -0500

modified:
  py/coe/signalprocessing/htkmfcc.py
    Implemented a substantial chunk of HTK-style style frontend, up through
    MFCCs.  Implemented as Processor code.  Runs about 20 times faster than real
    time on my Mac.
  py/coe/util/streamprocess.py
    Eliminated a level of function indirection that showed up on
    profiling the MFCC code.  Minor tweak to the SinkProcessor.
  sandbox/eventdet/eventchain.py
    Integrate the minor tweak to the SinkProcessor.
added:
  py/coe/signalprocessing/htkmfcc-parameters.txt
    Listing of (most) HTK parameters that affect signal processing.

added:
  py/coe/util/duration.py
    Reproducible formatting of floating point durations with an emphasis on
    microseconds.
modified:
  py/coe/util/SConscript
    Include duration.py in the build.
  py/coe/doctestmod.py
    Integrate new duration formating.

modified:
  doc/planning-2009-01-13.txt
    Additions from today's discussion.

________________________________________________________________________________
Commit at 2009-01-06 12:11:00 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Work on making debug printing thread-safe
Last revno: 318   Last revision id: kbasye1@jhu.edu-20090105234013-kc7k9i0dvp976084
Last revision date: 2009-01-05 18:40:13 -0500

modified:
  py/coe/util/debugprint.py
    Added locking on all operations that write into class-level
    storage in an attempt to make debug printing thread-safe.  I
    believe this should be effective, but there's no test of safety at
    this point.  Also added aliases for __enter__ and __exit__ (named
    'on' and 'off') so that instances of this class can be used
    outside the context of a 'with' statement.




________________________________________________________________________________
Commit at 2009-01-05 18:40:13 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add two new join processors and abstract for 13-Jan-2009 presentation
Last revno: 317   Last revision id: hsecker1@hltcoe95-779-30601-20081230211345-992ig7uag1m98yaj
Last revision date: 2008-12-30 16:13:45 -0500

added:
  doc/presentations/abstract-13-jan-2009.txt
    Text version of the abstract I sent to Susan for our presentation
    on 13-Jan-2009.
modified:
  py/coe/dataflow/join.py
    Added two new join processors, BlockingSlotFillingJoin and
    AccumulatingSlotFillingJoin.  The former emits tuples of events
    passed to its processing functions with one event in each tuple
    slot.  The latter accumulates events from each processing function
    and emits a tuple of tuples whenever there's at least one event
    in each slot.  Renamed get_process_function in RoundRobinJoin to
    create_process_function since that better reflects what it's
    doing and this matches the two new guys.  The new guys have a
    get_process_function that just returns the appropriate callable;
    RoundRobinJoin is missing this feature.  Improved doc in a few
    places.



________________________________________________________________________________
Commit at 2008-12-30 16:13:45 -0500 by hsecker1 <hsecker1@hltcoe95-779-30601> from code
Message: Tweak htkmfcc test to deal with floating point differences on HPCC.
Last revno: 316   Last revision id: hsw@jhu.edu-20081230210425-zhsyjrxcj5yxfibd
Last revision date: 2008-12-30 16:04:25 -0500

modified:
  py/coe/signalprocessing/htkmfcc.py
    Changed the DCT test to use allclose() since the HPCC gives a
    couple of (not so slight) differences.

________________________________________________________________________________
Commit at 2008-12-30 16:04:25 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Made live audio a part of our Python build and testing.  Lots of cleanup.
Last revno: 315   Last revision id: kbasye1@hltcoe95-779-30601-20081219232606-otkvpmyigtft6rig
Last revision date: 2008-12-19 18:26:06 -0500

Made the liveaudio on Mac be much more of a regular part of the build.  Added
some high-level utilities to demonstrate that it works.
added:
  bin/vu.sh
    Shell script runs a vertical VU meter in a terminal window.  Runs both
    asciivumeter.py and chart.py, connected through a named pipe.
  projects/chartrecorder/
  projects/chartrecorder/SConscript
  projects/chartrecorder/chart.py
    Beginings of a general purpose ascii-based display tool.
  py/coe/audio/asciivumeter.py
    Use the support for live input to generate VU meter output.
    Output text lines are suitable for use by chart.py.
modified:
  SConscript
    Include chartrecorder/SConscript in the top-level build.

  cpp/liveaudio/DCAudioFileRecorder.h
  cpp/liveaudio/DCAudioFileRecorder.cpp
  cpp/liveaudio/audio.h
  cpp/liveaudio/audio.cpp
  cpp/liveaudio/main.cpp
    Clean up of logging.  Added additional verbosity control.
  cpp/liveaudio/SConscript
    Build a shared object of the Python wrapper code.  Copy this
    object into the source tree.
  cpp/liveaudio/audiomodule.cpp
    Lots of cleanup and commentary work.  Gather some simple stats and report
    them at shared-object shutdown time (to stderr).  Added code that
    (unsuccessfully) attempts to be notified when the default audio input device
    changes.
  cpp/liveaudio/ring_buffer_threads.h
    Minor changes.  Improved commentary.
  py/coe/audio/audiobase.py
    Made this a proper player in the SCons testing world.  Now bin/scons will
    run this for a Python-based live-input test on Mac OS x.
  py/coe/audio/SConscript
    Made some code Darwin dependent.  Added dependency of audiobase on the audio
    shared-object.

added:
  py/coe/signalprocessing/htkmfcc.py
    Most of the low-level pieces for doing HTK signal processing with Numpy.
    These are currently exposed as functions.  Wrapping this in processor
    elements is the next step.  There are some useful general purpose Python
    utilities in here too.
modified:
  py/coe/signalprocessing/SConscript
    Build and test htkmfcc.py
  py/coe/signalprocessing/toychannel.py
    A few more tests and code tweaks.

modified:
  cpp/floatutils/SConscript
    Make sure shared-object file is copied back into source tree.
  py/coe/util/floatutils.py
    Make sure coe is imported before _floatutils so that floatutils.py can run
    from emacs.
  py/coe/util/SConscript
    Simplified setting up the dependency on _floatutil.so.

modified:
  sandbox/eventdet/SConscript
    Remove entry for a file that was deleted earlier.
  templates/module.py
    Fix whitespace at ends of Author: and Description: lines.

________________________________________________________________________________
Commit at 2008-12-19 18:26:06 -0500 by kbasye1 <kbasye1@hltcoe95-779-30601> from code1
Message: Add HTK feature files derived from digit wavefiles in sandbox/eventdet
Last revno: 314   Last revision id: hsw@jhu.edu-20081219211650-njwmn2xowi17yi8e
Last revision date: 2008-12-19 16:16:50 -0500

removed:
  sandbox/eventdet/simpevent.py
added:
  sandbox/eventdet/config.addDA
  sandbox/eventdet/config.mfcc0
  sandbox/eventdet/digits.scp
  sandbox/eventdet/feats0/
  sandbox/eventdet/feats0/Eight001.mfcc
  sandbox/eventdet/feats0/Five001.mfcc
  sandbox/eventdet/feats0/Four001.mfcc
  sandbox/eventdet/feats0/Nine001.mfcc
  sandbox/eventdet/feats0/One001.mfcc
  sandbox/eventdet/feats0/README
  sandbox/eventdet/feats0/Seven001.mfcc
  sandbox/eventdet/feats0/Six001.mfcc
  sandbox/eventdet/feats0/Three001.mfcc
  sandbox/eventdet/feats0/Two001.mfcc
  sandbox/eventdet/feats0/Zero001.mfcc
  sandbox/eventdet/make_htk_feat_data.py
    Created HTK feature files from our existing digit wave files.  I
    need to clean this up and move some things to the data directory,
    but I'm out of time for now.


________________________________________________________________________________
Commit at 2008-12-19 16:16:50 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: More planning work.
Last revno: 313   Last revision id: hsw@jhu.edu-20081219205903-m9mtq2d7nttbb28r
Last revision date: 2008-12-19 15:59:03 -0500

modified:
  doc/planning-2009-01-13.txt
    More planning work by Ken and Hugh.

________________________________________________________________________________
Commit at 2008-12-19 15:59:02 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: More planning work.
Last revno: 312   Last revision id: hsw@jhu.edu-20081218214418-j2omf9mpbw0k0hmv
Last revision date: 2008-12-18 16:44:18 -0500

modified:
  doc/planning-2009-01-13.txt
    Additions from a planning call with Mary.

________________________________________________________________________________
Commit at 2008-12-18 16:44:18 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: Planning work.  Tweaks to bin/snew output.
Last revno: 311   Last revision id: hsw@jhu.edu-20081218193835-hy6275jqckorxn8k
Last revision date: 2008-12-18 14:38:35 -0500

modified:
  doc/planning-2009-01-13.txt
    Added brainstorming effort by Ken and Hugh

  bin/bzrtool.py
    Minor formatting changes to bin/snew output.

________________________________________________________________________________
Commit at 2008-12-18 14:38:35 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: Merged in changes from Ken
Last revno: 310   Last revision id: hsw@jhu.edu-20081218193500-i3w42k01dia2a9qq
Last revision date: 2008-12-18 14:35:00 -0500

Merged in Ken's changes.
pending merges:
  kbasye1 2008-12-17 Fix warning in snew output on HPCC machines
    Ken Basye 2008-12-17 Fix Windows test breakage due to my floatutil changes around rev. 302
    kbasye1 2008-12-17 Add comment flagging spurious warning in bin/snew on HPCC machines
    Ken Basye 2008-12-16 Rewrite snew using bzrlib
    Ken Basye 2008-12-16 Fix minor font bug in presentation
modified:
  bin/bzrtool.py
  bin/snew
  changes.txt
  cpp/floatutils/testfloatutils.cpp
  cpp/floatutils/testfloatutils.log-ref
  doc/presentations/IntroducingHltCoeToolkitPt2-2008-12-16.ppt
  py/coe/util/floatutils.py

________________________________________________________________________________
Commit at 2008-12-18 14:34:59 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: Added a new brainstorming doc.
Last revno: 309   Last revision id: hsw@jhu.edu-20081216145110-5aibvzivruucr7s3
Last revision date: 2008-12-16 09:51:10 -0500

added:
  doc/planning-2009-01-13.txt
    Brainstorming for the 2009-01-13 quarterly report.

________________________________________________________________________________
Commit at 2008-12-17 20:42:54 -0500 by kbasye1 <kbasye1@hltcoe95-779-30601> from code1
Message: Fix warning in snew output on HPCC machines
Last revno: 313   Last revision id: kbasye1@jhu.edu-20081217212318-cm5jugvmnpnwjdfy
Last revision date: 2008-12-17 16:23:18 -0500

modified:
  bin/bzrtool.py
    Fixed warning issued by snew on HPCC platform, which was
    apparently caused by not having a logging handler set up that a
    certain function was expecting.  So I set one up, and now it's
    happy.


________________________________________________________________________________
Commit at 2008-12-17 16:23:18 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Fix Windows test breakage due to my floatutil changes around rev. 302
Last revno: 312   Last revision id: kbasye1@hltcoe95-779-30601-20081217053039-owtseg15emhpwlnh
Last revision date: 2008-12-17 00:30:39 -0500

modified:
  cpp/floatutils/testfloatutils.cpp
  cpp/floatutils/testfloatutils.log-ref
  py/coe/util/floatutils.py
    Fix broken Windows tests, which I broke with my "Allow subnormal
    floats in FP/string conversion; change some asserts to raises"
    checkin.  The problem is that the number I constructed to test
    conversion of subnormals isn't classified as subnormal on Windows.
    Indeed, it's not clear there is *any* double that Windows will
    classify as FP_SUBNORMAL.  This is annoying, but probably makes it
    even more important to have made the earlier change, since it
    might have led to more troublesome platform differences.  I
    tweaked the tests in testfloatutils.cpp and in floatutils.py to
    account for the Windows behavior.  If we ever find a number that
    all platforms will classify as FP_SUBNORMAL it would be nice to
    clean this up a bit.

________________________________________________________________________________
Commit at 2008-12-17 00:30:39 -0500 by kbasye1 <kbasye1@hltcoe95-779-30601> from code1
Message: Add comment flagging spurious warning in bin/snew on HPCC machines
Last revno: 311   Last revision id: kbasye1@jhu.edu-20081217045718-rczwscm8fwk5k3xw
Last revision date: 2008-12-16 23:57:18 -0500

modified:
  bin/bzrtool.py
    Added a comment indicating the call into bzrlib that's causing a
    warning in bin/snew; I'd like to fix this but don't have time to
    chase it down further right now.


________________________________________________________________________________
Commit at 2008-12-16 23:57:17 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Rewrite snew using bzrlib
Last revno: 310   Last revision id: kbasye1@jhu.edu-20081216145402-pykeed5xi4qp8vq1
Last revision date: 2008-12-16 09:54:02 -0500

modified:
  bin/bzrtool.py
  bin/snew
    Rewrote snew using bzrlib, so almost all of it is now in
    bzrtool.py.  snew is now the usual shell script that simply invokes
    'python bzrtool.py snew'.  I tried this out in an installation
    that was way out of date and got many screenfuls of diff output,
    which made me wish for a pager.  I figured out how to do that (for
    posterity, pydoc.pager(text) does a fine job) but since it uses
    less, the results disappear from the screen when you quit the
    pager, which I thought was worse, so I went back to just printing
    to sys.stdout.  It prints something reassuring when you're up to
    date.  Suggestions for improving the output are welcome.
    Note that there's no snew.bat (yet) as I ran into bugs in trying
    to get bzrlib to work correctly under Windows :->.



________________________________________________________________________________
Commit at 2008-12-16 09:54:02 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Fix minor font bug in presentation
Last revno: 309   Last revision id: hsw@jhu.edu-20081216145110-5aibvzivruucr7s3
Last revision date: 2008-12-16 09:51:10 -0500

modified:
  doc/presentations/IntroducingHltCoeToolkitPt2-2008-12-16.ppt
    Minor font fix.


________________________________________________________________________________
Commit at 2008-12-16 09:51:10 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: Integrate changes from Ken and Hugh
Last revno: 308   Last revision id: hsw@jhu.edu-20081216142516-5p3tblxsoq8sdo3m
Last revision date: 2008-12-16 09:25:16 -0500

modified:
  doc/presentations/IntroducingHltCoeToolkitPt2-2008-12-16.ppt
    Integrate changes from Ken and Hugh reviewing.

________________________________________________________________________________
Commit at 2008-12-16 09:25:15 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_doc
Message: Work on sources in presentation
Last revno: 307   Last revision id: kbasye1@jhu.edu-20081216023928-kdns2luesjwykm47
Last revision date: 2008-12-15 21:39:28 -0500

modified:
  doc/presentations/IntroducingHltCoeToolkitPt2-2008-12-16.ppt
    Cleaned up sources slides.  Moved them near the beginning.
    Fixed signal processing slides to be integrated with sources
    slides.

________________________________________________________________________________
Commit at 2008-12-15 21:39:28 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: More changes to presentation for Intro Pt. 2
Last revno: 306   Last revision id: kbasye1@jhu.edu-20081215213527-aj3e56eliriq2w1a
Last revision date: 2008-12-15 16:35:27 -0500

modified:
  doc/presentations/IntroducingHltCoeToolkitPt2-2008-12-16.ppt
    Integrating new slides from Hugh on signal processing and sources.
    Added three new slides with images of sourcesa to the end.  A
    small change to the dataflow library slide tries to unify
    nomenclature about sources, but there's still some overlap to be
    resolved.


________________________________________________________________________________
Commit at 2008-12-15 16:35:27 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Changes to presentation for Intro Pt. 2
Last revno: 305   Last revision id: kbasye1@jhu.edu-20081215200040-truvm9goz09su0tp
Last revision date: 2008-12-15 15:00:40 -0500

modified:
  doc/presentations/IntroducingHltCoeToolkitPt2-2008-12-16.ppt
    Improve Dataflow library slide, move upcoming slides to the end.


________________________________________________________________________________
Commit at 2008-12-15 15:00:40 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: New presentation for 2008-12-16 and list of third-party software
Last revno: 304   Last revision id: kbasye1@jhu.edu-20081212002703-tonkfvbz4u4xtt6a
Last revision date: 2008-12-11 19:27:03 -0500

added:
  doc/presentations/IntroducingHltCoeToolkitPt2-2008-12-16.ppt
    First iteration of a presentation to complete the presentation of
    2008-12-2.  This file was built from the last 24 or so slides of
    the original 12-2 presentation plus a few other slides, some new
    additions and minor changes.
  doc/thirdParty.txt
    First version of a file with a list of third-party software, which
    in this case means not written in-house.  We're going to need to
    keep this up to date, so if you introduce new code or libraries
    into the toolkit that were written elsewhere, or if you cause the
    toolkit to be dependent on having something new installed, or
    conversely if you remove such code or dependencies, please edit
    this file accordingly.


________________________________________________________________________________
Commit at 2008-12-11 19:27:03 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Added two join processor elements
Last revno: 303   Last revision id: kbasye1@hltcoe95-779-30601-20081211211930-jgyggam3ijyv00bk
Last revision date: 2008-12-11 16:19:30 -0500

added:
  py/coe/dataflow/join.py
    Implemented two simple join processors for dataflow.
    SerializingJoin takes events from any number of sources and sends
    them along to a single sendee in the order in which they were
    received.  Its only job is to manage locking so that multiple
    threads can call its process() function.   RoundRobinJoin
    synchronizes a fixed set of possibly asynchronous sources,
    enforcing turn-taking between the sources, who must "preregister"
    before processing starts.  Undoubtedly this is just the beginning
    of these types of elements.
modified:
  py/coe/dataflow/SConscript
    Added join.py.
  py/coe/dataflow/source.py
    Fixed a couple typos.


________________________________________________________________________________
Commit at 2008-12-11 16:19:30 -0500 by kbasye1 <kbasye1@hltcoe95-779-30601> from code0
Message: Minor fixes to ScpProcessor
Last revno: 302   Last revision id: kbasye1@hltcoe95-779-30601-20081211210723-m0519twvbu15reya
Last revision date: 2008-12-11 16:07:23 -0500

modified:
  projects/htk_test/test0.py
  py/coe/htkfiles/htkscp.py
    Swapped argument order in ScpProcessor __init__ function and
    improved docstring.



________________________________________________________________________________
Commit at 2008-12-11 16:07:23 -0500 by kbasye1 <kbasye1@hltcoe95-779-30601> from code0
Message: Allow subnormal floats in FP/string conversion; change some asserts to raises
Last revno: 301   Last revision id: kbasye1@jhu.edu-20081211041002-1hn4xe1sklcunhhr
Last revision date: 2008-12-10 23:10:02 -0500

modified:
  cpp/floatutils/floatutils.cpp
  cpp/floatutils/testfloatutils.cpp
  py/coe/util/floatutils.py
    Fix some aspects of float/readable string utilities, removing some
    asserts in favor of raises.  In addition, we now allow
    conversion of subnormal floating point numbers, that is, numbers
    with the smallest possible exponent which are still not actually
    0.0.  Fortified tests considerably.



________________________________________________________________________________
Commit at 2008-12-10 23:10:02 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Fix broken htkscp.py tests, create new top-level data directory
Last revno: 300   Last revision id: kbasye1@jhu.edu-20081210223640-wfish5teg3387002
Last revision date: 2008-12-10 17:36:40 -0500

added:
  data/
  data/htk_r1_adg0_4/
  data/htk_r1_adg0_4/adg0_4_sr009.mfc
  data/htk_r1_adg0_4/adg0_4_sr049.mfc
  data/htk_r1_adg0_4/adg0_4_sr089.mfc
  data/htk_r1_adg0_4/adg0_4_sr129.mfc
  data/htk_r1_adg0_4/adg0_4_sr169.mfc
  data/htk_r1_adg0_4/adg0_4_sr209.mfc
  data/htk_r1_adg0_4/adg0_4_sr249.mfc
  data/htk_r1_adg0_4/adg0_4_sr289.mfc
  data/htk_r1_adg0_4/adg0_4_sr329.mfc
  data/htk_r1_adg0_4/adg0_4_sr369.mfc
  data/htk_r1_adg0_4/adg0_4_sr409.mfc
  data/htk_r1_adg0_4/adg0_4_sr449.mfc
  data/htk_r1_adg0_4/adg0_4_sr489.mfc
  data/htk_r1_adg0_4/adg0_4_sr529.mfc
  data/htk_r1_adg0_4/adg0_4_sr569.mfc
  data/htk_r1_adg0_4/adg0_4_st0019.mfc
  data/htk_r1_adg0_4/adg0_4_st0096.mfc
  data/htk_r1_adg0_4/adg0_4_st0193.mfc
  data/htk_r1_adg0_4/adg0_4_st0270.mfc
  data/htk_r1_adg0_4/adg0_4_st0358.mfc
  data/htk_r1_adg0_4/adg0_4_st0441.mfc
  data/htk_r1_adg0_4/adg0_4_st0534.mfc
  data/htk_r1_adg0_4/adg0_4_st0626.mfc
  data/htk_r1_adg0_4/adg0_4_st0724.mfc
  data/htk_r1_adg0_4/adg0_4_st0805.mfc
  data/htk_r1_adg0_4/adg0_4_st0902.mfc
  data/htk_r1_adg0_4/adg0_4_st0995.mfc
  data/htk_r1_adg0_4/adg0_4_st1089.mfc
  data/htk_r1_adg0_4/adg0_4_st1181.mfc
  data/htk_r1_adg0_4/adg0_4_st1253.mfc
  data/htk_r1_adg0_4/adg0_4_st1350.mfc
  data/htk_r1_adg0_4/adg0_4_st1440.mfc
  data/htk_r1_adg0_4/adg0_4_st1545.mfc
  data/htk_r1_adg0_4/adg0_4_st1655.mfc
  data/htk_r1_adg0_4/adg0_4_st1739.mfc
  data/htk_r1_adg0_4/adg0_4_st1823.mfc
  data/htk_r1_adg0_4/adg0_4_st1904.mfc
  data/htk_r1_adg0_4/adg0_4_st1996.mfc
  data/htk_r1_adg0_4/adg0_4_st2067.mfc
  data/htk_r1_adg0_4/adg0_4_st2165.mfc
    These are 40 utterances used as part of the HTK resource management
    model training recipe.
modified:
  py/coe/htkfiles/htkscp.py
    Fixed tests in this file which previously only passed on one of my
    machines :-<.  In order to make this work, I've created a new
    directory called 'data' at the top level of the project.  This may
    help force the issue of building real support for a data
    directory, an item I added to the long-term todo list in a
    previous checkin.  Currently, the htkscp.py tests get access to
    needed audio data in the source tree.  The new data directory
    doesn't yet have a SConscript nor does the htkfiles SConscript
    refer to these files at this point, so this is work in progress.




________________________________________________________________________________
Commit at 2008-12-10 17:36:40 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: graphtools fixes and additions; move htkscp.py to htkfiles
Last revno: 299   Last revision id: kbasye1@jhu.edu-20081209171531-1ryohqx9jfz2plmc
Last revision date: 2008-12-09 12:15:31 -0500

added:
  py/coe/htkfiles/ind_trn109.scp
    This is used in the test of htkscp.py, please see below.  Note
    that it's otherwise useless as it uses full paths that refer to
    locations on my machine.
renamed:
  projects/htk_test/htkscp.py => py/coe/htkfiles/htkscp.py
    A very simple processor for extracting blocks of audio data from
    a file consisting of a list of audio files.
modified:
  doc/longtermThingsToDo.txt
    Added suggestions for making a SimpleAcousticModel class and
    supporting a data directory.
  projects/htk_test/test0.py
    Rewrote build_model_lattice since it can now do most of the work
    with get_line_graph (please see below).  Eliminated final traces
    of loading HTK mmf files and other minor cleanup.
  py/coe/graph/graphtools.py
    Fixed initialization of SetGraphBuilder to correctly fill in its
    two dictionaries in case clients pass in existing graphs, and
    added checks that the graphs passed in are legal from the SetGraph
    point of view, i.e., that they have unique node labels and that
    arcs between the same two nodes also have unique labels.  Added
    tests of these changes.  Added get_line_graph() method to
    FrozenGraph, which constructs a dual graph (sometimes called the
    edge dual or interchange graph).
  py/coe/htkfiles/SConscript
    Added htkscp.py and its associated data file.
  py/coe/htkfiles/htkscp.py
    Whitespace changes.



________________________________________________________________________________
Commit at 2008-12-09 12:15:31 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Start saving model dicts with acoustic models, bug fixes in yamldata/coetext
Last revno: 298   Last revision id: kbasye1@hltcoe95-779-30601-20081209145235-dguup2nb4gquj1am
Last revision date: 2008-12-09 09:52:35 -0500

added:
  projects/htk_test/hmm0_r1.models
    A version of the hmm0_rl models but now in our format.  I got this
    from the new test added in hmm_mgr.py; please see below.
modified:
  projects/htk_test/test0.py
    Changed this test so that it expects to begin with one of our
    model files rather than an HTK model file.  This will allow me to
    iteratively train a series of models, ala the R1 recipe for HTK.
  py/coe/am/SConscript
    Added a reference to monophones.mmf in the htkfiles directory
    since hmm_mgr.py now uses that file in tests.  But note that this
    is currently superfluous since hmm_mgr.py doesn't use the copy in
    the build directory anyway.
  py/coe/am/hmm_mgr.py
    Changed write_acoustic_model and read_acoustic_model to now also
    write and read the model dictionary used to map from symbols to
    HMM model indices in the HmmMgr.  We are beginning to converge on
    a structure for acoustic models - see also the real_model class in
    framesynchronous.py.  Also added the ability to specify log_domain
    operation when loading a file; we may want to make this a somewhat
    more mutable attribute or perhaps just make it the only way.  Also
    added a round-trip test of model writing.
  py/coe/textdata/coetext.py
    Fixed a bug in read_list where it was allowing token counts to be
    higher than the callers count; now the check is exact.
  py/coe/textdata/yamldata.py
    Fixed a bug that was causing single tokens to be returned as
    strings rather than as one-element tuples; this caused other code
    to unpack the string and use the characters as the tuple elements
    in the usual confusing way.  Also reworked YamldataReader error
    handling a bit, removing the last few asserts in the __init__
    function and putting the filename, when we have one, into the
    ValueError we raise.  I added test to catch all the new errors,
    and moved all the doctest code that tests errors to the docstring
    of a new function, yamldata_reader_errors().  This function has no
    body; it exists only to have the docstring.  Still, being able to
    type 'help(yamldata_reader_errors)' and get that string seems very
    handy.  We might want to spread this idiom around.



________________________________________________________________________________
Commit at 2008-12-09 09:52:34 -0500 by kbasye1 <kbasye1@hltcoe95-779-30601> from code0
Message: Add ability to specify input files on the command line of test0.py
Last revno: 297   Last revision id: hsw@jhu.edu-20081204061221-hqh9g46hy84b8fvk
Last revision date: 2008-12-04 01:12:21 -0500

modified:
  projects/htk_test/test0.py
    Add ability to specify some filenames on the command line where
    they used to be hard-coded.




________________________________________________________________________________
Commit at 2008-12-04 01:12:20 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Removed some bogus debugging code.
Last revno: 296   Last revision id: hsw@jhu.edu-20081204060845-5dz4ao200m37dwkx
Last revision date: 2008-12-04 01:08:45 -0500

modified:
  py/coe/dataflow/framesynchronous.py
    Removed a bogus doctest I'd put in while analyzing a source.py issue.

________________________________________________________________________________
Commit at 2008-12-04 01:08:45 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: First working version of Processor-based decoder.
Last revno: 295   Last revision id: hsw@jhu.edu-20081204011124-q80t3c2qrblaxn4h
Last revision date: 2008-12-03 20:11:24 -0500

modified:
  py/coe/dataflow/framesynchronous.py
    First working implementation of Processor-based decoder.  Same results
    as frame_synchronous_decode().
  py/coe/dataflow/source.py
    Added wait_iter_stopped() method to IteratorSource which does a blocking wait
    for the iterator to raise StopIteration.

________________________________________________________________________________
Commit at 2008-12-03 20:11:23 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Work on a Processor-based decoder
Last revno: 294   Last revision id: kbasye1@jhu.edu-20081203224507-ue4wnw2108pbs2ql
Last revision date: 2008-12-03 17:45:07 -0500

modified:
  py/coe/dataflow/framesynchronous.py
    Started work on FrameSynchronousProcesser, a Processor-based
    frame-synchronous decoder.  Made real_model's epsilon_user_data
    be a member variable rather than a class variable because it
    gets mutated by each instance!  Other cleanup in real_model.
    Added real_example2() which exposes a weakness in the
    IterableSource interface that I'll have to fix before moving
    further on the FrameSynchronousProcesser.

________________________________________________________________________________
Commit at 2008-12-03 17:45:07 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add four images from 2-December-2008 presentation
Last revno: 293   Last revision id: hsw@jhu.edu-20081203211932-9pfx4iuvf5xnpic5
Last revision date: 2008-12-03 16:19:32 -0500

added:
  doc/images/AlignLattice3.png
  doc/images/AlignLattice4.png
  doc/images/EdgeDualAfter.png
  doc/images/EdgeDualBefore.png
    Add some more images used in slides for the 2-Dec-2008
    presentation, the first two are from the test in alignment.py; the
    second two are before and after images from the edge-dual
    operation, which will soon be part of a test of that code.


________________________________________________________________________________
Commit at 2008-12-03 16:19:32 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Fix a bug in IteratorSource
Last revno: 292   Last revision id: hsw@jhu.edu-20081203195328-6gy3q98d9b7x8pzu
Last revision date: 2008-12-03 14:53:28 -0500

modified:
  py/coe/dataflow/source.py
    Fixed a bug in IteratorSource whereby in a Stopped source, setting the
    real-time interval to a valid time interval would cause the iterator to be
    pulled on.  Added more tests; also removed some unnecessary wait() calls in
    tests.

________________________________________________________________________________
Commit at 2008-12-03 14:53:28 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Improved IteratorSource interface
Last revno: 291   Last revision id: hsw@jhu.edu-20081202145121-dtpex2xhyo1hqlrk
Last revision date: 2008-12-02 09:51:21 -0500

modified:
  py/coe/dataflow/source.py
    Minor changes to the interface of IteratorSource.  Now the set_iter() method
    returns the iterator that was being used.  Added a .is_iter_stopped property
    to query if the current iterator has raised StopIteration.  Added new tests
    of these semantics.  Lengthened the base_interval for doctests to 1/8 of a
    second in the hope that this will avoid occasional failures on Windows.  For
    clarity, switched to named argument syntax to some other constructors in the
    tests.

________________________________________________________________________________
Commit at 2008-12-02 09:51:21 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Minor tweaks to layout of presentation.
Last revno: 290   Last revision id: hsw@jhu.edu-20081202142947-yhl7una6scpyh0y1
Last revision date: 2008-12-02 09:29:47 -0500

modified:
  doc/presentations/IntroducingHltCoeToolkit-2008-12-02.ppt
    Minor tweaks to positions of text boxes.

________________________________________________________________________________
Commit at 2008-12-02 09:29:47 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Added bin/demo1.sh
Last revno: 289   Last revision id: hsw@jhu.edu-20081202142511-b2j4f2clywmcj6ly
Last revision date: 2008-12-02 09:25:11 -0500

added:
  bin/demo1.sh
    A demo, runs the framesynchronous.py logreftest

________________________________________________________________________________
Commit at 2008-12-02 09:25:11 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Added merged presentation.
Last revno: 288   Last revision id: kbasye1@jhu.edu-20081202141116-bdqi16hnq36goqf5
Last revision date: 2008-12-02 09:11:16 -0500

modified:
  doc/presentations/Outreach-2008-12-02-HSW.ppt
    Modifications prior to merge.
added:
  doc/presentations/IntroducingHltCoeToolkit-2008-12-02.ppt
    Merge of two Outreach documents.

________________________________________________________________________________
Commit at 2008-12-02 09:11:16 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add some notes to presentation
Last revno: 287   Last revision id: hsw@jhu.edu-20081202025415-jg5s4sxet7oyvti1
Last revision date: 2008-12-01 21:54:15 -0500

modified:
  doc/presentations/Outreach-2008-12-02-KJB.ppt


________________________________________________________________________________
Commit at 2008-12-01 21:54:15 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Presentation editing
Last revno: 286   Last revision id: kbasye1@jhu.edu-20081202023056-9roylpgr374mdp2i
Last revision date: 2008-12-01 21:30:56 -0500

modified:
  doc/presentations/Outreach-2008-12-02-HSW.ppt
    Editing work.
  doc/images/HmmCodeInEmacs.png
  doc/images/HmmDotWindow.png
    Revised versions of these graphics.

________________________________________________________________________________
Commit at 2008-12-01 21:30:56 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: More work on presentation; add extra equality testing in testbwt.py
Last revno: 285   Last revision id: hsw@jhu.edu-20081201234326-nugeorg4ydrgw6l7
Last revision date: 2008-12-01 18:43:26 -0500

modified:
  doc/presentations/Outreach-2008-12-02-KJB.ppt
    Trimmed some slides that are now in Hugh's presentation and did a
    bunch of other cleanup.
  py/coe/am/testbwt.log-ref
  py/coe/am/testbwt.py
    Added testing of HMMs using m1 == m2 in addition to existing
    string comparison.  The results show that 2 of 3 comparisons are
    equal in this more strigent way (down to the bit), but the third
    comparison isn't (note that all string comparisons are equal).


________________________________________________________________________________
Commit at 2008-12-01 18:43:25 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Work on presentation.
Last revno: 284   Last revision id: kbasye1@jhu.edu-20081201234023-d5s1k8y0slsysum7
Last revision date: 2008-12-01 18:40:23 -0500

modified:
  doc/presentations/Outreach-2008-12-02-HSW.ppt
    More changes and additions, cleanup with Ken.

________________________________________________________________________________
Commit at 2008-12-01 18:40:23 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Replace SimpleHmm.png in images file with a modern version and rename that file
Last revno: 283   Last revision id: kbasye1@jhu.edu-20081201223220-j0wzty7302g112vx
Last revision date: 2008-12-01 17:32:20 -0500

renamed:
  doc/images/SimpleHmm.png => doc/images/HmmDotWindow.png
modified:
  doc/images/HmmDotWindow.png
    Replaced the image with a more modern one using new HMM drawing
    defaults and renamed the file to reflect that fact that this image
    shows a dot window with an HMM in it and not just an HMM.


________________________________________________________________________________
Commit at 2008-12-01 17:32:19 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Still more presentation work
Last revno: 282   Last revision id: hsw@jhu.edu-20081201222228-5ihep36k2hvk3n6w
Last revision date: 2008-12-01 17:22:28 -0500

modified:
  doc/presentations/Outreach-2008-12-02-KJB.ppt
  projects/htk_test/test0.py
  py/coe/util/alignment.py
    Further tests related to generating interesting graphs and another
    update of the PPT file.


________________________________________________________________________________
Commit at 2008-12-01 17:22:28 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Work on presentation.  Minor changes to doctest supporting the presentation.
Last revno: 281   Last revision id: kbasye1@jhu.edu-20081201160739-jxfqy5imntfkne4l
Last revision date: 2008-12-01 11:07:39 -0500

modified:
  doc/presentations/Outreach-2008-12-02-HSW.ppt
    Substantial additions.
  py/coe/dataflow/composecfg.py
    Removed commented-out code.  Added an example for the presentation.
  py/coe/dataflow/source.py
    Reformated commentary.  Fixed doctest code so that epydoc formats
    things right.
  py/coe/graph/graphtools.py
    Changed "link" to "arc" in various places.  Added a missing period in some
    doctest prose.
  py/coe/signalprocessing/toychannel.py
    Changes in order to get a nice plot for the presentation.

________________________________________________________________________________
Commit at 2008-12-01 11:07:39 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: More presentation work
Last revno: 280   Last revision id: kbasye1@jhu.edu-20081130220443-6ko7l1mdsg2cjjpe
Last revision date: 2008-11-30 17:04:43 -0500

added:
  projects/htk_test/labeledData.dot
    A hand-created dot file showing a processor chain for generating
    LabeledDataEvents.
modified:
  doc/presentations/Outreach-2008-12-02-KJB.ppt
    Added some slides and pictures.
  projects/htk_test/htkscp.py
    Improved commentary.


________________________________________________________________________________
Commit at 2008-11-30 17:04:43 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Change state labels on dot images of HMMs; update images and presentation
Last revno: 279   Last revision id: kbasye1@jhu.edu-20081130203908-4b6qy1zpmxxhwvup
Last revision date: 2008-11-30 15:39:08 -0500

modified:
  doc/images/CyclicHmm.png
  doc/images/DiamondTrainingGraphCompact.png
  doc/images/DiamondTrainingGraphCompactDetail.png
  doc/images/DiamondTrainingGraphExact.png
  doc/images/DiamondTrainingGraphExactConvertedToHmm.png
  doc/images/DiamondTrainingGraphExactDetail.png
  doc/images/EpsilonHmmArity2.png
  doc/images/ForwardHmm4StatesSkip1Compact.png
  doc/images/ForwardHmm4StatesSkip1Exact.png
  doc/presentations/Outreach-2008-12-02-KJB.ppt
  py/coe/am/bwtrainer.log-ref
  py/coe/am/hmm.py
    I realized I wanted a different set of state labels for HMMs
    everywhere, so I changed the code, rebuilt all the images, and
    modified the presentation to use the new images.  This went
    surprisingly quickly.


________________________________________________________________________________
Commit at 2008-11-30 15:39:07 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add PPT presentation for 2-Dec-2008 and some images; add some new tests
Last revno: 278   Last revision id: kbasye1@jhu.edu-20081128152111-83sytpcusqjl3k9o
Last revision date: 2008-11-28 10:21:11 -0500

added:
  doc/images/CyclicHmm.png
  doc/images/DiamondTrainingGraphCompact.png
  doc/images/DiamondTrainingGraphCompactDetail.png
  doc/images/DiamondTrainingGraphExact.png
  doc/images/DiamondTrainingGraphExactConvertedToHmm.png
  doc/images/DiamondTrainingGraphExactDetail.png
  doc/images/EpsilonHmmArity2.png
  doc/images/ForwardHmm4StatesSkip1Compact.png
  doc/images/ForwardHmm4StatesSkip1Exact.png
  doc/presentations/Outreach-2008-12-02-KJB.ppt
    Added early version of outreach presentation and associated images.
modified:
  py/coe/am/bwtrainer.py
    Duplicate one test to use compact Hmms; experiment with display
    globals.
  py/coe/am/hmm.py
    Extended testing a bit, mostly to make some pictures.
  py/coe/am/hmm_mgr.py
    Extended testing a bit, mostly to make some pictures.  Fixed a bug
    in get_epsilon_models() and added a test of it.





________________________________________________________________________________
Commit at 2008-11-28 10:21:11 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Added dot output for TrainingGraph; changed dot interface in Hmm; other minor changes
Last revno: 277   Last revision id: hsw@jhu.edu-20081126210830-3h3829d8derl05oz
Last revision date: 2008-11-26 16:08:30 -0500

modified:
  projects/htk_test/test0.py
    Added file-writing to this test, and other minor changes.
  py/coe/am/bwtrainer.log-ref
    Include test of dot generation.
  py/coe/am/bwtrainer.py
    Added functionality to write dot graphs from TrainingGraph objects
    and to display them.  Converted one test to do this in logref
    testing.
  py/coe/am/hmm.py
    Improved default visualization of Hmms by making input and output
    states more distinct.  Changed interface to dot-production to
    support use by clients of Hmm who want to draw themselves and need
    a way to draw Hmms as subgraphs; we now provide the dot node names
    of the input and output states.


________________________________________________________________________________
Commit at 2008-11-26 16:08:30 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Added to things to do.  Turn on matplotlib display in toychannel.
Last revno: 276   Last revision id: hsw@jhu.edu-20081126170018-gzu7yowswkayrwvu
Last revision date: 2008-11-26 12:00:18 -0500

modified:
  doc/longtermThingsToDo.txt
    Added some items that came to mind while working on the presentation.
  py/coe/signalprocessing/toychannel.py
    Turn on the display facility now that matplotlib builds again.

________________________________________________________________________________
Commit at 2008-11-26 12:00:17 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Work on outreach presentation.

Last revno: 275   Last revision id: kbasye1@jhu.edu-20081125234202-a5kknht78fyup5vt
Last revision date: 2008-11-25 18:42:02 -0500

added:
  doc/presentations/Outreach-2008-12-02-HSW.ppt
    Start of my contribution to next Monday's presentation slide set.
modified:
  doc/brainstorming-2008-11-25.txt
    Some minor tweaks.
  py/coe/dataflow/composecfg.py
    Refactored CFG exploration code to be a generator, so useful on
    regular and cfg grammars.
  py/coe/dataflow/framesynchronous.py
    Rewording of some commentary before cutting and pasting code
    into the presentation.
  py/coe/signalprocessing/toychannel.py
    Work on improving Numpy usage.

________________________________________________________________________________
Commit at 2008-11-25 18:42:02 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Further fixes to log-domain processing and work in progress on a real training example
Last revno: 274   Last revision id: hsw@jhu.edu-20081125181320-6k183cb8w1jqr7qx
Last revision date: 2008-11-25 13:13:20 -0500

added:
  projects/htk_test/
  projects/htk_test/byrne.README
  projects/htk_test/hmm0_r1.mmf
  projects/htk_test/htkscp.py
  projects/htk_test/ind_trn109_short.scp
  projects/htk_test/ind_trn109_vshort.scp
  projects/htk_test/mono_short.mlf
  projects/htk_test/mono_vshort.mlf
  projects/htk_test/test0.py
    A first test of real embedded training.  This is work in progress,
    and Scons doesn't know about this directory yet, so nothing's
    tested.  There's code in here that belongs elsewhere as it will be
    generally useful.  test0.py assumes the existence of the audio
    files listed in the scp file used, which I have not included in
    this checkin, so others probably won't be able to do much of
    anything with this yet.
modified:
  doc/outreachPlanning.txt
    Minor reordering.
  py/coe/am/bwtrainer.log-ref
    Account for changes in debug output, no other differences.
  py/coe/am/bwtrainer.py
    Add some debug output; other minor changes.
  py/coe/am/gaussian.py
    Use 128-bit floating point temporary in an attempt to avoid
    underflow when multiplying many variances together.
  py/coe/am/hmm.py
    Fixed a small bug by changing order of operations.  Other minor
    changes.  Removed now-unused function; improve debug output and
    some comments.
  py/coe/am/hmm_mgr.py
    Add the ability to construct epsilon Hmms which use the log domain
    for their work.
  py/coe/am/modelmgr.py
    We now floor variances just above 0 before trying to set them in
    models.  This was necessary because certain training was resulting
    in 0 variances which was causing grief later.  Note that we
    currently only do this for diagonal covariance - we may want to
    add something similar for full covariance and we may further want
    to move this behavior into gaussian.py.
  py/coe/htkfiles/htkmmf.py
    Added the ability to create Hmms which do their processing in the
    log domain.
  py/coe/util/mathutils.py
    Added a few tests which tickled a problem I had, added some debug
    output when division by 0 is detected.  Did some early
    optimization work as some of these functions were high on the
    profile.


________________________________________________________________________________
Commit at 2008-11-25 13:13:20 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: New planning doc.  Minor work on signal processing.
Last revno: 273   Last revision id: hsecker1@hltcoe95-779-30601-20081124141011-aafvkj2c0qpwsmzm
Last revision date: 2008-11-24 09:10:11 -0500

added:
  doc/brainstorming-2008-11-25.txt
    notes from a planning session
modified:
  py/coe/signalprocessing/toychannel.py
    Work on better Numpy usage in this untested code.

________________________________________________________________________________
Commit at 2008-11-24 09:10:11 -0500 by hsecker1 <hsecker1@hltcoe95-779-30601> from code
Message: Round two: normalize doctest filenames.
Last revno: 272   Last revision id: hsecker1@hltcoe95-779-30601-20081124140646-b9lasdkmyf3mlesq
Last revision date: 2008-11-24 09:06:46 -0500

modified:
  py/coe/dataflow/framesynchronous.py
    Try again to fix Windows paths in doctest logs.

________________________________________________________________________________
Commit at 2008-11-24 09:06:46 -0500 by hsecker1 <hsecker1@hltcoe95-779-30601> from code
Message: Normalize doctest filenames.
Last revno: 271   Last revision id: hsw@jhu.edu-20081124135601-adngyfki1n0efwp9
Last revision date: 2008-11-24 08:56:01 -0500

modified:
  py/coe/dataflow/framesynchronous.py
    Make filenames in doctest have Unix forward slashes.

________________________________________________________________________________
Commit at 2008-11-24 08:56:01 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Some scoring optimization.  Speed ups of framesynchronous decoder.
Last revno: 270   Last revision id: kbasye1@jhu.edu-20081122191425-mfiozma4es8m6ikk
Last revision date: 2008-11-22 14:14:25 -0500

modified:
  py/coe/am/gaussian.py
    Some optimizations to avoid function calls in 'Python -O' runs, to cache the last
    score, and to use temporary output numpy arrays instead of creating them on the fly.
  py/coe/am/hmm.py
    Minor optimizations, addtions to decode_context interface -- a work in progress.
  py/coe/dataflow/framesynchronous.py
    Lots of changes towards using numpy arrays in the real example.  A couple of
    experiments in search algorithms are in there.  Substantial speed ups.  Can
    run real-time and get decent phoneme results.  Still lots of work in proress.

________________________________________________________________________________
Commit at 2008-11-22 14:14:25 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Get log-domain training working
Last revno: 269   Last revision id: hsecker1@hltcoe95-779-30601-20081122042217-jlgy57wjeu1cktt3
Last revision date: 2008-11-21 23:22:17 -0500

added:
  py/coe/am/testhmm2.log-ref
  py/coe/am/testhmm2.py
    This test is identical to testhmm.py except that it uses
    log-domain processing everywhere.  The results are identical
    within standard float printing precision with one exception, after
    the last of 4 passes of training in one test.  This is a bit
    curious and may need looking into, as the observable differences
    are fairly large and seemingly come almost from nowhere since
    there are no observable differences after the third pass.
modified:
  py/coe/am/SConscript
    Added testhmm2.py
  py/coe/am/bwtrainer.log-ref
    Accounting for additional debug output.
  py/coe/am/hmm.py
    Restored complete testing of a simple log-domain Hmm; we get
    results which are very close to the corresponding
    probability-domain example.  Used safe log division (see below)
    rather than Numpy's subtract.  Fixed a bug where scores were not
    being converted into the working domain(!).  Added some debut
    output and a few other minor fixes.
  py/coe/dataflow/framesynchronous.py
    Tests of this file were failing on my Windows machine with
    spurious double-/s in some filenames.  Added a few calls to
    path.normpath that fixed things.
  py/coe/util/mathutils.py
    Fixed a bug in logsumexp_array() in which if some rows where all
    -Inf we used -Inf as a bias in those rows, which then produced
    NaNs.  Made a corresponding fix in logsumexp().  Added
    safe_log_divide to perform log-domain division, i.e. subtraction.
    The problem with just using Numpy's subtract() is that it doesn't
    deal with (-Inf) - (-Inf) the way we want, nor does it complain
    when you do 1 - (-Inf), the log-domain equivalent of dividing by
    0.  The new routine does both, allowing "division" by "zero" only
    if the "numerator" is also "zero".

________________________________________________________________________________
Commit at 2008-11-21 23:22:16 -0500 by hsecker1 <hsecker1@hltcoe95-779-30601> from code
Message: Add ellipsis to a mathutils.py test
Last revno: 268   Last revision id: hsw@jhu.edu-20081122040019-4ccv5kgf6m165yah
Last revision date: 2008-11-21 23:00:19 -0500

modified:
  py/coe/util/mathutils.py
    Put in ellipsis for the logsumexp_array() test that fails with
    five decimal digits of difference on (VMWare) Windows.....

________________________________________________________________________________
Commit at 2008-11-21 23:00:19 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: First real decoder is working.  New doc files.  Other cleanup.
Last revno: 267   Last revision id: kbasye1@jhu.edu-20081121232424-aq5frwg8ftghkc4e
Last revision date: 2008-11-21 18:24:24 -0500

modified:
  py/coe/dataflow/framesynchronous.py
    Changes to get the real example of decoding working.  Two key items were to:
    1) hard-wire that the grammar not use skipable phonemes, in this case 'sp',
    the short-pause phoneme, and 2) have the Hmm elements keep track of their
    successors instead of seeding new successors on each frame that they are
    ending on.  Also implemented some simple rank-based thresholding for pruning
    and for seeding successor elements.  There is still a significant bit of
    work to do to numpy-ify the whole thing and to make it more dataflow
    friendly.  But we have a simple decoder.  On my system, it runs about 1/5
    real time, so there's much room for improvement.
  py/coe/dataflow/SConscript
    Add logref and doctest_files to framesynchronous.py PyFile declaration.
added:
  py/coe/dataflow/framesynchronous.log-ref
    Reference log for a slower decode.

added:
  doc/SoftwareQuality.txt
    Overview of some basic software development practices in the project.
  doc/longtermThingsToDo.txt
    List of projects.

modified:
  py/coe/util/__init__.py
    Refactored opentemp to take a keywords, argument thus supporting
    use of keywords, and leading to much more explicit calling code.
  py/coe/am/hmm.py
  py/coe/audio/audiofile.py
  py/coe/audio/soxy.py
  py/coe/coe_py_compile.py
  py/coe/dataflow/simplecfg.py
  py/coe/graph/graphtools.py
    Integrated changes to the opentemp() interface.

  py/coe/htkfiles/__init__.py
    Removed an unnecessary, empty __all__ attribute.
  py/coe/htkfiles/SConscript
    Minor change to eliminate two explicit calls to env.Depends(), replacing
    them by putting the files in question into the sources argument to
    env.Command().

  py/coe/util/mathutils.py
    Changed a doctest result that failed for me.  My run gave five additional
    digits in the result than the checked in version....

  templates/README.txt
  templates/__init__.py
  templates/copyright.bat
  templates/copyright.hash
  templates/copyright.slash
  templates/copyright.txt
    Removed carriage-returns from these files.  Made copyright.txt more attractive.

________________________________________________________________________________
Commit at 2008-11-21 18:24:24 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Improve changes.txt addition from previous checkin
Last revno: 266   Last revision id: kbasye1@jhu.edu-20081121232107-wkm06u0m0dwdwppj
Last revision date: 2008-11-21 18:21:07 -0500

modified:
  changes.txt
    Added to my last note since I forgot (ahem) to mention that what I
    was checking in didn't actually work yet.


________________________________________________________________________________
Commit at 2008-11-21 18:21:07 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Introduce log-domain operation in Hmm class - not working yet, though
Last revno: 265   Last revision id: hsw@jhu.edu-20081120220850-vghou8w7xa3see2j
Last revision date: 2008-11-20 17:08:50 -0500

modified:
  py/coe/am/bwtrainer.log-ref
    Some labels changed in debug output, no other changes.
  py/coe/am/bwtrainer.py
  py/coe/am/hmm.py
    A substantial reworking of the Hmm code, including significant
    interface changes.  The goal is to support processing Hmms in the
    log domain.  Most of the interface changes were aimed at making it
    simple for clients of the network training interface to avoid
    needing to do any calculations where Hmm-local quantities are
    involved, since these may now be in either domain.  The Hmm class
    itself now takes a new constructor argument specifying whether to
    use the log domain (defaults to False).  Most quantities exposed
    to clients are still in the probability domain, but there are
    quantities meant to be possed between Hmms in a network context
    and these are generally in the working domain of the Hmms (which
    means they'd all better be using the same domain!!).  The
    implementation is basically a set of constants and functions used
    for probabilistic calculations in Hmm which are set to point
    either to probability-domain versions or log-domain versions.

    Presently there are tests of creating such Hmms, but actual
    training isn't working yet.
  py/coe/am/testhmm.py
    Use new interface to Hmm class.
  py/coe/dataflow/framesynchronous.py
    Changed import back to floatutils
  py/coe/util/mathutils.py
    Added several new functions for log-domain processing and improved
    testing a bit.



________________________________________________________________________________
Commit at 2008-11-20 17:08:49 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Work on framesynchronous decoding.
Last revno: 264   Last revision id: kbasye1@jhu.edu-20081120204220-8nums8iqufydwq6t
Last revision date: 2008-11-20 15:42:20 -0500

modified:
  py/coe/dataflow/framesynchronous.py
    More work on doing a real decode.  Implemented the star grammar in a
    hard-wired way.  But had to turn it off to prevent assertions from hmm.py
    due to non-topological order of work....  Definitely a work in progress.
  py/coe/am/hmm.py
    Minor refactoring in decode_context to eliminate unnecessary code.  Some
    pedagogical simplification of the lowest level Hmm scoring routines.

________________________________________________________________________________
Commit at 2008-11-20 15:42:20 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Merge in Hugh's changes
Last revno: 263   Last revision id: kbasye1@jhu.edu-20081120201129-k27xs1s4nxy9x3sx
Last revision date: 2008-11-20 15:11:29 -0500

pending merges:
  Hugh Secker-Walker 2008-11-20 In hmm.py, separated out management of decoding likelihoods from the Hmm itself.
modified:
  changes.txt
  py/coe/am/hmm.py
  py/coe/dataflow/framesynchronous.py
  py/coe/doctestmod.py
    Merge in Hugh's changes.


________________________________________________________________________________
Commit at 2008-11-20 15:11:29 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Renamed floatutil to floatutils and some new log-domain functions in mathutils
Last revno: 262   Last revision id: hsw@jhu.edu-20081120134906-4feza8q4e1fu1bxv
Last revision date: 2008-11-20 08:49:06 -0500

renamed:
  cpp/floatutil => cpp/floatutils
  cpp/floatutil/floatutil.cpp => cpp/floatutils/floatutils.cpp
  cpp/floatutil/floatutil.h => cpp/floatutils/floatutils.h
  cpp/floatutil/floatutil_wrap.cpp => cpp/floatutils/floatutils_wrap.cpp
  cpp/floatutil/testfloatutil.cpp => cpp/floatutils/testfloatutils.cpp
  cpp/floatutil/testfloatutil.log-ref => cpp/floatutils/testfloatutils.log-ref
  py/coe/util/floatutil.py => py/coe/util/floatutils.py
  py/coe/util/numeric.py => py/coe/util/mathutils.py
modified:
  SConscript
  cpp/floatutils/SConscript
  py/coe/am/bwtrainer.py
  py/coe/am/gaussian.py
  py/coe/am/hmm.py
  py/coe/audio/soxy.py
  py/coe/htkfiles/htkscoring.py
  py/coe/signalprocessing/channel.py
  py/coe/textdata/coetext.py
  py/coe/util/SConscript
  cpp/floatutils/floatutils.cpp
  cpp/floatutils/floatutils.h
  cpp/floatutils/floatutils_wrap.cpp
  cpp/floatutils/testfloatutils.cpp
  py/coe/util/floatutils.py
  py/coe/util/mathutils.py
    Renamed floatutil to floatutils everywhere in the project since
    the former wasn't consistent with our naming scheme for such
    files.  Also added some log-domain functions to mathutils.py,
    which was formerly numeric.py, and removed a commented-out
    class from that file.



________________________________________________________________________________
Commit at 2008-11-20 14:13:16 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: In hmm.py, separated out management of decoding likelihoods from the Hmm itself.
Last revno: 262   Last revision id: hsw@jhu.edu-20081120134906-4feza8q4e1fu1bxv
Last revision date: 2008-11-20 08:49:06 -0500

modified:
  py/coe/am/hmm.py
    Added a new helper class, decode_context, that manages the state representing
    the likelihoods of an Hmm at a particular place in a decoding network.  This
    allows multiple places in a decoding network to be decoding against the same
    Hmm model without stomping on each other's likelihoods.  Switched to using
    this helper exclusively for all Hmm decoding.
  py/coe/dataflow/framesynchronous.py
    Integrate the changes to Hmm interface so as to use the decode_context.
    Some work on a real decoding example: it loads HTK models and an HTK audio
    file, and it queries the model.

  py/coe/doctestmod.py
    Tweak to the commentary about where the doctest code is itself tested.

________________________________________________________________________________
Commit at 2008-11-20 08:49:05 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Improvements to doctest timing format.  SCons now copies mmf.py into source tree.  framesynchronous.py work.
Last revno: 261   Last revision id: hsw@jhu.edu-20081120024228-u0r7tetk0a1hi919
Last revision date: 2008-11-19 21:42:28 -0500

modified:
  py/coe/htkfiles/mmf.g
    Added more verification logic to make_fp_array(), and added new tests
    of edge cases.
  py/coe/htkfiles/SConscript
    Have SCons copy the generated mmf.py file back into the source tree!

  py/coe/doctestmod.py
    Changed how doctest timing is formatted to use integers only so that we
    don't rely on Python's floating point formatting (which didn't do what I
    wanted on a test that exceeded 10 seconds).  Changed the output to report
    the elapsed time in both microseconds and seconds.
  py/coe/__init__.py
    Integrate the new doctest timing formatting in the tests of doctest.

  py/coe/dataflow/framesynchronous.py
    Initial work on real decoding, just copying and renaming the existing
    toy_model and _toy_example to real_model and _real_example.

________________________________________________________________________________
Commit at 2008-11-19 21:42:27 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Refactoring in framesynchronous.py
Last revno: 260   Last revision id: hsw@jhu.edu-20081119213413-750cn67neok1nlja
Last revision date: 2008-11-19 16:34:13 -0500

modified:
  py/coe/dataflow/framesynchronous.py
    Substantial refactoring of decode_context and toy_model.  This moves almost
    all the decoding logic and bookkeeping into decode_context where it belongs.
    Removed unused code.

________________________________________________________________________________
Commit at 2008-11-19 16:34:13 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Use more agressive doctest ellipses on htkscoring.py stats evaluation for untrained models.
Last revno: 259   Last revision id: hsw@jhu.edu-20081119212111-ok8qq7rfhqym3vs5
Last revision date: 2008-11-19 16:21:11 -0500

modified:
  py/coe/htkfiles/htkscoring.py
    Had to ellipses-out the fourth hex digit on the untrained model stats min
    field because it differs up to that digit on Windows!  Seems very excessive
    and should be revisited.

________________________________________________________________________________
Commit at 2008-11-19 16:21:11 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Added bin/snew, a script for seeing what's new in the project.  Refactoring in framesynchronous.py
Last revno: 258   Last revision id: hsecker1@hltcoe95-779-30601-20081119205058-msk80c4b5mxhmfcy
Last revision date: 2008-11-19 15:50:58 -0500

added:
  bin/snew
    Simple shell script for looking at diffs in changes.txt between your local
    branch and your parent repository.

modified:
  py/coe/dataflow/framesynchronous.py
    Pulled some stuff apart in preparation for real decoding.

________________________________________________________________________________
Commit at 2008-11-19 15:50:58 -0500 by hsecker1 <hsecker1@hltcoe95-779-30601> from code
Message: Fixed and tweaked ellipsis usage in htkscoring test.
Last revno: 257   Last revision id: kbasye1@jhu.edu-20081119194755-xm9i404r3whm7wge
Last revision date: 2008-11-19 14:47:55 -0500

modified:
  py/coe/htkfiles/htkscoring.py
    Tweaked the new doctest of adapted models to use ellipsis in the
    last three hex digits because the 64-bit platform differed from
    the 32-bit platform.  Changed the old doctest of unadapted models
    to only use ellipsis for the final 3 hex digits, instead of 7.

________________________________________________________________________________
Commit at 2008-11-19 14:47:55 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add support for training epsilon Hmms and a trained monophone HTK model
Last revno: 256   Last revision id: hsecker1@hltcoe95-779-30601-20081119190214-qo3eru6jqcr31wo4
Last revision date: 2008-11-19 14:02:14 -0500

added:
  py/coe/htkfiles/monophones4.mmf
    This HTK file is a trained version of monophones.mmf, trained with
    HTK for 4 iterations of Baum-Welch training on the standard R1
    training set.
modified:
  doc/outreachPlanning.txt
    Added another todo item.
  py/coe/am/bwtrainer.py
    Improved documentation and added a top-level check for dimension
    consistency when observations are presented.
  py/coe/am/gaussian.py
    Very early work on log-domain operation.
  py/coe/am/hmm.py
    Made some changes to allow training of epsilon models, i.e. Hmms
    with no real states, only virtual inputs and outputs.  This meant
    using safe float division in a couple places and a couple other
    minor changes.
  py/coe/am/hmm_mgr.py
    Added the ability to make epsilon Hmms and access them later.  We
    may want to revisit this with a defaultdict-like interface in the
    future.
  py/coe/am/modelmgr.py
    Allow transitions from APPLYING state back to INITIALIZING to
    support multi-utterance training.  Improve doc.
  py/coe/am/testbwt.log-ref
  py/coe/am/testbwt.py
    Added test of training a network consisting of a single epsilon
    Hmm
  py/coe/am/testhmm.log-ref
  py/coe/am/testhmm.py
    Added a test of standalone training of an epsilon Hmm.
  py/coe/htkfiles/SConscript
  py/coe/htkfiles/htkscoring.py
    Added new model file with trained monophone models and used it in
    some testing.



________________________________________________________________________________
Commit at 2008-11-19 14:02:14 -0500 by hsecker1 <hsecker1@hltcoe95-779-30601> from code
Message: Teach SCons about yapps2.  Teach SCons new stuff about mmf.py.  Some low-level SCons tools improvements.
Last revno: 255   Last revision id: kbasye1@hltcoe95-779-30601-20081118225936-4y13yvwd6q28tjwm
Last revision date: 2008-11-18 17:59:36 -0500

Note: some of the work below was a reaction to the inordinate amount
of time Ken and I spent debugging a SCons problem I was having on the
HPCC.  The summary recommendation from what we learned:
***
Do not have any symbolic directory links on the path from the
filesystem root to the location where your project is installed!
***

modified:
  site_scons/site_tools/HLTCOE.py
  site_scons/site_tools/PyTools.py
    Fixed PyFile so that it always returns the PYC as the first item
    in its list of nodes.  Removed as many absolute filenames as
    possible, instead using SCons's '#' prefix syntax.  Regularized
    the set of arguments and their order in the various Builders
    that we make.

added:
  py/yapps2/SConscript
    Tell SCons about the yapps2 files we depend on.
modified:
  py/yapps2/README.COE
    Added note about SConscript file.
  SConscript
    Added yapps2 SConscript file to list that get run.
  py/yapps2/__init__.py
    Added a test that imports yapps2.  Added commented out tests
    that are closer to what the yappsrt does....

modified:
  py/coe/htkfiles/SConscript

    Put in dependencies on the yapps2 parser and runtime.  Made the
    generated mmf.py get the PyFile treatment.  Use SCon's recommended
    syntax for refering to files relative to the top of the project.
    Use nodes instead of strings where possible.
  py/coe/htkfiles/mmf.g
    Refactored make_fp_array slightly and put in a couple of doctests.
    Added boilerplate at the bottom for coe doctests to get run

________________________________________________________________________________
Commit at 2008-11-18 17:59:36 -0500 by kbasye1 <kbasye1@hltcoe95-779-30601> from code0
Message: Improved README.COE file in .../py/yapps2
Last revno: 254   Last revision id: hsecker1@hltcoe95-779-30601-20081117223510-7n1tu4hxqy8o2box
Last revision date: 2008-11-17 17:35:10 -0500

modified:
  py/yapps2/README.COE
    Added the URL for this package and noted the existence of local
    documentation.


________________________________________________________________________________
Commit at 2008-11-17 17:35:10 -0500 by hsecker1 <hsecker1@hltcoe95-779-30601> from code
Message: Use float_to_readable_string in the htkscoring test.
Last revno: 253   Last revision id: hsecker1@hltcoe95-779-30601-20081117220649-qxtcain2jull7fng
Last revision date: 2008-11-17 17:06:49 -0500

modified:
  py/coe/htkfiles/htkscoring.py
    Switched to using float_to_readable_string in addition to ellipses for
    the doctest output.

________________________________________________________________________________
Commit at 2008-11-17 17:06:49 -0500 by hsecker1 <hsecker1@hltcoe95-779-30601> from code
Message: Added some missing SCons declarations to py/coe/htkfiles/SConscript.
Last revno: 252   Last revision id: hsw@jhu.edu-20081117215523-9jq3z0bm8ppgxv0p
Last revision date: 2008-11-17 16:55:23 -0500

modified:
  py/coe/htkfiles/SConscript
    Added a missing declaration of __init__.py as a PyFile.
    Added a missing dependency of the htkscoring test on mmf.py

________________________________________________________________________________
Commit at 2008-11-17 16:55:23 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Work on framesynchronous examples.  Added a test of scoring of HTK models using HTK utterance.
Last revno: 251   Last revision id: hsecker1@hltcoe95-779-30601-20081117160718-cxgforqlkuiyc3xx
Last revision date: 2008-11-17 11:07:18 -0500

modified:
  py/coe/htkfiles/SConscript
added:
  py/coe/htkfiles/htkscoring.py
    This test scores all GMMs in a monophone model against all frames in an
    utterance, printing some summary statistics.

modified:
  py/coe/dataflow/framesynchronous.py
    Removed old toy code, leaving only what was toy example number 3.  Renamed
    this and its supporting objects to eliminate the '3'.  Minor refactoring and
    reformatting.
  py/coe/htkfiles/htkmmf.py
    Tweaked tests to print information about the complete set of models classes.

modified:
  templates/module.py
    Reformated to remove some DOS carriage returns that caused emacs
    to perpetuate the DOS line terminations into modules that were
    based on this template.

________________________________________________________________________________
Commit at 2008-11-17 11:07:18 -0500 by hsecker1 <hsecker1@hltcoe95-779-30601> from code
Message: Added sorts to make some cfg decoding tests be deterministic across platforms.
Last revno: 250   Last revision id: hsw@jhu.edu-20081117151326-mjz22cfhnrblw5b3
Last revision date: 2008-11-17 10:13:26 -0500

modified:
  py/coe/dataflow/composecfg.py
    Made iterations over the legal terminals be deterministic (instead
    of based on the frozenset's order) so as to make result structures
    deterministic for tests.

________________________________________________________________________________
Commit at 2008-11-17 10:13:26 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Fixed an iteration-order-dependency on 64-bit platform.  Refactored some SetGraphBuilder utilities.
Last revno: 249   Last revision id: kbasye1@hltcoe95-779-30601-20081115214844-g0dgp2ryl06x302n
Last revision date: 2008-11-15 16:48:44 -0500

modified:
  py/coe/util/codedependency.py
    Refactoring that led to the below changes, and also introduced two uses of
    sorted so as to avoid platform-dependent iteration orders from dicts and
    sets that caused test failures on the 64-bit platform.

  py/coe/graph/graphtools.py
    Refactored SetGraphBuilder to allow simpler adding of arcs.  Previously the
    caller had to ensure that the nodes in a call to add_arc() already existed;
    now add_arc() will add the nodes if they don't already exist.

    Moved and refactored a function for building a set-based graph from an
    iterator that yields arc specifiers.  The function,
    make_initialized_set_graph_builder(arc_iterable), returns a SetGraphBuilder
    that is initialized from the arc specs in arc_iterable.
  py/coe/dataflow/composecfg.py
  py/coe/dataflow/simplecfg.py
    Integrate use of graphtools new make_initialized_set_graph_builder.

________________________________________________________________________________
Commit at 2008-11-15 16:48:44 -0500 by kbasye1 <kbasye1@hltcoe95-779-30601> from code0
Message: Add 39-feature HTK audio file and test loading it
Last revno: 248   Last revision id: kbasye1@jhu.edu-20081115205503-usti1foietaueb45
Last revision date: 2008-11-15 15:55:03 -0500

added:
  py/coe/htkfiles/gaw0_7_st0451_39feats.mfc
    This file has both single and double deltas, so it should be in a
    form usable with the HTK monophone models used for tests in this
    directory.  I created this file from gaw0_7_st0451.mfc by
     1) creating a file 'config.addDA' consisting of these two lines:
         TARGETKIND   = MFCC_E_D_A
         SAVEWITHCRC  = F
     2) running the command:
          HCopy -C config.addDA gaw0_7_st0451.mfc gaw0_7_st0451_39feats.mfc

modified:
  py/coe/htkfiles/SConscript
    Added new data file.
  py/coe/htkfiles/htkaudio.py
    Load new data file and print out some interesting things about it.


________________________________________________________________________________
Commit at 2008-11-15 15:55:03 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Finish replacing iteration over graphs with node-based iteration; remove arc-based iteration
Last revno: 247   Last revision id: kbasye1@jhu.edu-20081114182531-gro0aeak890pfoot
Last revision date: 2008-11-14 13:25:31 -0500

added:
  projects/std/ngramidx.py
    OOPS!  Fix the build I broke in my last checkin by referring to
    this file in the SConscript file without actually adding the file.
    Everything worked for me, but I didn't notice this file in the
    long list of unknown files.  Hmmm... would be nice to get some
    bullet-proofing for this situation.
modified:
  py/coe/am/bwtrainer.log-ref
  py/coe/am/bwtrainer.py
    Reworked various functions to use new node-based graph iteration
    rather than arc-based iteration.  Changed logreftests for this
    file to include some extra debug printing.  Otherwise, results are
    identical as expected.
  py/coe/am/hmm.py
    Fixed a bug in DebugPrint output.
  py/coe/am/testbwt.py
    Minor tweaking with no visible effects.
  py/coe/graph/graphtools.py
    Removed arc-based iteration functions (4 of them) and their
    examples; this functionality was subsumed by the recently-added
    node-based iteration.  Also commented out some lines below the
    return in get_topological_orderings since this code wasn't
    running at all and called a function I was removing.



________________________________________________________________________________
Commit at 2008-11-14 13:25:30 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Arborize doc directory; add new graph traversal function and new MLF file functionality
Last revno: 246   Last revision id: hsw@jhu.edu-20081113152925-qas4goa241fvbuct
Last revision date: 2008-11-13 10:29:25 -0500

removed:
  doc/overview.txt
    Replaced by doc/presentations/overview4.doc.
added:
  doc/images/
  doc/images/CodeDependency.png
  doc/images/DocPage.png
  doc/images/EpydocExample.png
  doc/images/GraphExample.png
  doc/images/HmmCodeInEmacs.png
  doc/images/MultiWordPhonemeNetwork.png
  doc/images/PhonemeHmm.png
  doc/images/PronHmmNetwork.png
  doc/images/PythonUser.png
  doc/images/SimpleHmm.png
  doc/outreachPlanning.txt
  doc/presentations/
  doc/presentations/TTO005ResearchInfrastructure13Nov_v2mh.ppt
  doc/presentations/overview4.doc
  doc/readmes/
  py/coe/htkfiles/mono.mlf
    Added a level of arborization to the doc directory and populated
    the new 'images' and 'presentation' directories with the materials
    generated for a talk by Mary at the sponser on 2008-11-13.
renamed:
  doc/Mac-OS-X.txt => doc/readmes/Mac-OS-X.txt
  projects/std/f1.mlf => py/coe/htkfiles/f1.mlf
  projects/std/f2.mlf => py/coe/htkfiles/f2.mlf
  projects/std/mlfprocess.py => py/coe/htkfiles/mlfprocess.py
    Moved functionality for reading HTK MLF files in the Processor
    idiom from the project directory to htkfiles, along with the data
    used to test it.
modified:
  projects/std/SConscript
    Removed references to mlfprocess.py and added references to
    ngramidx.py which was previously untested in Scons builds.
  py/coe/am/bwtrainer.py
    Rewrote the _verify function to use the new-style graph iteration
    rather than the older arc-based interation.  This exposed a bug in
    which we were still (trying to) check that all the models in the
    graph were unique, even though that should now be supported.  As
    it turned out, the one test case of sharing models slipped neatly
    through a small crack in the check, so everything appeared fine.
  py/coe/am/hmm.py
    Minor tweaks in dot output function and tests.
  py/coe/am/testbwt.py
    Add comment.
  py/coe/graph/graphtools.py
    Added a new FrozenGraph function iter_nodes, which provides
    simpler way to iterate over graphs that's almost as flexible as
    the existing iterators.  Renamed two of the existing iteration
    functions to make it clearer how they worked.  The older iterators
    are going to go away soon, but if you're looking to bring them
    back, you'll want to get them from this version.
  py/coe/htkfiles/SConscript
    Add new mlfprocess.py and its test data files, including new
    mono.mlf.
  py/coe/htkfiles/mlfprocess.py
    Added MLFBlockProcessor which collects events from the
    MFLProcessor and packages them up into larger-scale events,
    corresponding essentially to utterance transcriptions.  Some other
    cleanup and some new tests.


________________________________________________________________________________
Commit at 2008-11-13 10:29:25 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: New documentation-related code.  CFG work
Last revno: 245   Last revision id: hsw@jhu.edu-20081107222200-gk781yl8kz9hw7q6
Last revision date: 2008-11-07 17:22:00 -0500

modified:
  py/coe/dataflow/simplecfg.py
    More work on CFG parsing examples.
  py/coe/graph/graphtools.py
    Added a commented-out example of dot_display.

  doc/overview.txt
    Minor edits while prepping stuff for Mary.

  py/coe/doctestmod.py
  py/coe/__init__.py
    Added timing info to doctest summary; integrated this into the tests of
    doctest messages.

added:
  py/coe/dataflow/composecfg.py
modified:
  py/coe/dataflow/SConscript
    First proof of concept of CFG composition.

added:
  py/coe/util/codedependency.py
modified:
  py/coe/util/SConscript
    Dot graph of major dependencies in the code.

________________________________________________________________________________
Commit at 2008-11-07 17:22:00 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: CFG recognizer can be used on lattice stream.
Last revno: 244   Last revision id: kbasye1@jhu.edu-20081106195108-9qi9h627r4r7v7hb
Last revision date: 2008-11-06 14:51:08 -0500

modified:
  py/coe/dataflow/simplecfg.py
    Complete overhaul of the CFG recognizer.  It now supports being used by a
    lattice of tokens.  There isn't a real example of this usage yet, but the
    test that starts on a breadth-first enumeration of all sentences in an
    infinite, center-recursive language uses the recognizer in a
    lattice-decoding way.

    Implemented the optimization of merging internal recognizer states that have
    identical futures.  This produced the surprising result (for me) that
    instead of just creating an internal DAG of decoder states (rather than a
    tree which is what happens without this optimization), it's possible for
    recursive grammars to lead to a cyclic (but still unbounded) graph of
    internal states!  This is actually a smallish wrench for the transductive
    CFG idea.  But the fractal decoder graphs are visuall striking.  It's one of
    the few times I've been genuinely surprised by the power of some simple code
    I've written!

    There is still more work to be done here with better caching of info about
    the grammars, but it's quite usable at this point.

  py/coe/graph/graphtools.py
    Minor fix to make dot_display() really not print node labels when
    the node_label_callback is None.

  doc/coe-diagram-planning-2008-11.txt
    Added a couple of comments at the bottom

________________________________________________________________________________
Commit at 2008-11-06 14:51:08 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Improve HTK MMF parsing and augment tests
Last revno: 243   Last revision id: hsw@jhu.edu-20081104201109-ugzoo7i1oreq2rwc
Last revision date: 2008-11-04 15:11:09 -0500

added:
  py/coe/htkfiles/__init__.py
  py/coe/htkfiles/monophones.mmf
modified:
  py/coe/htkfiles/SConscript
  py/coe/htkfiles/htkmmf.log-ref
  py/coe/htkfiles/htkmmf.py
  py/coe/htkfiles/mmf.g
    Gave the htkfiles module a __init__.py so it can be loaded from
    other modules.  Improved MMF file parsing to handle the full range
    of HTK feature kind specifications and 'var' macros, both of which
    were required by trying to load a new mmf file, which has now
    become part of a test.




________________________________________________________________________________
Commit at 2008-11-04 15:11:09 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Added a minutes document.
Last revno: 242   Last revision id: hsw@jhu.edu-20081104145932-vfcijwrqqyymkch5
Last revision date: 2008-11-04 09:59:32 -0500

added:
  doc/planning-2008-11-04.txt
    Minutes from a meeting.
modified:
  py/coe/dataflow/simplecfg.py
    More on-going changes to the CFG recognizer.

________________________________________________________________________________
Commit at 2008-11-04 09:59:32 -0500 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Added a planning document to doc directory.  Ongoing CFG work.
Last revno: 241   Last revision id: kbasye1@jhu.edu-20081103191955-9qmz5kzxid25segf
Last revision date: 2008-11-03 14:19:55 -0500

added:
  doc/coe-diagram-planning-2008-11.txt
    Working set of notes about Toolkit Flow Diagram deliverables

modified:
  py/coe/builtin.py
  py/coe/dataflow/simplecfg.py
    Ongoing work that I don't know how to prevent getting checked in!
    Minor changes to dict_of class.  Major upheavals underway in
    simplecfg.py -- a work in progress.

________________________________________________________________________________
Commit at 2008-11-03 14:19:55 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Message: Augment GmmMgr and HmmMgr interfaces and improve HTK mmf file reading
Last revno: 240   Last revision id: kbasye1@jhu.edu-20081031193745-ntdzak38871axe44
Last revision date: 2008-10-31 15:37:45 -0400

modified:
  py/coe/am/hmm_mgr.py
  py/coe/am/modelmgr.py
    Added add_models() to both HmmMgr and GmmMgr so that they could
    each be used incrementally.
  py/coe/htkfiles/htkmmf.log-ref
  py/coe/htkfiles/htkmmf.py
    Fixed read_htk_mmf_file() to take HmmMgr and GmmMgr arguments
    which are then populated by reading the file provided.  This is a
    start on being able to support mmf files which use sharing, but
    that functionality isn't complete yet, so at this point all one
    can read are files with no sharing at any level.



________________________________________________________________________________
Commit at 2008-10-31 15:37:45 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Fix a typo in overview.txt
Last revno: 239   Last revision id: kbasye1@jhu.edu-20081031185742-75ip8d7dwn1ebykt
Last revision date: 2008-10-31 14:57:42 -0400

modified:
  doc/overview.txt
    Fixed a small typo - this is the version we sent to Mary on
    31-Oct-2008.


________________________________________________________________________________
Commit at 2008-10-31 14:57:42 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Further cleanup and elaboration in overview.txt
Last revno: 238   Last revision id: hsw@jhu.edu-20081031174859-zbjj9ye1tr1yicvm
Last revision date: 2008-10-31 13:48:59 -0400

modified:
  doc/overview.txt
    One more pass, removing many temporary notes and doing some
    further cleanup and elaboration.



________________________________________________________________________________
Commit at 2008-10-31 13:48:59 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Added an initial section to the overview.txt document
Last revno: 237   Last revision id: kbasye1@jhu.edu-20081031170924-r36ts8nv10187yip
Last revision date: 2008-10-31 13:09:24 -0400

modified:
  doc/overview.txt
    Added an overview section.  In addition to the notes at the bottom of this
    file, the new content was gleaned from various slides, so it's rather bullet
    centric.

  py/coe/builtin.py
    Added class dict_of which is a generalization of dict_of_set.
  py/coe/dataflow/simplecfg.py
    Some integration of new containers.

________________________________________________________________________________
Commit at 2008-10-31 13:09:24 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Further updates of overview.txt
Last revno: 236   Last revision id: hsw@jhu.edu-20081031130746-hkuzbwps3fewn8ez
Last revision date: 2008-10-31 09:07:46 -0400

modified:
  doc/overview.txt
    More updating in the Components section.



________________________________________________________________________________
Commit at 2008-10-31 09:07:46 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Added to the overview.txt document
Last revno: 235   Last revision id: hsw@jhu.edu-20081031015846-layvg52g5x3tw6dw
Last revision date: 2008-10-30 21:58:46 -0400

modified:
  doc/overview.txt
    Added prose to the existing, empty "Context-free grammars" and "Audio"
    sections.  Added a section of "HSW notes" to the bottom.  Didn't change
    any existing prose.

  py/coe/dataflow/simplecfg.py
    Added an assert about a sentinel value.

removed:
  readme/
renamed:
  readme/Mac-OS-X.txt => doc/Mac-OS-X.txt
    Moved this to the more-obviously named "doc" directory.

________________________________________________________________________________
Commit at 2008-10-30 21:58:46 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Minor changes and fixes to CfgRecognizer.
Last revno: 234   Last revision id: hsw@jhu.edu-20081030221420-a3dvuur8nzk5aofm
Last revision date: 2008-10-30 18:14:20 -0400

modified:
  py/coe/dataflow/simplecfg.py
    Minor code rearrangment and optimization in CfgRecognizer.  Also fixed the
    interface to the generator that's returned by the recognizer() method so
    that it does what the documentation says it does.

________________________________________________________________________________
Commit at 2008-10-30 18:14:20 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Substantial work on CFG building and recognizing tools.  Some work on graph tools.
Last revno: 233   Last revision id: kbasye1@jhu.edu-20081030212130-mgoukp0vc3zqtgt5
Last revision date: 2008-10-30 17:21:30 -0400

modified:
  py/coe/builtin.py
    Added a pair of classes, dict_of_set and frozendict_of_set.  The dict_of_set
    is like defaultdict(set), except that it plays well with frozendict_of_set.
    That is, these two types will correctly initialize themselves from each
    other, taking care to convert the contained sets/frozensets as appropriate.
    In this regard they are like the pairs set and frozenset or dict and
    frozendict.

  py/coe/dataflow/simplecfg.py
    Step towards having CfgBuilder interact transparently with other more static
    Cfg objects.

    Implemented production_dict which is a useful container for productions.  A
    production_dict is the object that's handed around when exchanging low-level
    CFG information.

    Added CfgDecoderBase, a class which grovels over a Cfg grammar and builds
    various static tables that are used during decoding.  Added CfgRecognizer, a
    subclass of CfgDecoderBase, which performs simple recognition of symbol
    streams against a Cfg grammar.  It has the interesting feature that at each
    step it provides to the client the set of legal terminal symbols with which
    the sentential form that's being decoded could be extended.  This is
    important for transductive decoding where the client may need to go do work
    on each of the terminal symbols before it decides which one it will give
    back to extend the Cfg recognition.  This feature trivially supports
    generating random sentences in the grammar by simply selecting one of the
    symbols at random at each step.  This feature will only really be useful
    when lattice-based Cfg decoding is implemented.

    Implemented FsaItem, a subclass of tuple, that represents FSA-style items
    for use during decoding.  Implemented RecognizerState, also a subclass of
    tuple, that holds more dynamic structures needed for Earley-style decoding.

    Added some throw-away code that displays the prediction and completion trees
    that are used when building the CfgDecoderBase structures.

    Also, major amounts of moving code and doctest strings around so that the
    useful stuff appears nearer the top of the file.  Some comment editing and
    reformatting.

  py/coe/graph/graphtools.py
    Added, SetGraphBuilder, a more set-centric builder of graphs.  From its
    docstring:
      A GraphBuilder with set semantics.  A Node is unique based on its label.  A
      Link is unique based on its end nodes and its label.  As with set objects,
      adding a node or link more than once does not change the graph.
    This has already proven to be an extremely useful object when quick display
    of graphically linked data is needed..

   Overhauled the callback functions for dot_display to put less burden on
   clients wanting to do simple displays.  Display-labels are provided as simple
   strings, requiring no knowledge of DOT.  Also, by default, nodes and arcs
   with internal label of None do not generate a display-label.  A separate
   callback, requiring knowledge of DOT, is provided for more control over
   formatting.

   Based on Cfg client usage I reworked the code that finds transitive closures in
   graphs.

removed:
  py/coe/util/frozendict.py
    Obsolete and distracting code.

________________________________________________________________________________
Commit at 2008-10-30 17:21:30 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add doc directory with draft overview.txt file; minor cleanup
Last revno: 232   Last revision id: kbasye1@jhu.edu-20081030170342-oiehktniunj3j1dj
Last revision date: 2008-10-30 13:03:42 -0400

added:
  doc/
  doc/overview.txt
    Early draft of a high-level description of this project in terms
    of its constituent modules.  Still lots to go here.
modified:
  py/coe/htkfiles/htkaudio.py*
    Switched to using 'with' idiom for files in tests, and changed
    permissions on this file.


________________________________________________________________________________
Commit at 2008-10-30 13:03:42 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add functionality to read HTK audio files and other cleanup in htkfiles
Last revno: 231   Last revision id: kbasye1@jhu.edu-20081027211632-4uqrzlacaito2ziq
Last revision date: 2008-10-27 17:16:32 -0400

added:
  py/coe/htkfiles/gaw0_7_st0451.mfc
  py/coe/htkfiles/gaw0_7_st0451.raw
  py/coe/htkfiles/gaw0_7_st0451_uncomp.mfc
  py/coe/htkfiles/htkaudio.py
renamed:
  py/coe/htkfiles/testmmf.log-ref => py/coe/htkfiles/htkmmf.log-ref
  py/coe/htkfiles/testmmf.py => py/coe/htkfiles/htkmmf.py
modified:
  py/coe/htkfiles/SConscript
  py/coe/htkfiles/htklex.py
  py/coe/lexicon/lexicon.py
  py/coe/htkfiles/htkmmf.log-ref
  py/coe/htkfiles/htkmmf.py
    Added functionality to read HTK audio files, which can be produced
    by HTK's HCopy command.  This covers the 'native' HTK format,
    which is commonly used for feature data, but can also be used for
    wave data.  Also tidied up the other two HTK file reading modules
    and regularized nomenclature across these three modules.



________________________________________________________________________________
Commit at 2008-10-27 17:16:32 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Change lexicon module to Builder/Frozen pattern; inherit from corresponding Cfg classes
Last revno: 230   Last revision id: kbasye1@jhu.edu-20081024204250-l4oafolyngnu36qt
Last revision date: 2008-10-24 16:42:50 -0400

modified:
  py/coe/htkfiles/htklex.py
  py/coe/lexicon/lexicon.py
    Reworked recently-introduced lexicon module to use the
    Builder/Frozen idiom and to have LexiconBuilder and FrozenLexicon
    inherit from CfgBuilder and FrozenCfg, respectively.  Added some
    additional bullet-proofing.


________________________________________________________________________________
Commit at 2008-10-24 16:42:49 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Merge in Hugh's changes and bug fix for bzrtool.py
Last revno: 229   Last revision id: kbasye1@jhu.edu-20081024203552-1h67bcpt2iesmdo2
Last revision date: 2008-10-24 16:35:52 -0400

pending merges:
  Hugh Secker-Walker 2008-10-24 Cleanup of CFG code and commentary
modified:
  bin/bzrtool.py
  changes.txt
  py/coe/dataflow/simplecfg.py
    Merge in Hugh's changes and attempt to fix a bug in bzrtool.py
    exposed by having bzr throw an error - we should now be catching
    this correctly, but I'm hoping I'm also not going to trip it, so
    this is untested.


________________________________________________________________________________
Commit at 2008-10-24 16:38:54 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Merge in Hugh's changes
Last revno: 229   Last revision id: kbasye1@jhu.edu-20081024203552-1h67bcpt2iesmdo2
Last revision date: 2008-10-24 16:35:52 -0400

pending merges:
  Hugh Secker-Walker 2008-10-24 Cleanup of CFG code and commentary
modified:
  changes.txt
  py/coe/dataflow/simplecfg.py
    Merge in Hugh's changes.

________________________________________________________________________________
Commit at 2008-10-24 16:35:51 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add Lexicon class and HTK lexicon file reader; other minor cleanup
Last revno: 228   Last revision id: hsw@jhu.edu-20081021135145-epicm3ggbnrjc4ij
Last revision date: 2008-10-21 09:51:45 -0400

added:
  py/coe/htkfiles/en_lexic.v08
  py/coe/htkfiles/htklex.py
  py/coe/lexicon/
  py/coe/lexicon/SConscript
  py/coe/lexicon/__init__.py
  py/coe/lexicon/lexicon.py
    First version of a lexicon and utility for creating one from an
    HTK file.
renamed:
  py/coe/mmf => py/coe/htkfiles
    ...since this is not just about mmf files anymore.
modified:
  SConscript
    Added py/coe/lexicon/SConscript and accounted for above renaming.
  py/coe/am/__init__.py
    Minor cleanup
  py/coe/graph/graphtools.py
    Minor doc fix
  py/coe/htkfiles/SConscript
    Added htklex.py with test data file
  py/coe/htkfiles/testmmf.py
    Minor cleanup
  py/coe/util/singleton.py
    Minor doc fix
  site_scons/site_tools/PyTools.py
    Added error check for something that's easy to do and (formerly)
    gave a very cryptic error.


________________________________________________________________________________
Commit at 2008-10-24 08:44:11 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Cleanup of CFG code and commentary
Last revno: 228   Last revision id: hsw@jhu.edu-20081021135145-epicm3ggbnrjc4ij
Last revision date: 2008-10-21 09:51:45 -0400

modified:
  py/coe/dataflow/simplecfg.py
    Removed some old and unused code.  Reformatted commentary to 80 columns.

________________________________________________________________________________
Commit at 2008-10-21 09:51:45 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Removed carriage-return characters from source files.
Last revno: 227   Last revision id: hsw@hodain.net-20081021041438-yzuh28z3che3vub9
Last revision date: 2008-10-21 00:14:38 -0400

modified:
  cpp/floatutil/SConscript
  cpp/floatutil/testfloatutil.cpp
  projects/ddt/SConscript
  projects/ddt/bitlm.py
  projects/ddt/datagen.py
  projects/ddt/ddt.py
  projects/ddt/twoclass.py
  py/coe/__init__.py
  py/coe/audio/SConscript
  py/coe/audio/audiofile.py
  py/coe/audio/soxy.py
  py/coe/dataflow/simplecfg.py
  py/coe/dataflow/source.py
  py/coe/graph/graphtools.py
  py/coe/util/SConscript
  site_scons/site_tools/HLTCOE.py
    Removed carriage-return characters that have crept into the project.

________________________________________________________________________________
Commit at 2008-10-21 00:14:37 Eastern Daylight Time by Hugh Secker-Walker <hsw@hodain.net> from coe_win32
Message: More merging
Last revno: 226   Last revision id: hsw@hodain.net-20081021034651-g68urdq1n6r5pbdw
Last revision date: 2008-10-20 23:46:51 -0400

pending merges:
  Ken Basye 2008-10-20 Fix broken Linux build
    Ken Basye 2008-10-20 Further build cleanup; fix Windows build
modified:
  changes.txt
  cpp/floatutil/SConscript
  py/coe/util/SConscript
  py/syck/SConscript
  site_scons/site_tools/HLTCOE.py
    Merges and fixes for Windows builds.

________________________________________________________________________________
Commit at 2008-10-20 23:46:50 Eastern Daylight Time by Hugh Secker-Walker <hsw@hodain.net> from coe_win32
Message: Fixes for floatutil shared library on Windows
Last revno: 225   Last revision id: hsecker1@hltcoe95-779-30601-20081020223820-5zisbwrtzollu3q1
Last revision date: 2008-10-20 18:38:20 -0400

modified:
  cpp/floatutil/SConscript
    Changes to make the floatutil shared library get built on Windows.
    Eliminated warnings by giving explicitly different names to object
    files.
  py/coe/util/SConscript
    Put in an explicit dependency of floatutil.pyc on _floatutil.{so,dll}

________________________________________________________________________________
Commit at 2008-10-20 23:40:27 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Fix broken Linux build
Last revno: 226   Last revision id: kbasye1@jhu.edu-20081021030044-fb4xz10vyj0mwing
Last revision date: 2008-10-20 23:00:44 -0400

modified:
  cpp/floatutil/SConscript
    One last fix to get Linux build working again.


________________________________________________________________________________
Commit at 2008-10-20 23:00:44 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Further build cleanup; fix Windows build
Last revno: 225   Last revision id: hsecker1@hltcoe95-779-30601-20081020223820-5zisbwrtzollu3q1
Last revision date: 2008-10-20 18:38:20 -0400

modified:
  cpp/floatutil/SConscript
    Further cleanup; fix broken Windows build.
  py/coe/util/SConscript
  py/syck/SConscript
  site_scons/site_tools/HLTCOE.py
    Added a way to generate names of shared Python libraries to the
    environment and used it in two SConscript files where we needed to
    generate such names.  This avoids the use of distutils in too many
    places.


________________________________________________________________________________
Commit at 2008-10-20 18:38:20 -0400 by hsecker1 <hsecker1@hltcoe95-779-30601> from code
Message: Merge in Ken's changes
Last revno: 224   Last revision id: hsecker1@hltcoe95-779-30601-20081020222225-bnfwktloq0s78lyf
Last revision date: 2008-10-20 18:22:25 -0400

pending merges:
  Ken Basye 2008-10-20 Further build cleanup; now always use MinGW to
  build on Windows
removed:
  py/sitecustomize.py
modified:
  SConstruct
  changes.txt
  cpp/floatutil/SConscript
  cpp/floatutil/floatutil.cpp
  py/coe/__init__.py
  py/syck/SConscript
  site_scons/site_tools/HLTCOE.py

________________________________________________________________________________
Commit at 2008-10-20 18:22:25 -0400 by hsecker1 <hsecker1@hltcoe95-779-30601> from code
Message: Overhaul cpp/floatutil/SConscript
Last revno: 223   Last revision id: hsw@jhu.edu-20081020184255-47wy6qiizrlj8h66
Last revision date: 2008-10-20 14:42:55 -0400

modified:
  cpp/floatutil/SConscript
    Overhaul to simplify creating shared libraries that Python can load.
  py/coe/util/SConscript
    Fix dependency generation
  py/coe/audio/soxy.py
    Move an import to the top.

________________________________________________________________________________
Commit at 2008-10-20 17:20:52 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Further build cleanup; now always use MinGW to build on Windows
Last revno: 223   Last revision id: hsw@jhu.edu-20081020184255-47wy6qiizrlj8h66
Last revision date: 2008-10-20 14:42:55 -0400

removed:
  py/sitecustomize.py
    We now longer need this file now that we set paths up in
  ...py/coe/__init__.py.  Remember to import from coe.blah.blah or
  just do "import coe" and paths will be set up correctly.
modified:
  SConstruct
    Made building on Windows always use MinGW; we'll complain and die
    if you try a Windows build and there's no MinGW installed.
    Removed the FORCE_TOOLS command-line option which allowed using
    MinGW as an option.
  cpp/floatutil/SConscript
    YA attempt to get this cleaned up and working on all platforms.
    "This time for sure."
  cpp/floatutil/floatutil.cpp
    Added commentary (only) pointing out that buggy snprintf()
    implementations have been known to cause problems, and what they
    were.
  py/coe/__init__.py
    Moved additions to both PATH and sys.path to here from
    sitecustomize.py.  Also replaced pylib_path with pylib_build_path,
    which is the platform-dependent location of shared Python
    libraries in the build directory.
  py/syck/SConscript
    Used new variable Hugh introduce to add an explicit dependency for
    syck.py on the appropriate _syck shared library so that Scons will
    copy it to the build directory.
  site_scons/site_tools/HLTCOE.py
    Removed setting for of HLTCOE_HOME_ABSOLUTE, made obsolete by
    variables Hugh introduced in SConstruct.


________________________________________________________________________________
Commit at 2008-10-20 14:42:55 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Merge my changes with Kens
Last revno: 222   Last revision id: hsw@jhu.edu-20081020181442-5cqld72hjg8stho7
Last revision date: 2008-10-20 14:14:42 -0400

pending merges:
  Ken Basye 2008-10-20 Fix bug in floatutil/SConscript and remove
  MSVC-specific code from floatutil library - use MinGW
modified:
  changes.txt
  cpp/floatutil/SConscript
  cpp/floatutil/floatutil.cpp
  cpp/floatutil/testfloatutil.cpp
  site_scons/site_tools/HLTCOE.py
    Merge my changes with Kens.

________________________________________________________________________________
Commit at 2008-10-20 14:14:42 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Various fixes, particularly for floatutil and source.py
Last revno: 221   Last revision id: hsecker1@hltcoe95-779-30601-20081017003002-1b9yawj8lc87bv1v
Last revision date: 2008-10-16 20:30:02 -0400

modified:
  py/coe/dataflow/source.py
    Attempt to avoid a race condition by putting a chunk of
    multithreading testing inside a function so that doctest doesn't
    step in and process each individual statement.  Also reworked some
    sections of commentary that came to my attention while I was
    reading through the code.

  SConstruct
    Added two Dir objects that are exported.  These are the locations
    for Python-loadable shared libraries.  These are pylib_srcdir and
    pylib_blddir, based on the env's HLTCOE_SOURCE_PYLIB and
    HLTCOE_BUILD_PYLIB.
  site_scons/site_tools/HLTCOE.py
    Renamed the env's HLTCOE_SRC_PYLIB_RELATIVE to
    HLTCOE_SOURCE_PYLIB, and added a corresponding HLTCOE_BUILD_PYLIB
    entry.
  py/coe/util/SConscript
    Remove need for knowledge of relative directory locations by
    integrating in the replacement of HLTCOE_SRC_PYLIB_RELATIVE with
    an Import of pylib_blddir.
  site_scons/site_tools/PyTools.py
   Added a check so that we don't add an additional 'c' to a 'pyc's name.

  cpp/floatutil/SConscript
    Fixes for darwin build of the _floatutil shared library.  A work
    in progress.
  py/coe/util/floatutil.py
    Replaced fiddling of the global() dictionary with some imports.

  py/coe/mmf/SConscript
    Added dependencies: the mmf tests depend on mmf.py.  Added a
    Description to this file.

  py/coe/dataflow/simplecfg.py
    Start on a CfgBuilder/FrozenCfg framework, like what we have for
    graphs.  Start on a generator for all sentences in the language of
    a CFG.  Work in progress.

  cpp/liveaudio/SConscript
    Whitespace changes while looking at shared library changes.
  py/coe/graph/graphtools.py
    Whitespace additions that I put in when I was messing around with epydoc.
  README.txt
    Fixed missing newline at end of file.

________________________________________________________________________________
Commit at 2008-10-20 12:26:34 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Fix bug in floatutil/SConscript and remove MSVC-specific code from floatutil library - use MinGW
Last revno: 221   Last revision id: hsecker1@hltcoe95-779-30601-20081017003002-1b9yawj8lc87bv1v
Last revision date: 2008-10-16 20:30:02 -0400

modified:
  cpp/floatutil/SConscript
  cpp/floatutil/floatutil.cpp
  cpp/floatutil/testfloatutil.cpp
  site_scons/site_tools/HLTCOE.py
    Fixed a bug Hugh found in the floatutil SConscript file where I
    wasn't using env for the StaticLibrary, which broke building with
    FORCE_TOOLS=mingw.  Also added an Install target to copy the built
    floatutil shared object back up to the source directory, we
    probably want to remove this in favor of always running from the
    build directory.  Note that I added another environment variable
    in HLTCOE.py just for this purpose, which we might also want to
    remove.

    Removed all conditional compilation based on _MSC_VER from these
    cpp files, which means they won't compile with MSVC anymore.
    Instead, use FORCE_TOOLS=mingw, which, in a checkin coming soon,
    will become the only way to build on Windows.

________________________________________________________________________________
Commit at 2008-10-16 20:30:02 -0400 by hsecker1 <hsecker1@hltcoe95-779-30601> from code
Message: Minor fixes for changes introduced on Windows.
Last revno: 220   Last revision id: hsw@hodain.net-20081017001753-6ncot886tkgkigdx
Last revision date: 2008-10-16 20:17:53 -0400

modified:
  py/coe/audio/audiofile.py
  py/coe/audio/soxy.py
    Undo some minor fixes I made for Windows that break Linux.  Don't
    close the stdin to a Popen subprocess, and, in soxy.py, run it in
    a subshell.

________________________________________________________________________________
Commit at 2008-10-16 20:17:53 Eastern Daylight Time by Hugh Secker-Walker <hsw@hodain.net> from coe_win32
Message: Fixes for Windows build with MinGW only.  Minor cleanup.
Last revno: 219   Last revision id: hsecker1@hltcoe95-779-30601-20081016200026-hln9qsfbkvf39sxe
Last revision date: 2008-10-16 16:00:26 -0400

modified:
  cpp/floatutil/testfloatutil.cpp
    Switched to use rand() so as to work under MinGW.  Could be
    revisited.

  py/coe/audio/SConscript
    Fix the Depends() for sox executable to use the SCons
    environment's PROGSUFFIX to get the name of the executable file to
    be correct.
  py/coe/audio/soxy.py
    Made use of Popen like that in audiofile.py.  This prevents
    race-like problems that I've seen on Windows.
  py/coe/dataflow/source.py
    Tweak the timing fudge factor, making it slightly longer,
    thereby more often avoid a race condition....  Fixed up
    whitespace a ends of lines.
  py/coe/audio/audiofile.py
    Minor tweak to use of Popen.

  projects/ddt/SConscript
    Commentary cleanup.
  projects/ddt/bitlm.py
  projects/ddt/datagen.py
  projects/ddt/ddt.py
  projects/ddt/twoclass.py
    Minor cleanup, mostly to force a rebuild.  Limit commentary line
    lengths.

________________________________________________________________________________
Commit at 2008-10-16 16:00:26 -0400 by hsecker1 <hsecker1@hltcoe95-779-30601> from code
Message: Work on SCons dependencies and testing for Python code.
Last revno: 218   Last revision id: kbasye1@hltcoe95-779-30601-20081015212428-gtnvzu5v1q0e4gx4
Last revision date: 2008-10-15 17:24:28 -0400

added:
  bin/linux2-posix-x86_64-64bit-le/
  bin/linux2-posix-x86_64-64bit-le/sox
    A 64-bit executable for use on HPCC.  This is sox version 14.0.1
    compiled with as much static linkage as possible.

modified:
  site_scons/site_tools/HLTCOE.py
    Added the names of a couple more supported platform.  We don't yet
    yell if the computed platform isn't on the list.

    Added HLTCOE_BINPATH to the SCons environment so that SConscript files
    can using this to construct filenames for executables, e.g. for setting
    up explicit dependencies.

  site_scons/site_tools/PyTools.py
    Some significant changes to the dependency system for Python files
    and other cleanup.

    Added an optional argument to PyFile, no_test=False, which, if set
    True, prevents SCons from trying to run our tests.  This supports
    our using external py files that don't have our testing
    boilerplate.  The PyFile factory now returns the test-logfile(s)
    as its targets (because they are usually its targets); however,
    PyFile will return the pyc target if it's called with
    no_test=True.

    Simplified many of the Builders associated with PyFile.

    Made the scanner be used when pyc files are the source (instead of
    when py files are the sources).  This allowed a series of cleanups
    where, for subsequent targets, we now use the actual nodes that
    SCons has created rather than using emitters.

    Modified the scanner so that it handles either py or pyc files.
    It also yells about missing nodes, which appears to happen in
    conjunction with the apparent SCons bug....

    Added use of Local() to try to work around what appears to be a
    SCons bug in its use of scanner output that lies outside the
    current directory.  But the problem persists.  Running 'bin/scons
    -k' once eliminates the problem for subsequent runs of scons.

  py/syck/SConscript
    Switch to using PyFile(..., no_test=True) for the external py files
    in this directory.
  sandbox/eventdet/SConscript
    Integrated with changes to PyFile
  py/coe/audio/SConscript
    Put in a dependency of the tests on the platform-specific sox
    executable.

  py/sitecustomize.py
    Reworded some commentary to point me more quickly to the stuff
    I was looking for.

  py/coe/am/SConscript
  py/coe/util/SConscript
   Added missing py file, __init__.py, to these SConscript files.

________________________________________________________________________________
Commit at 2008-10-15 17:24:28 -0400 by kbasye1 <kbasye1@hltcoe95-779-30601> from code0
Message: Fix test breakage I just introduced
Last revno: 217   Last revision id: basye@xp_vm_kens_mac-20081015210851-dk15tflwmvj6uk83
Last revision date: 2008-10-15 17:08:51 -0400

modified:
  cpp/floatutil/testfloatutil.cpp
  cpp/floatutil/testfloatutil.log-ref
    Fix test breakage I introduced in my previous checkin from
    Windows.  For the record, printing NaN values with printf's %g is
    not portable, nor is printing the integer value returned from
    fpclassify(), because different platforms assign different values
    to the named constants.  What *is* portable is printing, I hope,
    is printing the boolean (fpclassify(x) == FP_NAN).

________________________________________________________________________________
Commit at 2008-10-15 17:08:51 Eastern Daylight Time by Ken Basye <Ken Basye@XP_VM_KENS_MAC> from code
Message: Fix Windows build and test breakage
Last revno: 216   Last revision id: kbasye1@hltcoe95-779-30601-20081015203252-vtugcfcl4xun6xm1
Last revision date: 2008-10-15 16:32:52 -0400

modified:
  cpp/floatutil/floatutil.cpp
  cpp/floatutil/testfloatutil.cpp
  cpp/floatutil/testfloatutil.log-ref
    Fixed a couple Windows problems I created with my most recent
    checkin.  Also, if you were seeing a failure in the test of
    testfloatutil, this might fix that, too.


________________________________________________________________________________
Commit at 2008-10-15 16:32:52 -0400 by kbasye1 <kbasye1@hltcoe95-779-30601> from code0
Message: Get all tests passing on HPCC machines; fix ckin command
Last revno: 215   Last revision id: kbasye1@jhu.edu-20081014192238-vihm3l9eshn3plb5
Last revision date: 2008-10-14 15:22:38 -0400

added:
  cpp/pylib/README_syck.txt
  cpp/pylib/linux2-posix-x86_64-64bit-le/
  cpp/pylib/linux2-posix-x86_64-64bit-le/_syck.so
    Added a syck shared library for the HPCC machines and a readme
    describing where this and the other syck shared libraries came from.
modified:
  bin/bzrtool.py
    Use shutil.move() rather than os.rename() since the latter doesn't
    work across filesystems on the HPCC machines.  To be fair, the
    files being "renamed" are in /tmp to begin with, so using move is
    really more appropriate.  The advantage to rename is that it's
    atomic (when it works).
  cpp/floatutil/floatutil.cpp
    Fixed a bug in calls to nan(); different systems interpret the
    argument in very different ways :-<.
  cpp/floatutil/testfloatutil.cpp
  cpp/floatutil/testfloatutil.log-ref
    Added some regression tests of errorful conversions.
  py/coe/audio/audiofile.py
    Fixed to work on 64-bit machines.  The interaction between Python
    array.array and Numpy's ndarray has to be handled somewhat
    carefully.  In particular, the 'l' format for Python's arrays
    results in varying itemsizes across platforms, which can lead to
    Numpy arrays with twice the expected number of elements when
    they're constructed from raw binary data with fromstring().  We
    now use 'i' as the format for full-sized int arrays, which is 32
    bits on all platforms.  Also switched from using 1-char typecodes
    for Numpy arrays to using real dtypes (with some associated
    argument and variable renaming), since I could see no advantage
    to the codes, especially as they don't line up exactly with the Python
    array codes anyway.  As a final fix, I used the Doctest ellipsis
    device to ignore differences in Numpy array printing across
    platforms.  Note that for arrays with dtype=int32, the dtype is
    printed explicitly on 64-bit platforms but suppressed on 32-bit
    platforms.  The converse holds for arrays of int64.
  py/coe/audio/soxy.py
    Switched from using 'l' to 'i' when creating Python array.array
    objects since they have the same size across 64- and 32-bit
    platforms when 'i' is used (always 4-byte ints) but different
    sizes when 'l' is used.
  py/coe/util/floatutil.py
    Minor changes.
  py/coe/util/streamprocess.py
    Switched to using 'int' for some array types rather than int32.
    This is sort of a hack, in that now we're using different storage
    amounts on 64- vs 32-bit systems, but it makes the arrays print
    identically.  See changes to audiofile.py for another way to deal
    with this problem.


________________________________________________________________________________
Commit at 2008-10-14 15:22:38 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Provide Syck library for Windows; fix one last Windows build issue
Last revno: 214   Last revision id: kbasye1@jhu.edu-20081014184447-z9px1m4v95u3gua8
Last revision date: 2008-10-14 14:44:47 -0400

added:
  cpp/pylib/win32-nt-i386-32bit-le/_syck.pyd
    Added a Syck shared library for Windows.
modified:
  cpp/floatutil/SConscript
    Minor cleanup.
  py/coe/util/SConscript
    Fixed explicit dependency of Python floatutil wrapper on shared
    library so it uses the correct platform-specific extension.  We
    might want to think about encapsulating this functionality in a
    function in our Scons tools.

    At this point, the Windows build is fully functional.



________________________________________________________________________________
Commit at 2008-10-14 14:44:46 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Port floatutil library to Windows
Last revno: 213   Last revision id: kbasye1@jhu.edu-20081008215608-0y7uwcuqteo1xsqb
Last revision date: 2008-10-08 17:56:08 -0400

removed:
  cpp/floatutil/floatutil.c
  cpp/floatutil/floatutil_wrap.c
  cpp/floatutil/testfloatutil.c
added:
  cpp/floatutil/floatutil.cpp
  cpp/floatutil/floatutil_wrap.cpp
  cpp/floatutil/testfloatutil.cpp
modified:
  cpp/floatutil/SConscript
  cpp/floatutil/floatutil.h

Port floatutil library to Windows.  Changed the files from C to C++
since that solved one problem I was having.  Added a bit of
Windows-specific code, mostly #defines, to work around the lack of
decent C99 support :-<.  Changed SConscript to get as much information
as possible from distutils.sysconfig, but even this isn't very
consistent across platforms.

________________________________________________________________________________
Commit at 2008-10-08 17:56:08 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add floatutil C-library; rework TrainingGraph interface, other optimization
Last revno: 212   Last revision id: hsw@jhu.edu-20081008210434-xgu99dkkpmgls2z0
Last revision date: 2008-10-08 17:04:34 -0400

added:
  cpp/floatutil/
  cpp/floatutil/SConscript
  cpp/floatutil/floatutil.c
  cpp/floatutil/floatutil.h
  cpp/floatutil/floatutil_wrap.c
  cpp/floatutil/testfloatutil.c
  cpp/floatutil/testfloatutil.log-ref
  cpp/pylib/
  cpp/pylib/README.txt
  cpp/pylib/darwin-posix-i386-32bit-le/
  cpp/pylib/darwin-posix-i386-32bit-le/_syck.so
  cpp/pylib/linux2-posix-i386-32bit-le/
  cpp/pylib/win32-nt-i386-32bit-le/
  py/syck/
  py/syck/SConscript
  py/syck/__init__.py
  py/syck/dumpers.py
  py/syck/loaders.py
    Added new directory 'pylib' under cpp, which is where we'll be keeping
    shared libraries loaded by Python modules, generally by some Python wrapper
    for that library.  Implemented float <-> readable string functions in C and
    a wrapper for them (see also changes to floatutil.py below).  Imported the
    Syck library for parsing YAML files, which is much faster than the PyYaml
    library we were using, but I've only built and installed a library for Mac
    OS at this point.  My intention is to remove Syck from the project and
    replace it with a native parser which handles only the small subset of YAML
    that we use, in the hope that it will be both fast and cross-platform.  Note
    that the floatutil library requires _floatutil.so which will be built from
    the C source, but only in the build directory.  This means that if you want
    to run from your source tree, you'll need to copy _floatutil.so from the
    build directory to the ./cpp/pylib/<arch> directory by hand.  A future
    checkin will provide a Scons target for doing this.
modified:
  SConscript
    Added SConscript files for new floatutil C library and for Syck.
  py/coe/__init__.py
    Added a platform-dependent variable for the location of the pylib directory.
  py/coe/am/bwtrainer.py
    Moved manipulation of model manager state outside the begin/end entrypoints
    for TrainingGraph.  This facilitates creation and training over several
    graphs before accumulators are applied.
  py/coe/am/gaussian.py
    Introduced __eq__ and __ne__ functions for all models.  Moved computation of
    Cholesky matrices so that it's done only if they're needed rather than on
    construction.   Other minor optimization.
  py/coe/am/hmm.py
    Introduced __eq__ and __ne__ functions for Hmms.  Added a separate Hmm
    entrypoint for clearing accumulators; we call it ourselves at the end of
    adaptation.  We no longer clear accumulators in begin_adapt() so that
    multiple clients can call it safely even after some of them have done
    accumulation.
  py/coe/am/hmm_mgr.py
    Introduced __eq__ and __ne__ and conversion to string functions for HmmMgr.
    Also added entrypoints for controlling accumulators of all client Hmms; this
    helps support the changes mentioned above for bwtrainer.py.  Finally, added
    functions allowing both a HmmMgr and a GmmMgr to be serialized in/out from a
    single file; the beginnings of an acoustic model file.  Other minor changes.
  py/coe/am/modelmgr.py
    Introduced __eq__ and __ne__ and conversion to string functions for HmmMgr.
    Changed entrypoints for accumulator control; this helps support the changes
    mentioned above for bwtrainer.py.  Other minor changes.
  py/coe/am/testbwt.py
    Use new external accumulator control now that TrainingGraphs don't try to
    control accumulators themselves.  Results are unchanged.
  py/coe/am/testhmm.log-ref
    New output.
  py/coe/am/testhmm.py
    Added a test where one Hmm shares a Gmm across more than one state.
  py/coe/graph/graphtools.py
    Minor output changes in CoeText tests.
  py/coe/textdata/coetext.py
    Changed array writing to use readable-string floats rather than str(float),
    since str(float) is not exactly invertible.  Note that this isn't done yet
    for lists and scalars, which it should be.
  py/coe/textdata/yamldata.py
    Added initial support for keeping track of line numbers while reading,
    useful for making good error messages.  CoeText uses the new attributes, so
    they should be treated as part of the YamldataReader API.  Switched reading
    from using PyYaml to using Syck, and switched writing from using PyYaml to
    using a native writing function that's just enough for the job.  This
    resulted in a very large speedup for large files.  I've left some
    commented-out remnants of the PyYaml use until we're sure about this
    direction.
  py/coe/util/SConscript
    Added an explicit dependency for floatutil.py on _floatutil.so since
    the PyFile scanner won't find it.
  py/coe/util/debugprint.py*
    Minor optimization.  Also tried to change permissions on this
    file, which are currently strange.  I think this is what the * is
    about in bzr status.
  py/coe/util/floatutil.py
    Switched to using C-library implementation of float <-> readable string
    functions, but preserved the Python implementations as references.  Note
    that the C-library also includes fpclassify() which is also exposed here and
    will be much faster than the implemtation in double.py.
  py/coe/util/singleton.py
    Added tests of name attribute.
  py/sitecustomize.py
    Make sure the platform-correct pylib directory in the source tree is on
    Python's sys.path whenever we start Python.
  site_scons/site_tools/HLTCOE.py
    Added a couple variables to the environment we use to support pylib use.
  site_scons/site_tools/PyTools.py
    Make sure the platform-correct pylib directory in the build tree is on
    Python's sys.path when building and running tests.  Note that the changes
    above to py/sitecustomize.py ensure that the corresponding directory in the
    source tree will already be on the path also.  At some point it would
    be nice to remove the source directory from the Python path to ensure that
    the build tree is completely self-contained, but we can't do that until we
    fix the py/pyc dependency issues noted in this file.


________________________________________________________________________________
Commit at 2008-10-08 17:04:34 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Upgrade from SCons 0.97 to SCons 1.0.1.  Added bin/maketags, a script for making emacs-style TAGS file.
Last revno: 211   Last revision id: hsw@jhu.edu-20081007171554-pkr7gno78lavzc6w
Last revision date: 2008-10-07 13:15:54 -0400

added:
  bin/maketags
    Shell script, intended to be run from the top of the project, that
    creates an emacs-style TAGS file of Python and C/C++ files in the
    project.

modified:
  SConscript
  py/coe/mmf/SConscript
  sandbox/eventdet/SConscript
  site_scons/site_tools/HLTCOE.py
  site_scons/site_tools/PyTools.py
    Changes necessary to make our tools work with SCons v1.0.1.  It
    appears we were lucky to be running under 0.97; apparently the
    0.97 copied source files to the build directory sooner than 1.0.1
    does.  The lateness with which the 1.0.1 copies files flushed out
    two problems with our dependency building in PyTools.py:
    -  the scanning process was not correct
    -  the doctest_files dependencies were not set up for the LogrefTest
    These problems, and some other minor issues have been fixed.

The following are the changes associated with putting
scons-local-1.0.1 into the project, thus upgrading from SCons 0.97 to
SCons 1.0.1.  For future reference, here are the steps undertaken:
    $ cd scons
    $ bzr mv scons-local-0.97 scons-local-1.0.1
    $ rm -rf scons-local-1.0.1
    $ cp <your-download-directory>/scons-local-1.0.1.tar.gz .
    $ tar xzf scons-local-1.0.1.tar.gz
    $ rm scons-local-1.0.1.tar.gz
    $ bzr status .
    $ bzr add <the unknown scons files and directories from the status>
The net result in this case was the following removals, additions,
renaming, and modifications:
removed:
  scons/scons-local-0.97/SCons/Optik/
  scons/scons-local-0.97/SCons/Optik/__init__.py
  scons/scons-local-0.97/SCons/Optik/errors.py
  scons/scons-local-0.97/SCons/Optik/option.py
  scons/scons-local-0.97/SCons/Optik/option_parser.py
  scons/scons-local-0.97/SCons/Sig/
  scons/scons-local-0.97/SCons/Sig/MD5.py
  scons/scons-local-0.97/SCons/Sig/TimeStamp.py
  scons/scons-local-0.97/SCons/Sig/__init__.py
added:
  scons/scons-local-1.0.1/SCons/CacheDir.py
  scons/scons-local-1.0.1/SCons/Script/Interactive.py
  scons/scons-local-1.0.1/SCons/Script/SConsOptions.py
  scons/scons-local-1.0.1/SCons/Sig.py
  scons/scons-local-1.0.1/SCons/Tool/FortranCommon.py
  scons/scons-local-1.0.1/SCons/Tool/filesystem.py
  scons/scons-local-1.0.1/SCons/Tool/gfortran.py
  scons/scons-local-1.0.1/SCons/Tool/install.py
  scons/scons-local-1.0.1/SCons/Tool/packaging/
  scons/scons-local-1.0.1/SCons/Tool/packaging/__init__.py
  scons/scons-local-1.0.1/SCons/Tool/packaging/ipk.py
  scons/scons-local-1.0.1/SCons/Tool/packaging/msi.py
  scons/scons-local-1.0.1/SCons/Tool/packaging/rpm.py
  scons/scons-local-1.0.1/SCons/Tool/packaging/src_tarbz2.py
  scons/scons-local-1.0.1/SCons/Tool/packaging/src_targz.py
  scons/scons-local-1.0.1/SCons/Tool/packaging/src_zip.py
  scons/scons-local-1.0.1/SCons/Tool/packaging/tarbz2.py
  scons/scons-local-1.0.1/SCons/Tool/packaging/targz.py
  scons/scons-local-1.0.1/SCons/Tool/packaging/zip.py
  scons/scons-local-1.0.1/SCons/Tool/rpm.py
  scons/scons-local-1.0.1/SCons/Tool/sunf77.py
  scons/scons-local-1.0.1/SCons/Tool/sunf90.py
  scons/scons-local-1.0.1/SCons/Tool/sunf95.py
  scons/scons-local-1.0.1/SCons/Tool/wix.py
  scons/scons-local-1.0.1/SCons/Variables/
  scons/scons-local-1.0.1/SCons/Variables/BoolVariable.py
  scons/scons-local-1.0.1/SCons/Variables/EnumVariable.py
  scons/scons-local-1.0.1/SCons/Variables/ListVariable.py
  scons/scons-local-1.0.1/SCons/Variables/PackageVariable.py
  scons/scons-local-1.0.1/SCons/Variables/PathVariable.py
  scons/scons-local-1.0.1/SCons/Variables/__init__.py
  scons/scons-local-1.0.1/SCons/compat/_scons_hashlib.py
  scons/scons-local-1.0.1/SCons/compat/_scons_itertools.py
  scons/scons-local-1.0.1/SCons/compat/_scons_optparse.py
  scons/scons-local-1.0.1/SCons/compat/_scons_shlex.py
  scons/scons-local-1.0.1/SCons/compat/_scons_textwrap.py
  scons/scons-time.py
  scons/sconsign.py
renamed:
  scons/scons-local-0.97 => scons/scons-local-1.0.1
modified:
  scons/scons-LICENSE
  scons/scons-README
  scons/scons-local-1.0.1/SCons/Action.py
  scons/scons-local-1.0.1/SCons/Builder.py
  scons/scons-local-1.0.1/SCons/Conftest.py
  scons/scons-local-1.0.1/SCons/Debug.py
  scons/scons-local-1.0.1/SCons/Defaults.py
  scons/scons-local-1.0.1/SCons/Environment.py
  scons/scons-local-1.0.1/SCons/Errors.py
  scons/scons-local-1.0.1/SCons/Executor.py
  scons/scons-local-1.0.1/SCons/Job.py
  scons/scons-local-1.0.1/SCons/Memoize.py
  scons/scons-local-1.0.1/SCons/Node/Alias.py
  scons/scons-local-1.0.1/SCons/Node/FS.py
  scons/scons-local-1.0.1/SCons/Node/Python.py
  scons/scons-local-1.0.1/SCons/Node/__init__.py
  scons/scons-local-1.0.1/SCons/Options/BoolOption.py
  scons/scons-local-1.0.1/SCons/Options/EnumOption.py
  scons/scons-local-1.0.1/SCons/Options/ListOption.py
  scons/scons-local-1.0.1/SCons/Options/PackageOption.py
  scons/scons-local-1.0.1/SCons/Options/PathOption.py
  scons/scons-local-1.0.1/SCons/Options/__init__.py
  scons/scons-local-1.0.1/SCons/PathList.py
  scons/scons-local-1.0.1/SCons/Platform/__init__.py
  scons/scons-local-1.0.1/SCons/Platform/aix.py
  scons/scons-local-1.0.1/SCons/Platform/cygwin.py
  scons/scons-local-1.0.1/SCons/Platform/darwin.py
  scons/scons-local-1.0.1/SCons/Platform/hpux.py
  scons/scons-local-1.0.1/SCons/Platform/irix.py
  scons/scons-local-1.0.1/SCons/Platform/os2.py
  scons/scons-local-1.0.1/SCons/Platform/posix.py
  scons/scons-local-1.0.1/SCons/Platform/sunos.py
  scons/scons-local-1.0.1/SCons/Platform/win32.py
  scons/scons-local-1.0.1/SCons/SConf.py
  scons/scons-local-1.0.1/SCons/SConsign.py
  scons/scons-local-1.0.1/SCons/Scanner/C.py
  scons/scons-local-1.0.1/SCons/Scanner/D.py
  scons/scons-local-1.0.1/SCons/Scanner/Dir.py
  scons/scons-local-1.0.1/SCons/Scanner/Fortran.py
  scons/scons-local-1.0.1/SCons/Scanner/IDL.py
  scons/scons-local-1.0.1/SCons/Scanner/LaTeX.py
  scons/scons-local-1.0.1/SCons/Scanner/Prog.py
  scons/scons-local-1.0.1/SCons/Scanner/__init__.py
  scons/scons-local-1.0.1/SCons/Script/Main.py
  scons/scons-local-1.0.1/SCons/Script/SConscript.py
  scons/scons-local-1.0.1/SCons/Script/__init__.py
  scons/scons-local-1.0.1/SCons/Subst.py
  scons/scons-local-1.0.1/SCons/Taskmaster.py
  scons/scons-local-1.0.1/SCons/Tool/386asm.py
  scons/scons-local-1.0.1/SCons/Tool/BitKeeper.py
  scons/scons-local-1.0.1/SCons/Tool/CVS.py
  scons/scons-local-1.0.1/SCons/Tool/JavaCommon.py
  scons/scons-local-1.0.1/SCons/Tool/Perforce.py
  scons/scons-local-1.0.1/SCons/Tool/PharLapCommon.py
  scons/scons-local-1.0.1/SCons/Tool/RCS.py
  scons/scons-local-1.0.1/SCons/Tool/SCCS.py
  scons/scons-local-1.0.1/SCons/Tool/Subversion.py
  scons/scons-local-1.0.1/SCons/Tool/__init__.py
  scons/scons-local-1.0.1/SCons/Tool/aixc++.py
  scons/scons-local-1.0.1/SCons/Tool/aixcc.py
  scons/scons-local-1.0.1/SCons/Tool/aixf77.py
  scons/scons-local-1.0.1/SCons/Tool/aixlink.py
  scons/scons-local-1.0.1/SCons/Tool/applelink.py
  scons/scons-local-1.0.1/SCons/Tool/ar.py
  scons/scons-local-1.0.1/SCons/Tool/as.py
  scons/scons-local-1.0.1/SCons/Tool/bcc32.py
  scons/scons-local-1.0.1/SCons/Tool/c++.py
  scons/scons-local-1.0.1/SCons/Tool/cc.py
  scons/scons-local-1.0.1/SCons/Tool/cvf.py
  scons/scons-local-1.0.1/SCons/Tool/default.py
  scons/scons-local-1.0.1/SCons/Tool/dmd.py
  scons/scons-local-1.0.1/SCons/Tool/dvi.py
  scons/scons-local-1.0.1/SCons/Tool/dvipdf.py
  scons/scons-local-1.0.1/SCons/Tool/dvips.py
  scons/scons-local-1.0.1/SCons/Tool/f77.py
  scons/scons-local-1.0.1/SCons/Tool/f90.py
  scons/scons-local-1.0.1/SCons/Tool/f95.py
  scons/scons-local-1.0.1/SCons/Tool/fortran.py
  scons/scons-local-1.0.1/SCons/Tool/g++.py
  scons/scons-local-1.0.1/SCons/Tool/g77.py
  scons/scons-local-1.0.1/SCons/Tool/gas.py
  scons/scons-local-1.0.1/SCons/Tool/gcc.py
  scons/scons-local-1.0.1/SCons/Tool/gnulink.py
  scons/scons-local-1.0.1/SCons/Tool/gs.py
  scons/scons-local-1.0.1/SCons/Tool/hpc++.py
  scons/scons-local-1.0.1/SCons/Tool/hpcc.py
  scons/scons-local-1.0.1/SCons/Tool/hplink.py
  scons/scons-local-1.0.1/SCons/Tool/icc.py
  scons/scons-local-1.0.1/SCons/Tool/icl.py
  scons/scons-local-1.0.1/SCons/Tool/ifl.py
  scons/scons-local-1.0.1/SCons/Tool/ifort.py
  scons/scons-local-1.0.1/SCons/Tool/ilink.py
  scons/scons-local-1.0.1/SCons/Tool/ilink32.py
  scons/scons-local-1.0.1/SCons/Tool/intelc.py
  scons/scons-local-1.0.1/SCons/Tool/jar.py
  scons/scons-local-1.0.1/SCons/Tool/javac.py
  scons/scons-local-1.0.1/SCons/Tool/javah.py
  scons/scons-local-1.0.1/SCons/Tool/latex.py
  scons/scons-local-1.0.1/SCons/Tool/lex.py
  scons/scons-local-1.0.1/SCons/Tool/link.py
  scons/scons-local-1.0.1/SCons/Tool/linkloc.py
  scons/scons-local-1.0.1/SCons/Tool/m4.py
  scons/scons-local-1.0.1/SCons/Tool/masm.py
  scons/scons-local-1.0.1/SCons/Tool/midl.py
  scons/scons-local-1.0.1/SCons/Tool/mingw.py
  scons/scons-local-1.0.1/SCons/Tool/mslib.py
  scons/scons-local-1.0.1/SCons/Tool/mslink.py
  scons/scons-local-1.0.1/SCons/Tool/msvc.py
  scons/scons-local-1.0.1/SCons/Tool/msvs.py
  scons/scons-local-1.0.1/SCons/Tool/mwcc.py
  scons/scons-local-1.0.1/SCons/Tool/mwld.py
  scons/scons-local-1.0.1/SCons/Tool/nasm.py
  scons/scons-local-1.0.1/SCons/Tool/pdf.py
  scons/scons-local-1.0.1/SCons/Tool/pdflatex.py
  scons/scons-local-1.0.1/SCons/Tool/pdftex.py
  scons/scons-local-1.0.1/SCons/Tool/qt.py
  scons/scons-local-1.0.1/SCons/Tool/rmic.py
  scons/scons-local-1.0.1/SCons/Tool/rpcgen.py
  scons/scons-local-1.0.1/SCons/Tool/sgiar.py
  scons/scons-local-1.0.1/SCons/Tool/sgic++.py
  scons/scons-local-1.0.1/SCons/Tool/sgicc.py
  scons/scons-local-1.0.1/SCons/Tool/sgilink.py
  scons/scons-local-1.0.1/SCons/Tool/sunar.py
  scons/scons-local-1.0.1/SCons/Tool/sunc++.py
  scons/scons-local-1.0.1/SCons/Tool/suncc.py
  scons/scons-local-1.0.1/SCons/Tool/sunlink.py
  scons/scons-local-1.0.1/SCons/Tool/swig.py
  scons/scons-local-1.0.1/SCons/Tool/tar.py
  scons/scons-local-1.0.1/SCons/Tool/tex.py
  scons/scons-local-1.0.1/SCons/Tool/tlib.py
  scons/scons-local-1.0.1/SCons/Tool/yacc.py
  scons/scons-local-1.0.1/SCons/Tool/zip.py
  scons/scons-local-1.0.1/SCons/Util.py
  scons/scons-local-1.0.1/SCons/Warnings.py
  scons/scons-local-1.0.1/SCons/__init__.py
  scons/scons-local-1.0.1/SCons/compat/__init__.py
  scons/scons-local-1.0.1/SCons/compat/_scons_UserString.py
  scons/scons-local-1.0.1/SCons/compat/_scons_sets15.py
  scons/scons-local-1.0.1/SCons/compat/_scons_subprocess.py
  scons/scons-local-1.0.1/SCons/compat/builtins.py
  scons/scons-local-1.0.1/SCons/cpp.py
  scons/scons-local-1.0.1/SCons/dblite.py
  scons/scons-local-1.0.1/SCons/exitfuncs.py
  scons/scons.py*

________________________________________________________________________________
Commit at 2008-10-07 13:15:54 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Minor graph tweaks.  Work on non-linear signal processing.
Last revno: 210   Last revision id: kbasye1@jhu.edu-20080910161410-2u0hmnvoyiwsucg7
Last revision date: 2008-09-10 12:14:10 -0400

modified:
  py/coe/graph/graphtools.py
    Minor changes to reduce attribute lookup.

  py/coe/signalprocessing/filter.py
    Work on a non-linear "two-pole" system.

________________________________________________________________________________
Commit at 2008-09-10 12:14:10 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Added serialization of GmmMgr, have GaussianModelBase use Singleton for covariance type
Last revno: 209   Last revision id: kbasye1@jhu.edu-20080905212825-r1o8uvlemywtlmmt
Last revision date: 2008-09-05 17:28:25 -0400

added:
  py/coe/util/versionset.py
    Added class VersionSet which supports simple checks for a
    particular version being in a set.
modified:
  py/coe/am/gaussian.py
    Switched GaussianModelBase to use a Singleton rather than a string
    to keep track of the covariance type of models.  Added properties
    on SimpleGaussianModel to get the means and vars, needed for
    serialization.  Minor cleanup.
  py/coe/am/hmm_mgr.py
    Minor cleanup.
  py/coe/am/modelmgr.py
    Added support for serializing GmmMgr.
  py/coe/mmf/testmmf.py
    Fixed a small bug.




________________________________________________________________________________
Commit at 2008-09-05 17:28:25 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add Singleton and Serializable classes
Last revno: 208   Last revision id: hsw@jhu.edu-20080905134431-4jeyfy7ngu6fbekj
Last revision date: 2008-09-05 09:44:31 -0400

added:
  py/coe/containers/serializable.py
  py/coe/util/singleton.py
modified:
  projects/ddt/datagen.py
  projects/ddt/twoclass.py
  py/coe/am/bwtrainer.py
  py/coe/am/classifier.py
  py/coe/am/gaussian.py
  py/coe/am/hmm.py
  py/coe/am/modelmgr.py
  py/coe/am/testbwt.py
  py/coe/am/testhmm.py
  py/coe/containers/SConscript
  py/coe/containers/objectset.py
  py/coe/mmf/testmmf.py
  py/coe/signalprocessing/__init__.py
  py/coe/signalprocessing/delta.py
  py/coe/signalprocessing/scale.py
  py/coe/signalprocessing/spectrum.py
  py/coe/signalprocessing/window.py
  py/coe/textdata/coetext.py
  py/coe/util/SConscript

    Added a class to support the construction of singleton objects,
    and added support for serialization and deserialization of these
    objects in CoeText form.  Used this functionality to replace the
    use of strings to represent covariance type in GaussianMixtureBase
    and its descendent classes.

    Added a mixin class to support serialization of simple classes in
    a way consistent with the way that IndexedObjectSet works.
    Ultimately it may be better to move the new Serializable and the
    existing IndexedObjectSet classes into the same file, but I
    haven't done that in this checkin.  To try out this functionality,
    I made the sigprocbase class inherit from Serializable.  This
    required updating several signalprocessing classes to start
    maintaining version numbers; code in sigprocbase tries to make
    this as easy as possible.  There's a small test of the
    Serializable functionality in objectset.py in addition to the
    local doctest.


________________________________________________________________________________
Commit at 2008-09-05 09:44:31 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Completed 'tag' to 'label' renaming.  Reformatted long lines.
Last revno: 207   Last revision id: hsw@jhu.edu-20080905121641-hklz6xmfjyxobtti
Last revision date: 2008-09-05 08:16:41 -0400

modified:
  py/coe/am/bwtrainer.py
  py/coe/dataflow/framesynchronous.py
  py/coe/dataflow/simplecfg.py
  py/coe/doctestmod.py
  py/coe/graph/decodergraph.py
  py/coe/graph/graphsandbox.py
  py/coe/graph/graphtools.py
  py/coe/signalprocessing/channel.py
  py/coe/signalprocessing/filter.py
  py/coe/signalprocessing/spectrum.py
  py/coe/textdata/yamldata.py
  py/coe/util/alignment.py
  site_scons/site_tools/PyTools.py
    Completed work on renaming 'tag' to 'label', mostly based on
    graphtools.py usage.  Took the opportunity to reformat many long
    lines in these files.

________________________________________________________________________________
Commit at 2008-09-05 08:16:41 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Message: Local renaming of 'tag' to 'label'
Last revno: 206   Last revision id: kbasye1@jhu.edu-20080903201500-ba1gwphz53rvhdf2
Last revision date: 2008-09-03 16:15:00 -0400

modified:
  py/coe/am/bwtrainer.py
  py/coe/dataflow/framesynchronous.py
  py/coe/dataflow/simplecfg.py
  py/coe/graph/graphsandbox.py
  py/coe/graph/graphtools.py
  py/coe/mmf/testmmf.py
  py/coe/signalprocessing/channel.py
  py/coe/util/alignment.py
  py/coe/util/streamprocess.py
    First part of 'tag' to 'label' renaming.  The changes here are
    almost all such renamings that do not have consequences beyond the
    function scope.  So, local variables, strings, comments, etc. were
    changed.  What was not changed were more globally visible
    instances of 'tag' such as function names, and function argument
    names, classes, etc.

________________________________________________________________________________
Commit at 2008-09-03 16:15:00 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Message: Add 1-Best alignment in alignment.py and tweak prep/ckin behavior
Last revno: 205   Last revision id: hsw@jhu.edu-20080903152224-cycjw92ddzib9ov2
Last revision date: 2008-09-03 11:22:24 -0400

modified:
  bin/bzrtool.py
    At Hugh's suggestion, added a line in the changes.txt header that
    has the checkin message, i.e., the commentary put on the bin/ckin
    command line which is used as the log message for the checkin.
    Also reordered the lines printed into comments.txt to put the
    "pending merges" lines at the top rather than in the "FYI only"
    section.
  py/coe/util/alignment.py
    Resurrected code for doing 1-Best lattice alignment since it's
    currently much faster than getting the 1-Best from the N-Best
    algorithm.  The new entrypoint is align().  Slightly annoying is
    the fact that when there are multiple paths with the same best
    score, the path returned first by the N-Best algorithm may not be
    the one returned by the 1-Best algorithm; there isn't going to an
    easy way to fix this.  Cleaned up some documentation and added
    tests for align.

________________________________________________________________________________
Commit at 2008-09-03 11:22:24 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 204   Last revision id: hsw@jhu.edu-20080902145924-m0lojzd5cs9ds7nm
Last revision date: 2008-09-02 10:59:24 -0400

modified:
  py/coe/graph/graphtools.py
    Added FrozenGraph.iter_arc_ngrams(self, ngram_order) which
    iterates over ngrams in the graph.  Minor refactoring to
    give graphs num_nodes and num_arcs properties.  Removed
    commented-out code.

________________________________________________________________________________
Commit at 2008-09-02 10:59:24 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 203   Last revision id: hsw@jhu.edu-20080902145516-b085ialjfa4dnmoe
Last revision date: 2008-09-02 10:55:16 -0400

pending merges:
  Ken Basye 2008-08-29 Minor coetext improvements and tried it out in graphtools
    Ken Basye 2008-08-29 Fix bug in mmf Sconscript file
    Ken Basye 2008-08-29 Add coetext.py, do some renaming
added:
  py/coe/textdata/coetext.py
modified:
  changes.txt
  py/coe/am/bwtrainer.log-ref
  py/coe/am/bwtrainer.py
  py/coe/am/gaussian.py
  py/coe/am/hmm.log-ref
  py/coe/am/hmm.py
  py/coe/am/hmm_mgr.py
  py/coe/am/modelmgr.py
  py/coe/am/testbwt.log-ref
  py/coe/am/testbwt.py
  py/coe/am/testhmm.log-ref
  py/coe/am/testhmm.py
  py/coe/containers/objectset.py
  py/coe/dataflow/framesynchronous.py
  py/coe/graph/graphtools.py
  py/coe/mmf/SConscript
  py/coe/mmf/testmmf.log-ref
  py/coe/mmf/testmmf.py
  py/coe/signalprocessing/channel.py
  py/coe/textdata/SConscript
  py/coe/textdata/yamldata.py
  py/coe/util/alignment.py

________________________________________________________________________________
Commit at 2008-09-02 10:55:15 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 202   Last revision id: hsw@jhu.edu-20080829142310-ow2p6x3s9zw3nih3
Last revision date: 2008-08-29 10:23:10 -0400

modified:
  py/coe/graph/graphsandbox.py
    Minor tweaks to a doctest and added a comment to myself.

________________________________________________________________________________
Commit at 2008-08-29 10:23:10 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 201   Last revision id: hsw@jhu.edu-20080825171159-powopnrt4vpj3roz
Last revision date: 2008-08-25 13:11:59 -0400

modified:
  py/coe/graph/graphtools.py
    Ongoing work on graph operations and support for
    weighted-finite-state-transducers.  Made better examples of random
    DAGs that look like speech output.  Added functions to help with
    dynamic garbage collection and fixed-part results generation in a
    lattice.  Added some support for closure generation.  Gave
    FrozenGraphs the __add__ operation, giving the disjoint union of
    the two arguments.  Work on graph product operations.
  py/coe/dataflow/simplecfg.py
    Integrated closure iterator changes.
added:
  py/coe/graph/graphsandbox.py
    Place for early-stage work on graph tools and algorithms.
    Currently early WFST work.
modified:
  py/coe/graph/SConscript
    Test graphsandbox.

________________________________________________________________________________
Commit at 2008-08-29 17:49:58 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Last revno: 203   Last revision id: kbasye1@jhu.edu-20080829161802-pqqllo3oa2oaltrr
Last revision date: 2008-08-29 12:18:02 -0400

modified:
  py/coe/graph/graphtools.py
  py/coe/textdata/coetext.py
    Made some minor improvements to coetext module to enhance
    usability.  These were based on the experience of building
    SerializedGraphTables2 in graphtools, an educational and marketing
    tool for using coetext :->.  Other minor cleanup.


________________________________________________________________________________
Commit at 2008-08-29 12:18:02 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Last revno: 202   Last revision id: kbasye1@jhu.edu-20080829144031-d37rcbpu3km4a70c
Last revision date: 2008-08-29 10:40:31 -0400

modified:
  py/coe/mmf/SConscript
    Use HLTCOE_PYTHON_EXEC from the Scons environment rather than just
    "python" which ends up resolving to /usr/bin/python.  On the Mac,
    the latter consistently generates an "import site failed" message.

________________________________________________________________________________
Commit at 2008-08-29 10:40:30 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Last revno: 201   Last revision id: hsw@jhu.edu-20080825171159-powopnrt4vpj3roz
Last revision date: 2008-08-25 13:11:59 -0400

added:
  py/coe/textdata/coetext.py
    This module introduces a serialization scheme between tuples of
    strings and a small set of Python objects.  Specifically, it
    allows reading and writing, via CoETextReader and CoETextWriter,
    respectively, of scalars, lists of scalars, Numpy arrays, and
    indexed collections of arbitrary objects.  The intent is to use
    this layer in connection with Yamldata{Reader,Writer} which
    convert between tuples of strings and YAML.
modified:
  py/coe/am/hmm.py
  py/coe/am/gaussian.py
    Renamed GMM and HMM to Gmm and Hmm, so get some consistency in how
    we use these names in other contexts.
  py/coe/am/bwtrainer.log-ref
  py/coe/am/bwtrainer.py
  py/coe/am/hmm.log-ref
  py/coe/am/hmm_mgr.py
  py/coe/am/modelmgr.py
  py/coe/am/testbwt.log-ref
  py/coe/am/testbwt.py
  py/coe/am/testhmm.log-ref
  py/coe/am/testhmm.py
  py/coe/dataflow/framesynchronous.py
  py/coe/mmf/testmmf.log-ref
  py/coe/mmf/testmmf.py
    Fallout from renaming described above.
  py/coe/containers/objectset.py
  py/coe/graph/graphtools.py
  py/coe/signalprocessing/channel.py
    Accomodate renaming of Yamldata header fields as described below.
  py/coe/textdata/SConscript
    Added coetext.py
  py/coe/textdata/yamldata.py
    Completed initial implementation of YamldataWriter, adding some
    new functionality in YamldataBase along the way.  Fixed a problem
    in YamldataReader where standalone tokens would be implicitly
    converted to types like int or float, which broke the reader.  We
    now convert these back to string so that the reader output is
    consistently a tuple of strings.  Renamed the header fields
    "data_type", "data_version", and "data_options" to "stream_XXX"
    since Yamldata is now, at least sometimes, a stream layer above a
    higher-level data representation layer.
  py/coe/util/alignment.py
    Improved documentation following some discussions with Chris

________________________________________________________________________________
Commit at 2008-08-25 13:11:59 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 200   Last revision id: hsw@jhu.edu-20080821165426-zitjy8vr03pcps1c
Last revision date: 2008-08-21 12:54:26 -0400

modified:
  py/coe/graph/graphtools.py
    Reworked the ending conditions for make_random_DAG.  Put in a
    commented-out dot_display() of a nice example of a speech-like
    graph.

________________________________________________________________________________
Commit at 2008-08-21 12:54:26 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 199   Last revision id: hsw@jhu.edu-20080821164821-y1fyapb94wjmn1sg
Last revision date: 2008-08-21 12:48:21 -0400

Merging in Ken's changes:
  Ken Basye 2008-08-14 Overhaul HMM network interface, TrainingGraph how allows same HMM in several places
    Ken Basye 2008-08-12 Overhaul debug printing interface
    Ken Basye 2008-08-11 Added new TrainingGraph tests and a better debug printing mechanism
    Ken Basye 2008-08-04 Add functionality to handle split probabilities to TrainingGraph, HMM bug fix, other minor work
    Ken Basye 2008-07-22 Adding function for converting from TrainingGraph to HMM
added:
  py/coe/am/hmm_mgr.py
  py/coe/am/testbwt.log-ref
  py/coe/am/testbwt.py
  py/coe/util/safediv.py
modified:
  changes.txt
  py/coe/am/SConscript
  py/coe/am/bwtrainer.log-ref
  py/coe/am/bwtrainer.py
  py/coe/am/gaussian.py
  py/coe/am/hmm.py
  py/coe/am/modelmgr.py
  py/coe/am/testhmm.py
  py/coe/dataflow/framesynchronous.py
  py/coe/util/SConscript
  py/coe/util/debugprint.py

________________________________________________________________________________
Commit at 2008-08-21 12:48:21 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 198   Last revision id: hsw@jhu.edu-20080721220150-o15k66h662lanxv2
Last revision date: 2008-07-21 18:01:50 -0400

modified:
  py/coe/graph/graphtools.py
    Added properties for startnodes and endnodes.  Work on yaml tools.
    Documentation review.

  py/coe/dataflow/simplecfg.py
    Lots of work on FSAs for lattice decoding.

________________________________________________________________________________
Commit at 2008-07-21 18:01:50 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 197   Last revision id: kbasye1@jhu.edu-20080717164919-5y38agqp5uork8en
Last revision date: 2008-07-17 12:49:19 -0400

modified:
  py/coe/dataflow/SConscript
  py/coe/dataflow/simplecfg.py
    Work on cfg generator/parser.  Integrate dprint usage.

  py/coe/am/gaussian.py
    Fixed a tuple.

  py/coe/util/SConscript
    Test nonparametric.py

added:
  py/coe/signalprocessing/toychannel.py
  py/coe/util/nonparametric.py
    Initial work with pylab and some modeling tools.

________________________________________________________________________________
Commit at 2008-08-14 13:38:43 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Last revno: 201   Last revision id: kbasye1@jhu.edu-20080812164458-xb4oz67xwmwk1yqs
Last revision date: 2008-08-12 12:44:58 -0400

    This checkin introduces a big change in the HMM adaptation
    interface.  The purpose of the change is to support adaptation of
    HMMs in a network context, and specifically to allow the same HMM
    to appear twice in the same network.  When that happens, the
    models in the HMM states will obviously be affected by both
    instances but in different ways.  To correctly keep track of
    adaptation state, e.g. alpha and beta values, for each instance, I
    have introduced an HmmTrainingContext class.  Clients of the
    network interface must keep track of these contexts and use them
    as appropriate.
added:
  py/coe/am/hmm_mgr.py
    Added class HmmMgr to manage HMMs as a collection.  At present
    this is a very simple class; it doesn't have anything to do with
    accumulation or adaptation in the way that GmmMgr does.  This may
    change in the future, though.
modified:
  py/coe/am/SConscript
    Added hmm_mgr.py
  py/coe/am/bwtrainer.py
    Switched to using an HmmMgr rather than an internally stored tuple
    of HMM instances.  Graphs used to build TrainingGraphs now have
    node tags which are pairs, a node tag and a model tag, which
    allows for the same model to appear at several different nodes in
    the graph.  Use new HMM network training interface.  Other minor
    cleanup and renaming.
  py/coe/am/hmm.py
    Overhaul of network adaptation interface.  Addition of HmmTraining
    Context class and use of this storage unit for training state in
    several functions.  Several internal functions now get important
    state via arguments rather than instance-local storage.  Note that
    accumulation for adapting transition probabilities is still done
    within HMMs, since even in the case of multiple instances, this is
    the right thing to do.  Did some renaming of "model manager"
    symbols to "gmm_mgr" since there are now also HmmMgr objects in
    the system (although none in this file).  Added rendering to dot
    notation for HMMs, following the model used by Hugh in
    graphtools.py.  We might want to think about using a mixin class
    here; my version of dot_display is identical to Hugh's.  Other
    minor cleanup.
  py/coe/am/modelmgr.py
    Factored some code common to different model managers into a base
    class - ModelManager.  To this class, I added __get_item__ to
    allow [] access and simple for-loop construction.
  py/coe/am/testbwt.log-ref
  py/coe/am/testbwt.py
    Added a test in which an HMM appears twice in the same graph -
    this certainly needs to be expanded. Renaming to gmm_mgr from mm.
  py/coe/am/testhmm.py
    Use of new network adaptation interface.

________________________________________________________________________________
Commit at 2008-08-12 12:44:58 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Last revno: 200   Last revision id: kbasye1@jhu.edu-20080811211102-zara1626fp718umf
Last revision date: 2008-08-11 17:11:02 -0400

modified:
  py/coe/am/bwtrainer.py
  py/coe/am/hmm.py
    Changed calls to use new prefix mechanism described below.
  py/coe/util/debugprint.py
    A fairly major interface overhaul.  The alternate stream argument,
    which used to go to dprint, now instead goes to the DebugPrint
    constructor.  Since the DebugPrint c'tor takes *keys as an arg and
    I didn't want to make specifying the stream mandatory, callers are now
    allowed to pass both keys and stream objects to the c'tor.  The
    interpretation is shown in this example:
      DebugPrint(key1, key2, stream1, key3, key4, stream2, key5)
    here, output from key1 and key2 will go to sys.stdout; output from
    key3 and key4 will go to stream1, and output from key5 will go to
    stream2.  Legal streams are either file objects, so that
    type(stream) == types.FileType or cStringIO objects.

    The dprint prefix argument was also removed, so that the dprint
    argument list could be simply dprint(key, *things).  In case
    things[0] is either of two new constants, DebugPrint_NO_PREFIX or
    DebugPrint.NEWLINE_PREFIX, prefix printing is suppressed
    completely or starts with a blank line, respectively.

    The main motivation was to allow dprint calls with multiple things
    to print, in which case they are concatenated into a single string
    with spaces between them.




________________________________________________________________________________
Commit at 2008-08-11 17:11:01 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Last revno: 199   Last revision id: kbasye1@jhu.edu-20080804153236-7jvuses5kx8hzhmp
Last revision date: 2008-08-04 11:32:36 -0400

added:
  py/coe/am/testbwt.log-ref
  py/coe/am/testbwt.py
    Added better tests of TrainingGraph; we may want to move some of
    the tests from bwtrainer.py to this file also.
modified:
  py/coe/am/SConscript
    Added testbwt.py and its log-ref file.
  py/coe/am/bwtrainer.py
    Added a new argument to convert_to_standalone_hmm which allows an
    alternate ModelManager for use by the resulting HMM.  This means
    it's easy to have the original TG and the new HMM *not* use the
    same ModelManager, so they don't stomp on each other's models in
    training.  Used new dcheck construction everywhere.
  py/coe/am/hmm.py
    Added new property for getting ModelManager from an HMM.  Used new
    dcheck construction everywhere.  Other very minor cleanup.
  py/coe/am/gaussian.py
  py/coe/am/modelmgr.py
    Used new dcheck construction everywhere.
  py/coe/util/debugprint.py
    Added dcheck() function and examples; it returns either False or a
    partial function of dprint which can then be used in place of
    dprint.  This allows the construction:
      dc = dcheck("foo")
      dc and dc("my output string")
    with the effect that the arguments in the second call will only be
    evaluated when there's actually going to be some printing done.
    Using this construction gave a very big speedup, so we should use
    it all the time.




________________________________________________________________________________
Commit at 2008-08-04 11:32:36 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Last revno: 198   Last revision id: kbasye1@jhu.edu-20080722201948-wj2j2opgp6rlykox
Last revision date: 2008-07-22 16:19:48 -0400

added:
  py/coe/util/safediv.py
    Factored code for safely dividing Numpy FP arrays where the denominator array may have 0.0
    values since I was now doing this in several places.  The division is done element-wise, and the
    function will raise a ValueError if a 0.0 appears as a denominator without the corresponding
    numerator also being 0.0.  The NaNs resulting from 0.0/0.0 operations are replaced with 0.0
    values.  The function suppresses the usual warnings to stderr generated by such operations.
modified:
  py/coe/am/bwtrainer.log-ref
    Added output from new tests; the old tests' outputs haven't changed at all.
  py/coe/am/bwtrainer.py
    Introduced functionality to take, store, and train probabilities on transitions between nodes in
    a TrainingGraph.  These are referred to in the code as "split probabilities" since they are only
    relevant in places where a single node has more than one successor, i.e., a split.  The
    TrainingGraph constructor has a new argument in the form of a dictionary to take these values;
    see the documentation string for TrainingGraph for the details.  Added internal functions to
    store and train these values and fixed convert_to_standalone_hmm to use these values instead of
    the previous hackish behavior.  Added several new tests which verify that building a
    TrainingGraph, T1, from smaller HMMs, converting it to a standalone HMM, H1, then training T1
    and H1 on identical data to get T2 and H2, respectively, and then finally converting T2 to a
    standalone HMM H3, gives two models H2 and H3 which are identical.  NOTE!: At present these
    tests all use dummy models which return observation likelihoods of 1.  I'm just about certain
    there's a small bug which will be tickled when I try real scores, but I wanted to get this big
    change in before finding and fixing this problem.
  py/coe/am/hmm.py
    Renamed HMM function build_forward_model to build_forward_model_compact and added
    function build_forward_model_exact.  The latter builds HMMs with as many input and output states
    as there are unique ways in and out of the model, so not two entries or exits share the same
    state.  This topology allows networked HMMs to exactly capture the transition behavior of
    standalone HMMs.  Fixed a bug in process_one_frame_forward in which we were returning a
    reference to a member rather than a copy, which led to errors when a client wrote on the
    memory.  Added functions get_output_gammas, get_output_betas, and get_input_betas for the
    benefit of network-mode clients who need these values to computing inter-node transition
    probabilities.  Other minor improvements.
  py/coe/dataflow/framesynchronous.py
    Use new name for build_forward_model; please see above.
  py/coe/util/SConscript
    Added safediv.py to list of files to be built and tested.


________________________________________________________________________________
Commit at 2008-07-22 16:19:48 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Last revno: 197   Last revision id: kbasye1@jhu.edu-20080717164919-5y38agqp5uork8en
Last revision date: 2008-07-17 12:49:19 -0400

modified:
  py/coe/am/bwtrainer.log-ref
  py/coe/am/bwtrainer.py
    Added a function for converting from TrainingGraphs to standalone
    HMM instances.  Right now this function deals with splits in the
    TrainingGraph lattice in a trivial way, by dividing the transition
    probabilities by the arity of the split.  Added a simple test of
    this function.  Also changed logref tests to use wider Numpy
    linewidths (200) so that 2D Numpy arrays have a much better chance
    of using one line per row.
  py/coe/am/hmm.py
    Minor renaming and a couple new properties needed by the function
    mentioned above.



________________________________________________________________________________
Commit at 2008-07-17 12:49:18 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Last revno: 196   Last revision id: hsw@jhu.edu-20080702214632-3kw40eyp0km9w0fd
Last revision date: 2008-07-02 17:46:32 -0400

added:
  py/coe/am/bwtrainer.log-ref
  py/coe/am/bwtrainer.py
    Initial version of a Baum-Welch trainer for HMMs.  This allows
    clients to build lattices of HMMs and train all of them from an
    observation sequence.
modified:
  py/coe/am/SConscript
    Added bwtrainer.py as a built file with both doctest and logref testing.
  py/coe/am/gaussian.py
    Wrapped some numerically sensitive Numpy calls in a try-except to
    allow useful diagnostic printing.  Added some other diagnostic
    printing.
  py/coe/am/hmm.log-ref
  py/coe/am/hmm.py
    Fixed two bugs, one in new code and one in old code.  These fixes
    mean that prior versions of this code can't be trusted and
    shouldn't be used for real work.  Other minor changes.
    Test results changed in significant ways as a result.
  py/coe/am/modelmgr.py
    Added some asserts and diagnostic printing functionality,
    including a __str__ function for GMMAccumSet.
  py/coe/am/testhmm.log-ref
  py/coe/am/testhmm.py
    Fixed a bug in several tests which were causing them to show
    differences between training GMMs by themselves and training them
    in one-state HMMs.  Now there are no such differences.  Added one
    more version of these tests.
  py/coe/util/debugprint.py
    Removed special sematics associated with using None as a key.
    Previously this was supposed to mean not to activate any keys, but
    the implementation was actually broken and, in any event, couldn't
    be used in conjunction with multiple keys.  So, when clients want
    a local condition to control debug printing, instead of writing:
      with DebugPrint("foo" if cond else None):
    they should write:
      with DebugPrint("foo") if cond else DebugPrint():
    An empty argument to DebugPrint means 'don't activate any keys'.
    Improved testing and doc strings.



________________________________________________________________________________
Commit at 2008-07-02 17:46:31 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 195   Last revision id: kbasye1@jhu.edu-20080702183953-fzsku1yby66t6wh0
Last revision date: 2008-07-02 14:39:53 -0400

renamed:
  py/coe/dataflow/processor.py => py/coe/dataflow/source.py

modified:
  py/coe/dataflow/source.py
    Lots of cleanup and documentation improvements.

    Fixed problem of objects not being deleted due to circular
    references through threads.  It's arguable that we're working
    around a bug in Python 2.5.2 in threading.py where the Thread
    object holds onto its target function even after that function
    returns....
  py/coe/dataflow/SConscript
    Integrate renaming of processor.py => source.py

  bin/tools/buildsox.sh
    More work towards building a truly statically linked version of sox.

  py/coe/dataflow/simplecfg.py
    Steps towards keeping backtrace info.  Still work to be done.

  py/coe/util/debugprint.py
    Tweaked a test to not leave output on stderr.

  py/coe/util/streamprocess.py
    Renaming for doctests.  Added a test of ChainProcessor.  Cleanup.

________________________________________________________________________________
Commit at 2008-07-02 14:39:53 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Last revno: 194   Last revision id: kbasye1@jhu.edu-20080701174541-427wv3z05mqzohpg
Last revision date: 2008-07-01 13:45:41 -0400

modified:
  py/coe/am/hmm.log-ref
  py/coe/am/hmm.py
  py/coe/am/modelmgr.py
  py/coe/am/testhmm.log-ref
  py/coe/am/testhmm.py
  py/coe/dataflow/framesynchronous.py
  py/coe/mmf/testmmf.log-ref
  py/coe/mmf/testmmf.py
    Renamed ModelManager to GmmMgr in anticipation of introducing
    several other manager classes.  Also added a new test to
    testhmm.py, although this isn't used in standard tests at this
    point.


________________________________________________________________________________
Commit at 2008-07-01 13:45:41 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Last revno: 193   Last revision id: kbasye1@jhu.edu-20080606143430-13n79vx9flsskbj2
Last revision date: 2008-06-06 10:34:30 -0400

modified:
  py/coe/am/hmm.py
    Fixed a bug in training where transition probablities were
    incorrectly estimated in cases where models were shared between
    states.  Added some debug printing and validation of inputs.
    Fixed several aspects of network adaptation; previous versions of
    this code shouldn't be used for anything as they're quite wrong in
    subtle ways.
  py/coe/am/testhmm.log-ref
  py/coe/am/testhmm.py
    Added tests of a simple HMM with number of inputs different from
    number of outputs for both standalone and network adaptation.
  py/coe/util/debugprint.py
    Changed DebugPrint constructor to take *keys instead of key so
    it's easy to activate multiple keys in a single 'with' construct.
    Added a newline to the end of every output from dprint() since it
    didn't really make sense to allow multiple dprints to share the
    same line and this avoids dprint callers having to add their own
    ending newlines all over the place.






________________________________________________________________________________
Commit at 2008-06-06 10:34:30 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Last revno: 192   Last revision id: kbasye1@jhu.edu-20080605135817-aa3rglk8xb2ypiqx
Last revision date: 2008-06-05 09:58:17 -0400

modified:
  py/coe/am/gaussian.py
  py/coe/am/hmm.py
  py/coe/am/modelmgr.py
    Replaced many commented-out print statements with use of dprint.
    As a start on a convention, each dprint uses a symbol constructed
    as a string x_y where x is an abbreviation for the module and y
    is an abbreviation for the function doing the printing.  We may
    want to move to, or add, symbols which are more functional in
    nature rather than being so closely tied to code structure.
  py/coe/util/debugprint.py
    Fixed a bug and added a simple way to make a local decision about
    whether to turn on printing; arrange to pass None to DebugPrint if
    you don't want printing turned on.


________________________________________________________________________________
Commit at 2008-06-05 09:58:17 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Last revno: 191   Last revision id: kbasye1@jhu.edu-20080529202949-65ubg9yyincjloqz
Last revision date: 2008-05-29 16:29:49 -0400

added:
  py/coe/util/debugprint.py
    Introduced support for conditional diagnostic printing based on
    activation of keys.
modified:
  py/coe/am/hmm.py
    Changes to network adaptation behavior; this is still work in progress.
  py/coe/am/gaussian.py
  py/coe/am/modelmgr.py
    Added some debug printing.
  py/coe/util/SConscript
    Added debugprint.py

________________________________________________________________________________
Commit at 2008-05-29 16:29:49 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Last revno: 190   Last revision id: kbasye1@jhu.edu-20080522144503-aihwyqiy28lc8bz1
Last revision date: 2008-05-22 10:45:03 -0400

modified:
  py/coe/am/hmm.py
   Removed useless argument from init_for_backward_pass.  We now include
   the list of ModelManager indices when converting to string.
   Finished implementation of _get_betas_for_frame, which was
   incomplete in my last checkin.
  py/coe/am/modelmgr.py
   Removed buggy assert, replacing it with a better check and
   consolidating index and state checking code a bit.
  py/coe/graph/graphtools.py
   Added itertags_reverse and iterids_reverse to FrozenGraph; these
   functions behave just like itertags and iterids but in reverse,
   that is, they iterate with respect to in-arcs rather than out-arcs.
   Other minor doc cleanup.
  py/coe/am/hmm.log-ref
  py/coe/am/testhmm.log-ref
  py/coe/mmf/testmmf.log-ref
   New log files to account for some additional printing in HMMs.


________________________________________________________________________________
Commit at 2008-05-22 10:45:03 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Last revno: 189   Last revision id: hsw@hodain.net-20080515140537-kbl4qcao86r5wsn2
Last revision date: 2008-05-15 10:05:37 -0400

modified:
  py/coe/am/SConscript
    Added modelmgr.py here; I'd forgotten to do this when I orginally
    added the file.
  py/coe/am/hmm.log-ref
    Added a couple new tests to the logref testing in hmm.py
  py/coe/am/hmm.py
    Introduction of "network" adaptation interface.  The intent is to
    support use of HMMs connect together in a lattice, similar in
    spirit to the lattice structures built dynamically in Hugh's
    framesynchronous.py code, except that these lattices will probably
    be static (I have the lattice training code in progress).  See
    tests and comments in the code for a deeper description of how to drive this
    interface.  This is work in progress, so the new interface maybe
    somewhat unstable as work on the client progresses.
  py/coe/am/modelmgr.py
    A fairly major overhaul.  Added a new state control interface that
    makes the sequence of steps for adaptation explicit.  Various
    functions check to make sure we're in the right state for them to
    be called, and clients must explicitly change states.  The intent
    is to support use of some functionality from N clients at a lower
    level, while a single client at a higher level deals with the
    state sequencing.  Also this class now treats models more
    individually; previously many operations caused something to
    happen to all the models being managed.  Now clients ask for
    something to happen to specific models they're using and we do
    things only to those models.  Other minor cleanup and refactoring.
  py/coe/am/testhmm.py
    Modified to use new ModelManager state control.

________________________________________________________________________________
Commit at 2008-05-15 09:35:55 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 187   Last revision id: hsw@jhu.edu-20080514210756-7nmavkaibtmg5bs7
Last revision date: 2008-05-14 17:07:56 -0400

modified:
  py/coe/util/__init__.py
    Added opentemp(), a context manager for opening a temporary file.

  py/coe/audio/soxy.py
  py/coe/audio/soxy.log-ref
    Use new opentemp() so as to not leave 'monkey.au' and 'monkey.wav'
    terds in the top-level directory.

  py/coe/audio/audiofile.py
  py/coe/coe_py_compile.py
  py/coe/graph/graphtools.py
    Switch to using opentemp() for temporary files.

  site_scons/site_tools/HLTCOE.py
  sandbox/eventdet/eventchain.log-ref
    Fixes and additions to test log normalizing code.

  py/coe/dataflow/simplecfg.py
    Ongoing changes.

________________________________________________________________________________
Commit at 2008-05-14 17:07:56 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 186   Last revision id: hsw@jhu.edu-20080514205518-xg40a43oa6kac8d2
Last revision date: 2008-05-14 16:55:18 -0400

modified:
  site_scons/site_tools/PyTools.py
    Use the env to figure out the build-dir prefix for filtering

  py/coe/graph/graphtools.py
    Tweaked comments.

________________________________________________________________________________
Commit at 2008-05-14 16:55:18 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 185   Last revision id: kbasye1@jhu.edu-20080513214009-mbsyy6w8n1wjhpqx
Last revision date: 2008-05-13 17:40:09 -0400

modified:
  site_scons/site_tools/PyTools.py
    At Ken's urging, fixed the Py file scanner to capture intermodule
    dependencies.  The solution here isn't quite right because it's
    working at the Py-file to Pyc-file level.  The correct solution is
    to work at the testing of Pycs level.  For now, the implemented
    solution unnecessarily recompiles files before re-running the
    tests that depend on modifications to Py files.

  py/coe/graph/graphtools.py
    Added support for DOT file generation and display, via
    FrozenGraph.dot_iter() and FrozenGraph.dot_display().
  README.txt
    Tweaked in anticipation of new readers.

added:
  py/coe/dataflow/simplecfg.py
    Simpler productions model, more sophisticated work on generating
    and parsing.  Work in progress.

________________________________________________________________________________
Commit at 2008-05-13 17:40:09 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Last revno: 184   Last revision id: kbasye1@jhu.edu-20080509214631-ah3fw1grpu6spgpf
Last revision date: 2008-05-09 17:46:31 -0400

added:
  py/coe/am/modelmgr.py
    New class ModelManager.  This now handles the majority of the
    accumulation for adaptation formerly handled by the HMM class.
    The previous architecture didn't allow two HMM states to share the
    same underlying GMM, which will certainly be needed.
modified:
  py/coe/am/classifier.py
    Updated for new formatting of model parameters introduced in a
    previous checkin; scons didn't manage to show me this problem at
    the time.
  py/coe/am/gaussian.py
    Minor changes - list of legal covariance types is now here.
  py/coe/am/hmm.py
    HMM buiding functions now take a ModelManager and a sequence of
    indices rather than a list of actual models.  Most accumulation
    code now moved to modelmgr.  Note that this leaves us with a
    somewhat unfortunate split of code dealing with model adaptation
    and that dealing with transition probability adaptation, but I
    don't think this can be avoided.
  py/coe/am/testhmm.py
    Reworked to deal with new scheme for building HMMs
  py/coe/dataflow/SConscript
    Fixed for new filename spelling in previous checkin - Sorry.
  py/coe/dataflow/framesynchronous.py
  py/coe/mmf/testmmf.py
    Reworked to deal with new scheme for building HMMs


________________________________________________________________________________
Commit at 2008-05-09 17:46:30 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Last revno: 183   Last revision id: kbasye1@jhu.edu-20080508152957-75vocly6shuj95uh
Last revision date: 2008-05-08 11:29:57 -0400

renamed:
  py/coe/dataflow/framesyncronous.py => py/coe/dataflow/framesynchronous.py
    I got caught by this, so I'm fixing it now.
modified:
  py/coe/am/hmm.py
    Added support for user data in HMM, as expected by
    framesynchronous code.  Made HMM.scores return a tuple rather than
    an array so that the result can be tested as a boolean.  Fixed a
    bug where has_output wasn't a property.  Modified tests to reflect
    recent changes to ForwardSequence3 tests.
  py/coe/dataflow/framesynchronous.py
    Added, in about 20 lines of code, the ability to use HMMs in
    place of ForwardSequence3s in the third generation example.
    Duplicated tests; results match exactly.


________________________________________________________________________________
Commit at 2008-05-08 11:29:57 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Last revno: 182   Last revision id: hsw@jhu.edu-20080507204636-e4pappqo9zf0zccf
Last revision date: 2008-05-07 16:46:36 -0400

added:
  py/coe/am/testhmm.log-ref
  py/coe/am/testhmm.py
    Added a file of tests used to validate HMM adaptation.  I compared
    training GMMs embedded in HMMs to training unembedded GMMs; the
    results were close, but not exact.  With ChrisW's help, I compared
    training HMMs with this system to training with HTK.  The results
    were quite close.  Specifically, we ran BW on 400 sequences of 11
    frames through HMMs in both HTK and our code.  The observations
    were generated as 2, 3, and 6 samples, respectively, from 3
    different 2-dimensional distributions.  Models were dumped after 1
    and 4 passes of BW.  The model means, vars, and the transition
    probs are all within 1 part in 1000 between the two systems.
modified:
  py/coe/am/SConscript
    Adding testhmm.py
  py/coe/am/gaussian.py
    Switched to printing out means and vars with 4 digits ("%.4f")
    rather than 2.  Other minor cleanup.
  py/coe/am/hmm.log-ref
  py/coe/am/hmm.py'
    Substantial overhaul of HMM class.  I removed the graph structure
    since it wasn't proving useful for anything.  The building
    interface is now more general, allowing both forward (left-right)
    models with any fixed amount of skipping, and more general models
    with client-provided transition matrices.  I added functions that
    provide the ForwardSequence3 interface from Hugh's work and
    verified that his tests pass with these objects.  I also added
    support for diagonal covariance GMMs as the underlying model; note
    that uniformity of covariance type is required across all the
    states in a given model.
  py/coe/mmf/mmf.g
    Fixed a bug where I was adding new attributes to a class rather
    than an instance.  The symptoms were that only the last values
    were available, since every result contained the same entity.
  py/coe/mmf/testmmf.log-ref
    Accounting for bug fix above.
  py/coe/mmf/testmmf.py
    Minor cleanup and added some useful printing from my debugging
    work.


________________________________________________________________________________
Commit at 2008-05-07 16:46:36 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 181   Last revision id: hsw@jhu.edu-20080501140508-o1evbw1cqkjbcv6l
Last revision date: 2008-05-01 10:05:08 -0400

modified:
  py/coe/dataflow/cfg.py
    Fixed some subtle bugs.  More work towards a client-centric
    factoring of the generatin/recognition process.

modified:
  py/coe/dataflow/framesyncronous.py
    Work to finish toy_model3 and ForwardSequence3.  They now work.
    The big change is that epsilon HMM sequences are now reasonable
    and suppor the multi-score inter-HMM token-passing semantics.

________________________________________________________________________________
Commit at 2008-05-01 10:05:08 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 180   Last revision id: hsw@hodain.net-20080430220005-t0xw0gxwjwqk1j27
Last revision date: 2008-04-30 18:00:05 -0400

modified:
  py/coe/builtin.py
    Fixed a bug in frozendict where it wasn't correctly checking
    immutability of contained items.  Made copy construction of frozen
    containers more consistent.  Other minor cleanup.
  py/coe/containers/__init__.py
    Added more utility functions for working with uniqued tuples and bijections.
  py/coe/dataflow/cfg.py
    Handle copy construction in Grammar.  Integrate new container
    utility functions.  Added some more tests.

________________________________________________________________________________
Commit at 2008-04-30 17:48:38 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 178   Last revision id: kbasye1@jhu.edu-20080423153947-8cpbcuy2ldufwski
Last revision date: 2008-04-23 11:39:47 -0400

modified:
  py/coe/dataflow/SConscript
added:
  py/coe/dataflow/cfg.py
    Work on CFG grammars.  This is just a checkpoint exploring various
    approaches and options.

modified:
  py/coe/dataflow/framesyncronous.py
    Minor cleanup.
  py/coe/builtin.py
    Don't generate new instances when copying frozen containers

modified:
  cpp/liveaudio/audiomodule.cpp
  cpp/liveaudio/hltcoe_defs.h
    A little bit of work on live input, steps towards noticing when
    audio devices are added or removed.

________________________________________________________________________________
Commit at 2008-04-23 11:39:47 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Last revno: 177   Last revision id: kbasye1@jhu.edu-20080416162111-8y87wi94ghwvkwgx
Last revision date: 2008-04-16 12:21:11 -0400

added:
  py/coe/mmf/
  py/coe/mmf/SConscript
  py/coe/mmf/mmf.g
  py/coe/mmf/mmf1.mmf
  py/coe/mmf/mmf4.mmf
  py/coe/mmf/start.mmf
  py/coe/mmf/testmmf.log-ref
  py/coe/mmf/testmmf.py
    Initial code for parsing HTK MMF model files.  Support is quite
    limited at this point, in particular there's no support for
    mixture models.  The real work is done in mmf.g, a grammar
    description in YAPPS2 format (see below).  Parsing results are
    returned as a fairly complex Python structure which will likely
    evolve.  testmmf.py illustrates the return structure and how to
    use it to construct HMM models.  The *.mmf files are examples I
    got from Chris used for testing.
  py/yapps2/
  py/yapps2/LICENSE
  py/yapps2/Makefile
  py/yapps2/NOTES
  py/yapps2/README.COE
  py/yapps2/__init__.py
  py/yapps2/examples/
  py/yapps2/examples/calc.g
  py/yapps2/examples/calc.py
  py/yapps2/examples/expr.g
  py/yapps2/examples/lisp.g
  py/yapps2/examples/lisp.py
  py/yapps2/examples/test.g
  py/yapps2/manual/
  py/yapps2/manual/footnode.html
  py/yapps2/manual/img1.png
  py/yapps2/manual/index.html
  py/yapps2/manual/node1.html
  py/yapps2/manual/node10.html
  py/yapps2/manual/node11.html
  py/yapps2/manual/node2.html
  py/yapps2/manual/node3.html
  py/yapps2/manual/node4.html
  py/yapps2/manual/node5.html
  py/yapps2/manual/node6.html
  py/yapps2/manual/node7.html
  py/yapps2/manual/node8.html
  py/yapps2/manual/node9.html
  py/yapps2/manual/yapps2.css
  py/yapps2/manual/yapps2.html
  py/yapps2/parsedesc.g
  py/yapps2/yapps2.py
  py/yapps2/yapps2.tex
  py/yapps2/yapps2.zip
  py/yapps2/yappsrt.py
    Complete version of yapps2 (2.0.4) written by Amit J. Patel.  This
    is a simple LL(1) parser generator written in Python and
    generating Python parsers.  I made some local changes; see the
    README.COE file for details.
modified:
  SConscript
    Added py/coe/mmf to the list of processed directories
  py/coe/am/gaussian.py
    Minor cleanup
  py/coe/am/hmm.py
    Added support for client-provided transition probabilities.  Also
    fixed _get_xis function so that it no longer generates FP warnings
    as a result of dividing 0.0 by 0.0.  This eliminated the need for
    a separate debug version of the function.
  py/coe/textdata/textdata.log-ref
    Changed line at the top of this log where the command is echoed,
    see below.
  site_scons/site_tools/PyTools.py
    The newly added testmmf.py is the first file to use both
    "doctest_files" and "logref" options to PyFile.  It refers to
    local data files with unqualified names, which didn't work
    since logref testing was done without a chdir to the directory
    of the test file.  Now logref testing does this chdir.


________________________________________________________________________________
Commit at 2008-04-16 12:21:11 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Last revno: 176   Last revision id: kbasye1@jhu.edu-20080410005458-rv6ielvhha6q3vlx
Last revision date: 2008-04-09 20:54:58 -0400

modified:
  py/coe/am/gaussian.py
  py/coe/am/hmm.log-ref
  py/coe/am/hmm.py
    More work on verification of HMM training.  Added a few more
    functions to DummyModel so it can better pretend to be trainable.
    Modified hmm.py test1() function to do multiple passes (note that
    each pass generates new data).  Enhanced some diagnostic printing,
    and switched to calling the debug version of get_xis, since it
    doesn't spew warnings about division by 0.

________________________________________________________________________________
Commit at 2008-04-09 20:54:58 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Last revno: 175   Last revision id: kbasye1@jhu.edu-20080407205420-p8kfjmd4bgqyb2n8
Last revision date: 2008-04-07 16:54:20 -0400

removed:
  py/coe/am/testhmm.py
    I had previously moved the one test function in this file into
    hmm.py, where I'm now using it (see below), so this file wasn't
    really needed.
added:
  py/coe/am/hmm.log-ref
    Reference file for hmm.py now that it's using logref testing.
modified:
  py/coe/am/SConscript
  py/coe/am/hmm.py
    Changed hmm.py to use logref testing.  Made some minor changes
    suggested by Hugh in an overview of the code.  Note that there are
    still some questions about whether the trained transition
    probabilities are correct.




________________________________________________________________________________
Commit at 2008-04-07 16:54:20 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Last revno: 174   Last revision id: hsw@jhu.edu-20080402013154-n6ruu5mp5b79u8ed
Last revision date: 2008-04-01 21:31:54 -0400

added:
  py/coe/am/testhmm.py
    A simple driver, which isn't run as part of the test of this file
    (or anywhere else right now).
modified:
  py/coe/am/SConscript
    Added hmm.py and testhmm.py to this file, so they both get tested
    by scons.
  py/coe/am/gaussian.py
    Added score_components functions to DummyModel and
    GaussianMixtureModel since they were needed for HMMs.  Note
    that DummyModel now responds like a 1-component mixture so it
    can be used in HMM tests.  HMM's currently assume that all
    underlying models are mixtures.
  py/coe/am/hmm.py
    Another round of HMM development.  Adaptation appears to be
    working now, but there's still validation to do.  Made several HMM
    attributes immutable.  Added a separate accumulator class to do
    some of the bookkeeping required by the BW algorithm.

________________________________________________________________________________
Commit at 2008-04-01 21:31:54 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 173   Last revision id: hsw@jhu.edu-20080402001334-zkuoappuul5vhpan
Last revision date: 2008-04-01 20:13:34 -0400

Initial work on HMM model templates.
modified:
  py/coe/dataflow/framesyncronous.py
  py/coe/graph/decodergraph.py
  py/coe/graph/graphtools.py

________________________________________________________________________________
Commit at 2008-04-01 20:13:33 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 172   Last revision id: hsw@jhu.edu-20080401212856-hb4n1mvoum9odgg3
Last revision date: 2008-04-01 17:28:56 -0400

Whoops.  Forgot to add this to the project.
added:
  py/coe/graph/decodergraph.py
modified:
  py/coe/graph/SConscript

________________________________________________________________________________
Commit at 2008-04-01 17:28:56 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 171   Last revision id: hsw@jhu.edu-20080331204144-1sx2502ntkcrwk5l
Last revision date: 2008-03-31 16:41:44 -0400

Changes to support graph-based decoding and training.  Gave TopologicalGraphBuilder an option
to allow self loops.  Added a graph builder that supports transition access while building.
More work on the toy decoder including a start at a grammar component.
modified:
  py/coe/dataflow/framesyncronous.py
  py/coe/graph/graphtools.py

________________________________________________________________________________
Commit at 2008-03-31 16:41:44 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 170   Last revision id: hsw@jhu.edu-20080328192502-6nzccy6xpn1pxav5
Last revision date: 2008-03-28 15:25:02 -0400

Refactored decoder example for correct skipping of HMMs and some
simplification too.  See now toy example 3 and related classes.  This
refactoring fixes the problem of skipping an HMM entirely; skipping
through an entire HMM is now correctly supported, this means that
epsilon HMMs are correctly supported.  The refactoring involved
breaking apart the decoding into a token-passing and activation phase
and a separate likelihood scoring phase.  Wrapped up in this are
important steps towards network-based HMMs, decoding, and training.

modified:
  py/coe/dataflow/framesyncronous.py

________________________________________________________________________________
Commit at 2008-03-28 15:25:02 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 169   Last revision id: hsw@jhu.edu-20080328175641-htumv85qtidpp3vw
Last revision date: 2008-03-28 13:56:41 -0400

Added per-frame normalization to the toy decoder.
modified:
  py/coe/dataflow/framesyncronous.py

________________________________________________________________________________
Commit at 2008-03-28 13:56:41 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 168   Last revision id: hsw@jhu.edu-20080328175248-fxq24lu6zyn55qot
Last revision date: 2008-03-28 13:52:48 -0400

Merged in Chris's changes.
added:
  projects/lm/
  projects/lm/Probs.py
  projects/lm/SConscript
  projects/lm/fileprob.py
  projects/lm/sample1
  projects/lm/switchboard-small
modified:
  SConscript
  changes.txt
pending merges:
  Chris White 2008-03-28 language model basic

________________________________________________________________________________
Commit at 2008-03-28 13:52:48 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 167   Last revision id: hsw@jhu.edu-20080328000636-lmlkha3s7g2xb3fu
Last revision date: 2008-03-27 20:06:36 -0400

Added activation logic to test branching and merging,
and to vary the number of states in the HMMs.
modified:
  py/coe/dataflow/framesyncronous.py

________________________________________________________________________________
Commit at 2008-03-28 13:14:33 -0400 by Chris White <chriswhite@sb-rt-cxw1.stieff.hltcoe.jhu.edu> from my_code
Last revno: 167   Last revision id: hsw@jhu.edu-20080328000636-lmlkha3s7g2xb3fu
Last revision date: 2008-03-27 20:06:36 -0400

Here's a basic language model -- four gram with 3 types of smoothing: uniform, add lambda, backoff with add lambda

added:
  projects/lm/
  projects/lm/Probs.py
  projects/lm/SConscript
  projects/lm/fileprob.py
  projects/lm/sample1
  projects/lm/switchboard-small
modified:
  SConscript

________________________________________________________________________________
Commit at 2008-03-27 20:06:36 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 166   Last revision id: hsw@jhu.edu-20080328000335-y8zuavxxs6lgyclt
Last revision date: 2008-03-27 20:03:35 -0400

Merged in Ken's changes.
modified:
  changes.txt
  py/coe/am/gaussian.py
  py/coe/am/hmm.py
pending merges:
  Ken Basye 2008-03-27 Reworking HMM code and adding DummyModel to gaussian.py

________________________________________________________________________________
Commit at 2008-03-27 20:03:35 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 165   Last revision id: hsw@jhu.edu-20080325205051-fz50jnvv6ufvln4w
Last revision date: 2008-03-25 16:50:51 -0400

Work on real HMMs for decoding.  Still toy examples.  But probability
mass preservation is now demonstrated in _toy_example_2().
modified:
  py/coe/dataflow/framesyncronous.py

Added tuplen() which I find useful.
modified:
  py/coe/containers/__init__.py

________________________________________________________________________________
Commit at 2008-03-27 18:09:30 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Last revno: 165   Last revision id: hsw@jhu.edu-20080325205051-fz50jnvv6ufvln4w
Last revision date: 2008-03-25 16:50:51 -0400

modified:
  py/coe/am/gaussian.py
Added DummyModel, which always gives a fixed score no matter what data
you feed in.  Note that it still has a dimension and does checks on
data you want to score, though, as this makes it easier to plug into
real code.
  py/coe/am/hmm.py
Substantial reworking.  Added a new building function allowing clients
to provide their own models instead of making them up, and removed the
automatic building of models from the __init__ function.  Added two
new functions, clear_likelihoods() and process_one_frame(), which
support decoding.  Broke both scoring and alpha calculation into
frame and sequence versions, where the latter call the former to do
the essential calculation.  Previously, everything was done at the
sequence level.  Removed bogus dummy scoring code and replaced it with
use of DummyModels in testing; results were unchanged.


________________________________________________________________________________
Commit at 2008-03-25 16:50:51 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 164   Last revision id: hsw@jhu.edu-20080325204815-mm3uz487rueaymaq
Last revision date: 2008-03-25 16:48:15 -0400

Merged in Ken's changes.
added:
  py/coe/am/hmm.py
modified:
  changes.txt
  py/coe/am/gaussian.py
pending merges:
  Ken Basye 2008-03-25 Initial HMM implementation and augmented printing in gaussian.py

________________________________________________________________________________
Commit at 2008-03-25 16:48:15 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 163   Last revision id: hsw@jhu.edu-20080321135634-45zbat5xjcexopox
Last revision date: 2008-03-21 09:56:34 -0400

Added a pedagogical example of the top-level a frame-synchronous
decoding methodology and a (very) toy example of its usage.
added:
  py/coe/dataflow/framesyncronous.py
modified:
  py/coe/dataflow/SConscript

Started work on modeling of discrete scalar spaces (semi-rings).
modified:
  py/coe/util/discrete.py

________________________________________________________________________________
Commit at 2008-03-25 11:28:03 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Last revno: 163   Last revision id: hsw@jhu.edu-20080321135634-45zbat5xjcexopox
Last revision date: 2008-03-21 09:56:34 -0400

added:
  py/coe/am/hmm.py
  Partial implementation of hidden markov models.  Model construction
  with one simple topology is supported; training is not yet working.
  This file hasn't been added to the SConscript file yet, since its
  tests don't pass at present.
modified:
  py/coe/am/gaussian.py
  Added additional diagnostic printing functionality as part of my
  effort to track down a platform difference in the test of
  SimpleGaussianModel.  The difference I observed was between Mac and
  Win32, and (suspiciously) it occurs in the same place that Hugh
  observed a difference between Mac and Linux.  Thus Hugh's doctest workaround
  (search for ELLIPSIS) also works around the problem I encountered.
  Even more curiously, the difference I saw only showed up after I
  added some tests to the GMM class, which (one might have thought) is
  completely separate, although it does happen to run first.  My
  working hypothesis is that something in the GMM testing sets some
  internal FP state on one or the other platform and this internal
  state then causes differences is certain later FP computations.
  YA reason to hate FP.


________________________________________________________________________________
Commit at 2008-03-21 09:56:34 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 162   Last revision id: hsw@hodain.net-20080321134055-pxmaxgkxe25n35n0
Last revision date: 2008-03-21 09:40:55 -0400

Merging in Ken's changes.
added:
  py/coe/util/ROCutils.py
modified:
  changes.txt
  py/coe/am/gaussian.py
pending merges:
  Ken Basye 2008-03-18 Added training for full covariance models and log-likelihood scoring

________________________________________________________________________________
Commit at 2008-03-20 17:03:16 -0400 by Hugh Secker-Walker <hugh@VmUbuntu> from code
Last revno: 160   Last revision id: hsw@jhu.edu-20080320202522-x9g0yosy90gx55iy
Last revision date: 2008-03-20 16:25:22 -0400

Minor tweaks and integration to get the platform-specific stuff working on Ubuntu.
renamed:
  bin/posix => bin/linux2-posix-i386-32bit-le
modified:
  py/coe/__init__.py
  site_scons/site_tools/HLTCOE.py

________________________________________________________________________________
Commit at 2008-03-20 16:25:22 -0400 by Hugh Secker-Walker <hsw@jhu.edu> from coe_repo
Last revno: 159   Last revision id: hsw@jhu.edu-20080313214113-9fcxew1au592edyp
Last revision date: 2008-03-13 17:41:13 -0400

Work on putting platform-specific binaries into the project, e.g. sox.
modified:
  py/coe/__init__.py
  py/sitecustomize.py
  site_scons/site_tools/HLTCOE.py
    Python and SCons support to put the platform-specific binary early on the PATH.
added:
  bin/darwin-posix-i386-32bit-le/
  bin/darwin-posix-i386-32bit-le/sox
    Statically linked version of sox for darwin/macports intel platform.
  bin/tools/buildsox.sh
    A tool for building it.
  py/coe/audio/soxversion.py
    A check that the correct version of sox is what gets run.

Significant advance for dataflow sources.
modified:
  py/coe/dataflow/processor.py
  py/coe/textdata/textdata.log-ref
  py/coe/util/streamprocess.py
    Added source processors that handle the push/pull "impedance
    matching" we need for dataflow processing.  The IteratorSource can
    pull from any iterator, and can introduce a simulated real-time
    throttling.  The NonBlockingSource has a push-based non-blocking
    interface.  Both sources have non-blocking supervisory methods to
    change the configuration while the source is running.  Both
    sources manage a separate thread to do the pushing through the
    dataflow network.

Minor enhancement, intended for live audio support.
added:
  cpp/liveaudio/delay_line.h
    A simple delay-line template class.
modified:
  cpp/liveaudio/hltcoe_defs.h
  cpp/liveaudio/main.cpp
  cpp/liveaudio/main.log-ref
    Integration of the delay line code.

modified:
  bin/README.txt
    Cleanup.

________________________________________________________________________________
Commit at 2008-03-18 14:39:25 -0400 by Ken Basye <kbasye1@jhu.edu> from code
Last revno: 157   Last revision id: basye@xp_vm_kens_mac-20080306150613-4we17kwvmfrabbci
Last revision date: 2008-03-06 10:06:13 -0500

added:
  py/coe/util/ROCutils.py

  Simple utilities for generating DET and ROC curves, including CSV
  output suitable for importing into a spreadsheet or other graphing
  tool.

modified:
  py/coe/am/gaussian.py

  Added negative log-likelihood scoring to both SimpleGaussianModel
  and GaussianMixtureModel.  Also added support for training full
  covariance models to both classes.  For GaussianMixtureModels, added
  a new method, adapt(), which adapts the models from their current
  state, whereas train() reinitializes them (currently it does this in
  a semi-random fashion, but I've added a placeholder for k-means
  initialization).  Fixed a few bugs uncovered by adding the first
  tests of full-covariance mixture models, and reworked some existing
  code to make somewhat more sensible use of Numpy.



________________________________________________________________________________
Commit at 2008-03-06 10:06:12 Eastern Standard Time by Ken Basye <Ken Basye@XP_VM_KENS_MAC> from code
Last revno: 156   Last revision id: kbasye1@jhu.edu-20080304184324-axshkxvyf32gj7vz
Last revision date: 2008-03-04 13:43:24 -0500

modified:
  bin/ckin.bat
  bin/prep.bat
  changes.txt

Fixed Win32 batch files so they run correctly.  These use the same style as
scons.bat, which means they'll only run from the top level directory.  See
a commented out line in scons.bat for an alternative that relies on having
an environment variable set.  Unfortunately, in order to make the
bzrtool.py script run, I needed to uninstall the simple binary-only bzr
program (via the Win32 Control Panel) and then install:
  1) The bzr Python-based installer
  2) PyCrypto
  3) PyCurl
  4) Paramiko

These are all required.  I also installed Pywin32 as it's "strongly
recommended."   All of these can be found from
http://bazaar-vcs.org/WindowsDownloads.

Also fixed earlier entries in changes.txt to conform to the newer style for
headers, except that I didn't add the nickname.  This was mostly just to
give me something to check in from Windows, but might come in handy at some
point.

________________________________________________________________________________
Commit at 2008-03-04 13:43:23 -0500 by Ken Basye <kbasye1@jhu.edu> from code
Last revno: 155   Last revision id: hsw@hodain.net-20080225223544-6gi784map4b1oeta
Last revision date: 2008-02-25 17:35:44 -0500

modified:
  bin/bzrtool.py
    Modified format for headers inserted into changes.txt; see above
    for an example :->.  Added a test mode which is used when __file__
    is "<stdin>" as it is when running from Emacs in Python mode.
    Subclassed BzrToolError from StandardError.  Fixed up %
    formatting to use tuples.
  projects/ddt/datagen.py
    Subclassed DataGenerator from object; SimpleGaussianModel
    initialization changes.
  projects/ddt/ddt.py
    Subclassed SimpleAllele and DDTExperimentPars from object; Fixed
    up % formatting to use tuples.
  projects/ddt/twoclass.py
    SimpleGaussianModel initialization changes.
  projects/std/mlfprocess.py
    Subclassed several classes from object, and one error class from
    StandardError instead of exception.  Fixed up % formatting to use
    tuples.
  py/coe/am/classifier.py
    Subclassed SimpleClassifier from object; SimpleGaussianModel
    initialization changes.
  py/coe/am/gaussian.py
    Added classes GaussianModelBase and GaussianMixtureModel; both the
    latter and SimpleGaussianModel are subclassed from
    GaussianModelBase, which takes the dimension and covariance type
    in the constructor and maintains these values as immutable.  The
    base class is now also holding the random number generator, so
    it's shared across all model instances of either type.
    Verification functionality is also now in the base class.  The new
    class, GaussianMixtureModel, has a ways to go but has basic
    functionality now working.
  py/coe/containers/objectset.py
  py/coe/signalprocessing/__init__.py
  py/coe/signalprocessing/spectrum.py
  py/coe/signalprocessing/window.py
  py/coe/textdata/tdutil.py
  py/coe/textdata/textdata.py
  py/coe/textdata/textfileprocess.py
  py/coe/util/freezetry.py
  py/coe/util/frozen.py
  py/coe/util/frozendict.py
    Changed all instances of "raise class, arg" to "raise class(arg)"
    at Python3000 will apparently require this.  Made sure a couple of
    classes were subclassed from object and fixed a few more %
    formatting instances




________________________________________________________________________________
Commit at 2008-02-22 -0500 17:23:04 by Ken Basye <kbasye1@jhu.edu>

modified:
  .bzrignore

Added comments.txt and comments.bak to this file so that bzr will stop
noticing them as unknown files.  Also removed ./bin/python from this
file, since we (no longer?) have such a directory.

________________________________________________________________________________
Commit at 2008-02-22 -0500 16:50:55 by Ken Basye <kbasye1@jhu.edu>

modified:
  README.txt

Modified section on version control to specify use of new commands
prep and ckin rather than doing "raw" bzr commits.

________________________________________________________________________________
Commit at 2008-02-22 -0500 17:07:29 by Ken Basye <kbasye1@jhu.edu>

modified:
  changes.txt

Retroactively added a line of underscores to previous checkin
comments.

________________________________________________________________________________
Commit at 2008-02-22 -0500 17:03:44 by Ken Basye <kbasye1@jhu.edu>

modified:
  bin/bzrtool.py

Moved header generation, which has name and time information, from
prep() to ckin(), so that time stamps will reflect the time of the
commit much more closely.  Also added a line of underscores at the
start of each header to make changes.txt easier to read.

________________________________________________________________________________
Commit at 2008-02-22 -0500 16:19:41 by Ken Basye <kbasye1@jhu.edu>

added:
  bin/bzrtool.py
  bin/ckin
  bin/ckin.bat
  bin/prep
  bin/prep.bat
  changes.txt

Initial version of tools to assist in maintaining a global change log
for the project.  Also an initial version of changes.txt, which
henceforth will be maintained automatically by these tools.  After I
get this working, I'll make an additional commit adding instructions
on using these tools to the top-level README file.

All the real work is done in bzrtool.py.  At this point there's
minimal work to make operations atomic, and none at all to deal with
interactions with servers.  This may be something we want to add
later, as I suspect there will be a lot more collisions.

================================================================================
This section entered by hand by Ken when this file was initially
created:

Some information about changes prior to the earliest entries in this
file may be gleaned from bzr logs.  Of course, complete information
can be obtained by diffing across versions.  As of this writing,
around 150 commits have been made to the project, most of them fairly
small.
